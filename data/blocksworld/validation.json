[
    {
        "idx": 435,
        "start": [
            [
                "table",
                "B",
                "A",
                "D",
                "C",
                "E"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "E"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "E",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "E": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. D is on A. C is on D. E is on C. E is clear.\n\nThe goal is:\nA is on the table. E is on A. E is clear.\nC is on the table. C is clear.\nD is on the table. B is on D. B is clear.\n",
        "system1_plan": "Move E from C to table | Move C from D to table | Move D from A to table | Move A from B to table | Move B from table to D | Move E from table to A",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A, D, C, E] | Plan so far [] | Exploring action Move E from C to table | New state -> Stack 1: [B, A, D, C], Stack 2: [E] | Exploring action Move C from D to E | New state -> Invalid | Exploring action Move A from B to E | New state -> Invalid | Taking action Move E from C to table | Moved to state -> Stack 1: [B, A, D, C], Stack 2: [E] | Plan so far [Move E from C to table] | Exploring action Move C from D to table | New state -> Stack 1: [B, A, D], Stack 2: [C], Stack 3: [E] | Exploring action Move C from D to E | New state -> Stack 1: [B, A, D], Stack 2: [E, C] | Exploring action Move E from table to C | New state -> Stack 1: [B, A, D, C, E] | Exploring action Move D from A to C | New state -> Invalid | Taking action Move C from D to table | Moved to state -> Stack 1: [B, A, D], Stack 2: [C], Stack 3: [E] | Plan so far [Move E from C to table | Move C from D to table] | Exploring action Move E from table to D | New state -> Stack 1: [B, A, D, E], Stack 2: [C] | Exploring action Move D from A to E | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [E, D] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move A from B to C | New state -> Invalid | Taking action Move D from A to table | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Plan so far [Move E from C to table | Move C from D to table | Move D from A to table] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move A from B to E | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D], Stack 4: [E, A] | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move E from C to table | Move C from D to table | Move D from A to table | Move A from B to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move E from table to A | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Plan so far [Move E from C to table | Move C from D to table | Move D from A to table | Move A from B to table | Move B from table to D] | Exploring action Move E from table to A | New state -> Stack 1: [A, E], Stack 2: [C], Stack 3: [D, B] | Exploring action Move A from table to B | New state -> Stack 1: [C], Stack 2: [D, B, A], Stack 3: [E] | Exploring action Move A from table to E | New state -> Stack 1: [C], Stack 2: [D, B], Stack 3: [E, A] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move D from table to E | New state -> Invalid | Taking action Move E from table to A | Moved to state -> Stack 1: [A, E], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move E from C to table | Move C from D to table | Move D from A to table | Move A from B to table | Move B from table to D | Move E from table to A] | Reached goal state!",
        "system2_states_v1": 24
    },
    {
        "idx": 263,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nC is on the table. C is clear.\nD is on the table. B is on D. B is clear.\n\nThe goal is:\nB is on the table. C is on B. D is on C. A is on D. A is clear.\n",
        "system1_plan": "Move B from D to table | Move C from table to B | Move D from table to C | Move A from table to D",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [] | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move B from D to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from D to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move B from D to table | Move C from table to B] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B, C, D] | Exploring action Move A from table to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B, C, D] | Plan so far [Move B from D to table | Move C from table to B | Move D from table to C] | Exploring action Move C from B to table | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [B, C, D, A] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move B from table to A | New state -> Invalid | Taking action Move A from table to D | Moved to state -> Stack 1: [B, C, D, A] | Plan so far [Move B from D to table | Move C from table to B | Move D from table to C | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 17
    },
    {
        "idx": 451,
        "start": [
            [
                "table",
                "A",
                "C",
                "B",
                "D",
                "E"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "E",
                "C",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "E",
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "E",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. B is on C. D is on B. E is on D. E is clear.\n\nThe goal is:\nA is on the table. D is on A. D is clear.\nE is on the table. C is on E. B is on C. B is clear.\n",
        "system1_plan": "Move E from D to table | Move D from B to table | Move B from C to table | Move C from A to E | Move B from table to C | Move D from table to A",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, B, D, E] | Plan so far [] | Exploring action Move C from A to E | New state -> Invalid | Exploring action Move E from D to table | New state -> Stack 1: [A, C, B, D], Stack 2: [E] | Exploring action Move C from A to table | New state -> Invalid | Taking action Move E from D to table | Moved to state -> Stack 1: [A, C, B, D], Stack 2: [E] | Plan so far [Move E from D to table] | Exploring action Move E from table to D | New state -> Stack 1: [A, C, B, D, E] | Exploring action Move D from B to table | New state -> Stack 1: [A, C, B], Stack 2: [D], Stack 3: [E] | Exploring action Move D from B to E | New state -> Stack 1: [A, C, B], Stack 2: [E, D] | Exploring action Move C from A to E | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A, C, B], Stack 2: [D], Stack 3: [E] | Plan so far [Move E from D to table | Move D from B to table] | Exploring action Move B from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Exploring action Move B from C to E | New state -> Stack 1: [A, C], Stack 2: [D], Stack 3: [E, B] | Exploring action Move C from A to table | New state -> Invalid | Exploring action Move E from table to D | New state -> Stack 1: [A, C, B], Stack 2: [D, E] | Taking action Move D from B to E | Moved to state -> Stack 1: [A, C, B], Stack 2: [E, D] | Plan so far [Move E from D to table | Move D from B to E] | Exploring action Move B from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [E, D] | Exploring action Move D from E to table | New state -> Stack 1: [A, C, B], Stack 2: [D], Stack 3: [E] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from C to D | New state -> Stack 1: [A, C], Stack 2: [E, D, B] | Taking action Move B from C to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Plan so far [Move E from D to table | Move D from B to table | Move B from C to table] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move C from A to E | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Exploring action Move A from table to B | New state -> Invalid | Taking action Move C from A to E | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Plan so far [Move E from D to table | Move D from B to table | Move B from C to table | Move C from A to E] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [E, C] | Exploring action Move E from table to B | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [D], Stack 3: [E, C, B] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [D, A], Stack 3: [E, C] | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [D], Stack 3: [E, C, B] | Plan so far [Move E from D to table | Move D from B to table | Move B from C to table | Move C from A to E | Move B from table to C] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Exploring action Move E from table to B | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [D, A], Stack 2: [E, C, B] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [E, C, B] | Taking action Move D from table to A | Moved to state -> Stack 1: [A, D], Stack 2: [E, C, B] | Plan so far [Move E from D to table | Move D from B to table | Move B from C to table | Move C from A to E | Move B from table to C | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 28
    },
    {
        "idx": 33,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. D is on B. D is clear.\nC is on the table. C is clear.\n\nThe goal is:\nA is on the table. A is clear.\nC is on the table. D is on C. B is on D. B is clear.\n",
        "system1_plan": "Move D from B to C | Move B from table to D",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [] | Exploring action Move D from B to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move B from table to A | New state -> Invalid | Taking action Move D from B to C | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move D from B to C] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C, D, B] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C, D, B] | Plan so far [Move D from B to C | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 34,
        "start": [
            [
                "table",
                "D",
                "C",
                "B",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B"
            ],
            [
                "table",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nD is on the table. C is on D. B is on C. A is on B. A is clear.\n\nThe goal is:\nA is on the table. B is on A. B is clear.\nD is on the table. C is on D. C is clear.\n",
        "system1_plan": "Move A from B to table | Move B from C to A",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [D, C, B, A] | Plan so far [] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [D, C, B] | Exploring action Move C from D to A | New state -> Invalid | Exploring action Move B from C to table | New state -> Invalid | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [D, C, B] | Plan so far [Move A from B to table] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from D to A | New state -> Invalid | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move A from table to B | New state -> Stack 1: [D, C, B, A] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move B from C to A | Moved to state -> Stack 1: [A, B], Stack 2: [D, C] | Plan so far [Move A from B to table | Move B from C to A] | Reached goal state!",
        "system2_states_v1": 8
    },
    {
        "idx": 156,
        "start": [
            [
                "table",
                "B",
                "C"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. C is on B. C is clear.\nD is on the table. A is on D. A is clear.\n\nThe goal is:\nB is on the table. A is on B. A is clear.\nD is on the table. C is on D. C is clear.\n",
        "system1_plan": "Move A from D to table | Move C from B to D | Move A from table to B",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, C], Stack 2: [D, A] | Plan so far [] | Exploring action Move C from B to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from D to C | New state -> Stack 1: [B, C, A], Stack 2: [D] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move A from D to table] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from B to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from B to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move C from B to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move A from D to table | Move C from B to D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [D, C, A] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move D from table to B | New state -> Invalid | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [D, C] | Plan so far [Move A from D to table | Move C from B to D | Move A from table to B] | Reached goal state!",
        "system2_states_v1": 13
    },
    {
        "idx": 47,
        "start": [
            [
                "table",
                "B",
                "D",
                "A"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. D is on B. A is on D. A is clear.\nC is on the table. C is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. D is on B. C is on D. C is clear.\n",
        "system1_plan": "Move A from D to table | Move C from table to D",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, D, A], Stack 2: [C] | Plan so far [] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move A from D to C | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move D from B to C | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [B, D, A, C] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move A from D to table] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B, D, C] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B, D, C] | Plan so far [Move A from D to table | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 441,
        "start": [
            [
                "table",
                "C",
                "E",
                "D",
                "B",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B"
            ],
            [
                "table",
                "E",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "E",
                "under": "B",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "E",
                "under": "C",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. E is on C. D is on E. B is on D. A is on B. A is clear.\n\nThe goal is:\nA is on the table. B is on A. B is clear.\nE is on the table. D is on E. C is on D. C is clear.\n",
        "system1_plan": "Move A from B to table | Move B from D to A | Move D from E to table | Move E from C to table | Move D from table to E | Move C from table to D",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, E, D, B, A] | Plan so far [] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C, E, D, B] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move B from D to table | New state -> Invalid | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, E, D, B] | Plan so far [Move A from B to table] | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C, E, D] | Exploring action Move E from C to A | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E, D] | Exploring action Move E from C to B | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [C, E, D, B, A] | Taking action Move B from D to A | Moved to state -> Stack 1: [A, B], Stack 2: [C, E, D] | Plan so far [Move A from B to table | Move B from D to A] | Exploring action Move D from E to B | New state -> Stack 1: [A, B, D], Stack 2: [C, E] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E, D] | Exploring action Move D from E to table | New state -> Stack 1: [A, B], Stack 2: [C, E], Stack 3: [D] | Exploring action Move E from C to D | New state -> Invalid | Taking action Move D from E to table | Moved to state -> Stack 1: [A, B], Stack 2: [C, E], Stack 3: [D] | Plan so far [Move A from B to table | Move B from D to A | Move D from E to table] | Exploring action Move D from table to E | New state -> Stack 1: [A, B], Stack 2: [C, E, D] | Exploring action Move E from C to D | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D, E] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move C from table to E | New state -> Invalid | Exploring action Move E from C to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Taking action Move E from C to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Plan so far [Move A from B to table | Move B from D to A | Move D from E to table | Move E from C to table] | Exploring action Move C from table to D | New state -> Stack 1: [A, B], Stack 2: [D, C], Stack 3: [E] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move C from table to E | New state -> Stack 1: [A, B], Stack 2: [D], Stack 3: [E, C] | Exploring action Move D from table to E | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [E, D] | Taking action Move D from table to E | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [E, D] | Plan so far [Move A from B to table | Move B from D to A | Move D from E to table | Move E from C to table | Move D from table to E] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move C from table to D | New state -> Stack 1: [A, B], Stack 2: [E, D, C] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from E to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Taking action Move C from table to D | Moved to state -> Stack 1: [A, B], Stack 2: [E, D, C] | Plan so far [Move A from B to table | Move B from D to A | Move D from E to table | Move E from C to table | Move D from table to E | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 27
    },
    {
        "idx": 367,
        "start": [
            [
                "table",
                "D",
                "C",
                "B",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C",
                "B",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nD is on the table. C is on D. B is on C. A is on B. A is clear.\n\nThe goal is:\nA is on the table. C is on A. B is on C. D is on B. D is clear.\n",
        "system1_plan": "Move A from B to table | Move B from C to table | Move C from D to A | Move B from table to C | Move D from table to B",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [D, C, B, A] | Plan so far [] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move B from C to A | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [D, C, B] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [D, C, B] | Plan so far [Move A from B to table] | Exploring action Move C from D to A | New state -> Invalid | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move A from table to B | New state -> Stack 1: [D, C, B, A] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move A from B to table | Move B from C to table] | Exploring action Move C from D to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from D to A | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move A from B to table | Move B from C to table | Move C from D to A] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [A, C, B], Stack 2: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Taking action Move B from table to C | Moved to state -> Stack 1: [A, C, B], Stack 2: [D] | Plan so far [Move A from B to table | Move B from C to table | Move C from D to A | Move B from table to C] | Exploring action Move D from table to B | New state -> Stack 1: [A, C, B, D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from C to D | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move B from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Taking action Move D from table to B | Moved to state -> Stack 1: [A, C, B, D] | Plan so far [Move A from B to table | Move B from C to table | Move C from D to A | Move B from table to C | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 20
    },
    {
        "idx": 54,
        "start": [
            [
                "table",
                "A",
                "B",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. C is on B. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. B is on A. B is clear.\nC is on the table. D is on C. D is clear.\n",
        "system1_plan": "Move C from B to table | Move D from table to C",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B, C], Stack 2: [D] | Plan so far [] | Exploring action Move C from B to D | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move B from A to C | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A, B, C, D] | Exploring action Move B from A to D | New state -> Invalid | Taking action Move C from B to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from B to table] | Exploring action Move C from table to D | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move D from table to C | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move A from table to D | New state -> Invalid | Taking action Move D from table to C | Moved to state -> Stack 1: [A, B], Stack 2: [C, D] | Plan so far [Move C from B to table | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 41,
        "start": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "B",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. D is clear.\nB is on the table. C is on B. C is clear.\n\nThe goal is:\nB is on the table. C is on B. A is on C. A is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move D from A to table | Move A from table to C",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D], Stack 2: [B, C] | Plan so far [] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [B, C, D] | Exploring action Move C from B to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move D from A to table] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move A from table to C | New state -> Stack 1: [B, C, A], Stack 2: [D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B, C, A], Stack 2: [D] | Plan so far [Move D from A to table | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 131,
        "start": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. C is clear.\nB is on the table. B is clear.\nD is on the table. D is clear.\n\nThe goal is:\nB is on the table. A is on B. A is clear.\nC is on the table. D is on C. D is clear.\n",
        "system1_plan": "Move C from A to table | Move A from table to B | Move D from table to C",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A, C, D], Stack 2: [B] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move A from table to C | New state -> Invalid | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from A to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from A to table | Move A from table to B] | Exploring action Move C from table to D | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move D from table to C | New state -> Stack 1: [B, A], Stack 2: [C, D] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Taking action Move D from table to C | Moved to state -> Stack 1: [B, A], Stack 2: [C, D] | Plan so far [Move C from A to table | Move A from table to B | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 353,
        "start": [
            [
                "table",
                "C",
                "D",
                "A",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. D is on C. A is on D. B is on A. B is clear.\n\nThe goal is:\nA is on the table. B is on A. D is on B. D is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move B from A to table | Move A from D to table | Move D from C to table | Move B from table to A | Move D from table to B",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, D, A, B] | Plan so far [] | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C, D, A] | Exploring action Move D from C to table | New state -> Invalid | Taking action Move B from A to table | Moved to state -> Stack 1: [B], Stack 2: [C, D, A] | Plan so far [Move B from A to table] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from C to table | New state -> Invalid | Exploring action Move D from C to A | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [C, D, A, B] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C, D] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move B from A to table | Move A from D to table] | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move C from table to D | New state -> Invalid | Taking action Move D from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from A to table | Move A from D to table | Move D from C to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move D from C to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move B from A to table | Move A from D to table | Move D from C to B] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move B from table to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move B from A to table | Move A from D to table | Move D from C to table | Move B from table to A] | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move A from table to C | New state -> Invalid | Taking action Move D from table to B | Moved to state -> Stack 1: [A, B, D], Stack 2: [C] | Plan so far [Move B from A to table | Move A from D to table | Move D from C to table | Move B from table to A | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 23
    },
    {
        "idx": 65,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "D",
                "A",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. D is on C. D is clear.\n\nThe goal is:\nC is on the table. D is on C. A is on D. B is on A. B is clear.\n",
        "system1_plan": "Move A from table to D | Move B from table to A",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C, D, A] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C, D] | Exploring action Move C from table to B | New state -> Invalid | Taking action Move A from table to D | Moved to state -> Stack 1: [B], Stack 2: [C, D, A] | Plan so far [Move A from table to D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from C to B | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [C, D, A, B] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C, D] | Taking action Move B from table to A | Moved to state -> Stack 1: [C, D, A, B] | Plan so far [Move A from table to D | Move B from table to A] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 349,
        "start": [
            [
                "table",
                "A",
                "B",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. C is on B. D is on C. D is clear.\n\nThe goal is:\nB is on the table. B is clear.\nC is on the table. D is on C. A is on D. A is clear.\n",
        "system1_plan": "Move D from C to table | Move C from B to table | Move B from A to table | Move D from table to C | Move A from table to D",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B, C, D] | Plan so far [] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A, B, C], Stack 2: [D] | Taking action Move D from C to table | Moved to state -> Stack 1: [A, B, C], Stack 2: [D] | Plan so far [Move D from C to table] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A, B, C, D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from B to D | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move C from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move C from B to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move D from C to table | Move C from B to table] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A, B], Stack 2: [C, D] | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from C to table | Move C from B to table | Move B from A to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move D from C to table | Move C from B to table | Move B from A to table | Move D from table to C] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C, D, A] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move C from table to B | New state -> Invalid | Taking action Move A from table to D | Moved to state -> Stack 1: [B], Stack 2: [C, D, A] | Plan so far [Move D from C to table | Move C from B to table | Move B from A to table | Move D from table to C | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 20
    },
    {
        "idx": 267,
        "start": [
            [
                "table",
                "B",
                "D",
                "A"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. D is on B. A is on D. A is clear.\nC is on the table. C is clear.\n\nThe goal is:\nB is on the table. B is clear.\nD is on the table. C is on D. A is on C. A is clear.\n",
        "system1_plan": "Move A from D to table | Move D from B to table | Move C from table to D | Move A from table to C",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, D, A], Stack 2: [C] | Plan so far [] | Exploring action Move D from B to C | New state -> Invalid | Exploring action Move A from D to C | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [B, D, A, C] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move A from D to table] | Exploring action Move D from B to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to A | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from D to table | Move D from B to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move A from D to table | Move D from B to table | Move C from table to D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [D, C, A] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [D, C, A] | Plan so far [Move A from D to table | Move D from B to table | Move C from table to D | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 16
    },
    {
        "idx": 31,
        "start": [
            [
                "table",
                "A",
                "D",
                "B",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. B is on D. C is on B. C is clear.\n\nThe goal is:\nA is on the table. D is on A. D is clear.\nB is on the table. B is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move C from B to table | Move B from D to table",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D, B, C] | Plan so far [] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move B from D to table | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A, D, B], Stack 2: [C] | Taking action Move C from B to table | Moved to state -> Stack 1: [A, D, B], Stack 2: [C] | Plan so far [Move C from B to table] | Exploring action Move C from table to B | New state -> Stack 1: [A, D, B, C] | Exploring action Move D from A to table | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move B from D to C | New state -> Stack 1: [A, D], Stack 2: [C, B] | Taking action Move B from D to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move C from B to table | Move B from D to table] | Reached goal state!",
        "system2_states_v1": 7
    },
    {
        "idx": 32,
        "start": [
            [
                "table",
                "D",
                "B",
                "C",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nD is on the table. B is on D. C is on B. A is on C. A is clear.\n\nThe goal is:\nA is on the table. A is clear.\nC is on the table. C is clear.\nD is on the table. B is on D. B is clear.\n",
        "system1_plan": "Move A from C to table | Move C from B to table",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [D, B, C, A] | Plan so far [] | Exploring action Move B from D to A | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [D, B, C] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [D, B, C] | Plan so far [Move A from C to table] | Exploring action Move B from D to C | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [D, B, C, A] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move C from B to A | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move B from D to table | New state -> Invalid | Taking action Move C from B to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move A from C to table | Move C from B to table] | Reached goal state!",
        "system2_states_v1": 7
    },
    {
        "idx": 39,
        "start": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. A is clear.\nC is on the table. D is on C. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nC is on the table. D is on C. B is on D. B is clear.\n",
        "system1_plan": "Move A from B to table | Move B from table to D",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A], Stack 2: [C, D] | Plan so far [] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C, D, A] | Exploring action Move D from C to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move A from B to table] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C, D, B] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move C from table to D | New state -> Invalid | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C, D, B] | Plan so far [Move A from B to table | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 57,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nC is on the table. C is clear.\nD is on the table. B is on D. B is clear.\n\nThe goal is:\nA is on the table. B is on A. B is clear.\nC is on the table. D is on C. D is clear.\n",
        "system1_plan": "Move B from D to A | Move D from table to C",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move B from D to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move B from D to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move B from D to A] | Exploring action Move D from table to C | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from table to D | New state -> Stack 1: [A, B], Stack 2: [D, C] | Taking action Move D from table to C | Moved to state -> Stack 1: [A, B], Stack 2: [C, D] | Plan so far [Move B from D to A | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 327,
        "start": [
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "B",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C",
                "A",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. C is clear.\nD is on the table. B is on D. A is on B. A is clear.\n\nThe goal is:\nB is on the table. C is on B. A is on C. D is on A. D is clear.\n",
        "system1_plan": "Move A from B to table | Move B from D to table | Move C from table to B | Move A from table to C | Move D from table to A",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [C], Stack 2: [D, B, A] | Plan so far [] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from D to A | New state -> Invalid | Exploring action Move B from D to C | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [D, B, A, C] | Exploring action Move A from B to C | New state -> Stack 1: [C, A], Stack 2: [D, B] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move A from B to table] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move B from D to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from B to table | Move B from D to table] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move A from B to table | Move B from D to table | Move C from table to B] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move A from table to C | New state -> Stack 1: [B, C, A], Stack 2: [D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B, C, A], Stack 2: [D] | Plan so far [Move A from B to table | Move B from D to table | Move C from table to B | Move A from table to C] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [B, C, A, D] | Exploring action Move A from C to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move C from B to D | New state -> Invalid | Taking action Move D from table to A | Moved to state -> Stack 1: [B, C, A, D] | Plan so far [Move A from B to table | Move B from D to table | Move C from table to B | Move A from table to C | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 21
    },
    {
        "idx": 162,
        "start": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. D is clear.\nB is on the table. B is clear.\nC is on the table. C is clear.\n\nThe goal is:\nB is on the table. C is on B. C is clear.\nD is on the table. A is on D. A is clear.\n",
        "system1_plan": "Move C from table to B | Move D from A to table | Move A from table to D",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Taking action Move C from table to B | Moved to state -> Stack 1: [A, D], Stack 2: [B, C] | Plan so far [Move C from table to B] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [B, C, D] | Exploring action Move C from B to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from table to C | New state -> Invalid | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move C from table to B | Move D from A to table] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move A from table to D | Moved to state -> Stack 1: [B, C], Stack 2: [D, A] | Plan so far [Move C from table to B | Move D from A to table | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 13
    },
    {
        "idx": 265,
        "start": [
            [
                "table",
                "D",
                "C",
                "B",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nD is on the table. C is on D. B is on C. A is on B. A is clear.\n\nThe goal is:\nA is on the table. B is on A. D is on B. D is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move A from B to table | Move B from C to A | Move C from D to table | Move D from table to B",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [D, C, B, A] | Plan so far [] | Exploring action Move C from D to table | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [D, C, B] | Exploring action Move C from D to A | New state -> Invalid | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [D, C, B] | Plan so far [Move A from B to table] | Exploring action Move A from table to B | New state -> Stack 1: [D, C, B, A] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move B from C to A | Moved to state -> Stack 1: [A, B], Stack 2: [D, C] | Plan so far [Move A from B to table | Move B from C to A] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move C from D to B | New state -> Stack 1: [A, B, C], Stack 2: [D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move C from D to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move A from B to table | Move B from C to A | Move C from D to table] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Taking action Move D from table to B | Moved to state -> Stack 1: [A, B, D], Stack 2: [C] | Plan so far [Move A from B to table | Move B from C to A | Move C from D to table | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 17
    },
    {
        "idx": 61,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "A",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nD is on the table. A is on D. C is on A. C is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. C is on B. C is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move C from A to B | Move A from D to table",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [D, A, C] | Plan so far [] | Exploring action Move C from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [D, A, C, B] | Exploring action Move C from A to B | New state -> Stack 1: [B, C], Stack 2: [D, A] | Taking action Move C from A to B | Moved to state -> Stack 1: [B, C], Stack 2: [D, A] | Plan so far [Move C from A to B] | Exploring action Move C from B to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move A from D to C | New state -> Stack 1: [B, C, A], Stack 2: [D] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move C from A to B | Move A from D to table] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 455,
        "start": [
            [
                "table",
                "C",
                "E",
                "D",
                "A",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "E",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "E",
                "under": "A",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "E",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. E is on C. D is on E. A is on D. B is on A. B is clear.\n\nThe goal is:\nA is on the table. B is on A. E is on B. C is on E. C is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move B from A to table | Move A from D to table | Move D from E to table | Move B from table to A | Move E from C to B | Move C from table to E",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, E, D, A, B] | Plan so far [] | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C, E, D, A] | Exploring action Move D from E to B | New state -> Invalid | Taking action Move B from A to table | Moved to state -> Stack 1: [B], Stack 2: [C, E, D, A] | Plan so far [Move B from A to table] | Exploring action Move B from table to A | New state -> Stack 1: [C, E, D, A, B] | Exploring action Move E from C to table | New state -> Invalid | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C, E, D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E, D] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E, D] | Plan so far [Move B from A to table | Move A from D to table] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, E, D] | Exploring action Move D from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Exploring action Move E from C to B | New state -> Invalid | Exploring action Move D from E to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C, E] | Taking action Move D from E to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Plan so far [Move B from A to table | Move A from D to table | Move D from E to table] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, E], Stack 3: [D] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move E from C to B | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Exploring action Move E from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move B from table to A | Moved to state -> Stack 1: [A, B], Stack 2: [C, E], Stack 3: [D] | Plan so far [Move B from A to table | Move A from D to table | Move D from E to table | Move B from table to A] | Exploring action Move E from C to B | New state -> Stack 1: [A, B, E], Stack 2: [C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move E from C to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Taking action Move E from C to B | Moved to state -> Stack 1: [A, B, E], Stack 2: [C], Stack 3: [D] | Plan so far [Move B from A to table | Move A from D to table | Move D from E to table | Move B from table to A | Move E from C to B] | Exploring action Move B from A to table | New state -> Invalid | Exploring action Move C from table to E | New state -> Stack 1: [A, B, E, C], Stack 2: [D] | Exploring action Move E from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move B from A to D | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A, B, E], Stack 2: [C, D] | Taking action Move C from table to E | Moved to state -> Stack 1: [A, B, E, C], Stack 2: [D] | Plan so far [Move B from A to table | Move A from D to table | Move D from E to table | Move B from table to A | Move E from C to B | Move C from table to E] | Reached goal state!",
        "system2_states_v1": 25
    },
    {
        "idx": 126,
        "start": [
            [
                "table",
                "B",
                "C",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. C is on B. A is on C. A is clear.\nD is on the table. D is clear.\n\nThe goal is:\nB is on the table. A is on B. A is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move A from C to table | Move C from B to table | Move A from table to B",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, C, A], Stack 2: [D] | Plan so far [] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move A from C to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move C from B to table | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [B, C, A, D] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move A from C to table] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from B to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to C | New state -> Stack 1: [B, C, A], Stack 2: [D] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from C to table | Move C from B to table] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move A from C to table | Move C from B to table | Move A from table to B] | Reached goal state!",
        "system2_states_v1": 13
    },
    {
        "idx": 331,
        "start": [
            [
                "table",
                "A",
                "D",
                "B",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. B is on D. C is on B. C is clear.\n\nThe goal is:\nB is on the table. A is on B. C is on A. C is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move C from B to table | Move B from D to table | Move D from A to table | Move A from table to B | Move C from table to A",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D, B, C] | Plan so far [] | Exploring action Move C from B to table | New state -> Stack 1: [A, D, B], Stack 2: [C] | Exploring action Move D from A to table | New state -> Invalid | Taking action Move C from B to table | Moved to state -> Stack 1: [A, D, B], Stack 2: [C] | Plan so far [Move C from B to table] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move C from table to B | New state -> Stack 1: [A, D, B, C] | Exploring action Move D from A to table | New state -> Invalid | Exploring action Move B from D to C | New state -> Stack 1: [A, D], Stack 2: [C, B] | Taking action Move B from D to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move C from B to table | Move B from D to table] | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from B to table | Move B from D to table | Move D from A to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from B to table | Move B from D to table | Move D from A to table | Move A from table to B] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [B, A, C], Stack 2: [D] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Taking action Move C from table to A | Moved to state -> Stack 1: [B, A, C], Stack 2: [D] | Plan so far [Move C from B to table | Move B from D to table | Move D from A to table | Move A from table to B | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 19
    },
    {
        "idx": 165,
        "start": [
            [
                "table",
                "B",
                "A",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "A",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. C is on A. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nB is on the table. B is clear.\nD is on the table. A is on D. C is on A. C is clear.\n",
        "system1_plan": "Move C from A to table | Move A from B to D | Move C from table to A",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A, C], Stack 2: [D] | Plan so far [] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move A from B to C | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move C from A to D | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move D from table to C | New state -> Stack 1: [B, A, C, D] | Taking action Move C from A to table | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from A to table] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move A from B to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move A from B to D | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move C from A to table | Move A from B to D] | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Taking action Move C from table to A | Moved to state -> Stack 1: [B], Stack 2: [D, A, C] | Plan so far [Move C from A to table | Move A from B to D | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 15
    },
    {
        "idx": 462,
        "start": [
            [
                "table",
                "D",
                "A",
                "C",
                "B"
            ],
            [
                "table",
                "E"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "E"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "E": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "E",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nD is on the table. A is on D. C is on A. B is on C. B is clear.\nE is on the table. E is clear.\n\nThe goal is:\nA is on the table. B is on A. E is on B. E is clear.\nC is on the table. D is on C. D is clear.\n",
        "system1_plan": "Move B from C to table | Move C from A to table | Move A from D to table | Move D from table to C | Move B from table to A | Move E from table to B",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [D, A, C, B], Stack 2: [E] | Plan so far [] | Exploring action Move E from table to B | New state -> Stack 1: [D, A, C, B, E] | Exploring action Move A from D to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [B], Stack 2: [D, A, C], Stack 3: [E] | Exploring action Move B from C to E | New state -> Stack 1: [D, A, C], Stack 2: [E, B] | Exploring action Move C from A to E | New state -> Invalid | Taking action Move B from C to table | Moved to state -> Stack 1: [B], Stack 2: [D, A, C], Stack 3: [E] | Plan so far [Move B from C to table] | Exploring action Move D from table to E | New state -> Invalid | Exploring action Move C from A to B | New state -> Stack 1: [B, C], Stack 2: [D, A], Stack 3: [E] | Exploring action Move C from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Exploring action Move A from D to C | New state -> Invalid | Exploring action Move E from table to B | New state -> Stack 1: [B, E], Stack 2: [D, A, C] | Taking action Move C from A to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Plan so far [Move B from C to table | Move C from A to table] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move E from table to B | New state -> Stack 1: [B, E], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Exploring action Move D from table to E | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move B from C to table | Move C from A to table | Move A from D to table] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D], Stack 4: [E] | Exploring action Move E from table to B | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D], Stack 4: [E] | Plan so far [Move B from C to table | Move C from A to table | Move A from D to table | Move D from table to C] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, D], Stack 3: [E] | Exploring action Move A from table to E | New state -> Stack 1: [B], Stack 2: [C, D], Stack 3: [E, A] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move E from table to B | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C, D] | Taking action Move B from table to A | Moved to state -> Stack 1: [A, B], Stack 2: [C, D], Stack 3: [E] | Plan so far [Move B from C to table | Move C from A to table | Move A from D to table | Move D from table to C | Move B from table to A] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D], Stack 4: [E] | Exploring action Move E from table to B | New state -> Stack 1: [A, B, E], Stack 2: [C, D] | Exploring action Move C from table to E | New state -> Invalid | Exploring action Move B from A to E | New state -> Stack 1: [A], Stack 2: [C, D], Stack 3: [E, B] | Taking action Move E from table to B | Moved to state -> Stack 1: [A, B, E], Stack 2: [C, D] | Plan so far [Move B from C to table | Move C from A to table | Move A from D to table | Move D from table to C | Move B from table to A | Move E from table to B] | Reached goal state!",
        "system2_states_v1": 25
    },
    {
        "idx": 425,
        "start": [
            [
                "table",
                "A",
                "B",
                "C",
                "D",
                "E"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C"
            ],
            [
                "table",
                "D"
            ],
            [
                "table",
                "E",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "E",
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. C is on B. D is on C. E is on D. E is clear.\n\nThe goal is:\nB is on the table. C is on B. C is clear.\nD is on the table. D is clear.\nE is on the table. A is on E. A is clear.\n",
        "system1_plan": "Move E from D to table | Move D from C to table | Move C from B to table | Move B from A to table | Move A from table to E | Move C from table to B",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B, C, D, E] | Plan so far [] | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move E from D to table | New state -> Stack 1: [A, B, C, D], Stack 2: [E] | Exploring action Move D from C to table | New state -> Invalid | Taking action Move E from D to table | Moved to state -> Stack 1: [A, B, C, D], Stack 2: [E] | Plan so far [Move E from D to table] | Exploring action Move C from B to D | New state -> Invalid | Exploring action Move E from table to D | New state -> Stack 1: [A, B, C, D, E] | Exploring action Move D from C to table | New state -> Stack 1: [A, B, C], Stack 2: [D], Stack 3: [E] | Exploring action Move B from A to D | New state -> Invalid | Exploring action Move D from C to E | New state -> Stack 1: [A, B, C], Stack 2: [E, D] | Taking action Move D from C to table | Moved to state -> Stack 1: [A, B, C], Stack 2: [D], Stack 3: [E] | Plan so far [Move E from D to table | Move D from C to table] | Exploring action Move E from table to C | New state -> Stack 1: [A, B, C, E], Stack 2: [D] | Exploring action Move C from B to E | New state -> Stack 1: [A, B], Stack 2: [D], Stack 3: [E, C] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move B from A to D | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Taking action Move C from B to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Plan so far [Move E from D to table | Move D from C to table | Move C from B to table] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move B from A to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A, B, C], Stack 2: [D], Stack 3: [E] | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move E from D to table | Move D from C to table | Move C from B to table | Move B from A to table] | Exploring action Move A from table to E | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D], Stack 4: [E, A] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Taking action Move A from table to E | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D], Stack 4: [E, A] | Plan so far [Move E from D to table | Move D from C to table | Move C from B to table | Move B from A to table | Move A from table to E] | Exploring action Move A from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move E from table to A | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [B, C], Stack 2: [D], Stack 3: [E, A] | Exploring action Move B from table to C | New state -> Stack 1: [C, B], Stack 2: [D], Stack 3: [E, A] | Taking action Move C from table to B | Moved to state -> Stack 1: [B, C], Stack 2: [D], Stack 3: [E, A] | Plan so far [Move E from D to table | Move D from C to table | Move C from B to table | Move B from A to table | Move A from table to E | Move C from table to B] | Reached goal state!",
        "system2_states_v1": 24
    },
    {
        "idx": 138,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nB is on the table. C is on B. D is on C. A is on D. A is clear.\n",
        "system1_plan": "Move C from table to B | Move D from table to C | Move A from table to D",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move C from table to B] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B, C, D] | Exploring action Move A from table to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move B from table to D | New state -> Invalid | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B, C, D] | Plan so far [Move C from table to B | Move D from table to C] | Exploring action Move C from B to A | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [B, C, D, A] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Taking action Move A from table to D | Moved to state -> Stack 1: [B, C, D, A] | Plan so far [Move C from table to B | Move D from table to C | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 171,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "C",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nD is on the table. C is on D. B is on C. B is clear.\n\nThe goal is:\nA is on the table. C is on A. C is clear.\nB is on the table. D is on B. D is clear.\n",
        "system1_plan": "Move B from C to table | Move C from D to A | Move D from table to B",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [D, C, B] | Plan so far [] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move C from D to A | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [D, C, B, A] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move B from C to table] | Exploring action Move C from D to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from D to A | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move B from C to table | Move C from D to A] | Exploring action Move D from table to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move A from table to D | New state -> Invalid | Taking action Move D from table to B | Moved to state -> Stack 1: [A, C], Stack 2: [B, D] | Plan so far [Move B from C to table | Move C from D to A | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 14
    },
    {
        "idx": 144,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. C is on B. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nC is on the table. D is on C. B is on D. B is clear.\n",
        "system1_plan": "Move C from B to table | Move D from table to C | Move B from table to D",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B, C, D] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move C from B to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move C from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from B to table] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move C from B to table | Move D from table to C] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C, D, B] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C, D, B] | Plan so far [Move C from B to table | Move D from table to C | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 11
    },
    {
        "idx": 55,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C",
                "D",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nC is on the table. D is on C. B is on D. B is clear.\n\nThe goal is:\nA is on the table. B is on A. D is on B. D is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move B from D to A | Move D from C to B",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [C, D, B] | Plan so far [] | Exploring action Move A from table to B | New state -> Stack 1: [C, D, B, A] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Taking action Move B from D to A | Moved to state -> Stack 1: [A, B], Stack 2: [C, D] | Plan so far [Move B from D to A] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from C to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move D from C to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move D from C to B | Moved to state -> Stack 1: [A, B, D], Stack 2: [C] | Plan so far [Move B from D to A | Move D from C to B] | Reached goal state!",
        "system2_states_v1": 8
    },
    {
        "idx": 341,
        "start": [
            [
                "table",
                "C",
                "A",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "D",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. A is on C. B is on A. B is clear.\nD is on the table. D is clear.\n\nThe goal is:\nB is on the table. D is on B. C is on D. A is on C. A is clear.\n",
        "system1_plan": "Move B from A to table | Move D from table to B | Move A from C to table | Move C from table to D | Move A from table to C",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, A, B], Stack 2: [D] | Plan so far [] | Exploring action Move A from C to B | New state -> Invalid | Exploring action Move B from A to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [C, A, B, D] | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move B from A to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move B from A to table] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move D from table to B | Moved to state -> Stack 1: [B, D], Stack 2: [C, A] | Plan so far [Move B from A to table | Move D from table to B] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from C to D | New state -> Stack 1: [B, D, A], Stack 2: [C] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from A to table | Move A from C to table] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move B from A to D | Moved to state -> Stack 1: [C, A], Stack 2: [D, B] | Plan so far [Move B from A to D] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move A from C to B | New state -> Stack 1: [C], Stack 2: [D, B, A] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move B from A to table | Move D from table to B | Move A from C to table] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B, D, C] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move B from table to C | New state -> Invalid | Taking action Move B from D to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move B from A to D | Move B from D to table] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B, D, C] | Plan so far [Move B from A to table | Move D from table to B | Move A from C to table | Move C from table to D] | Exploring action Move A from table to C | New state -> Stack 1: [B, D, C, A] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move D from B to C | New state -> Invalid | Exploring action Move D from B to A | New state -> Invalid | Taking action Move A from table to C | Moved to state -> Stack 1: [B, D, C, A] | Plan so far [Move B from A to table | Move D from table to B | Move A from C to table | Move C from table to D | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 31
    },
    {
        "idx": 50,
        "start": [
            [
                "table",
                "A",
                "C",
                "B",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. B is on C. D is on B. D is clear.\n\nThe goal is:\nA is on the table. C is on A. C is clear.\nB is on the table. B is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move D from B to table | Move B from C to table",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, B, D] | Plan so far [] | Exploring action Move D from B to table | New state -> Stack 1: [A, C, B], Stack 2: [D] | Exploring action Move A from table to D | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A, C, B], Stack 2: [D] | Plan so far [Move D from B to table] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A, C, B, D] | Exploring action Move B from C to D | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move C from A to B | New state -> Invalid | Taking action Move B from C to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from B to table | Move B from C to table] | Reached goal state!",
        "system2_states_v1": 7
    },
    {
        "idx": 264,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C",
                "D",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nC is on the table. D is on C. B is on D. B is clear.\n\nThe goal is:\nB is on the table. A is on B. D is on A. D is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move B from D to table | Move D from C to table | Move A from table to B | Move D from table to A",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [C, D, B] | Plan so far [] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [C, D, B, A] | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move B from D to table] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move D from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from D to table | Move D from C to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move D from C to A | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move B from D to table | Move D from C to A] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to D | New state -> Invalid | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move B from D to table | Move D from C to table | Move A from table to B] | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to A | New state -> Invalid | Taking action Move D from table to A | Moved to state -> Stack 1: [B, A, D], Stack 2: [C] | Plan so far [Move B from D to table | Move D from C to table | Move A from table to B | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 19
    },
    {
        "idx": 471,
        "start": [
            [
                "table",
                "A",
                "D",
                "E",
                "C",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "A"
            ],
            [
                "table",
                "E",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "E",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "E",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. E is on D. C is on E. B is on C. B is clear.\n\nThe goal is:\nC is on the table. C is clear.\nD is on the table. A is on D. A is clear.\nE is on the table. B is on E. B is clear.\n",
        "system1_plan": "Move B from C to table | Move C from E to table | Move E from D to table | Move B from table to E | Move D from A to table | Move A from table to D",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D, E, C, B] | Plan so far [] | Exploring action Move E from D to table | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A, D, E, C], Stack 2: [B] | Exploring action Move D from A to B | New state -> Invalid | Taking action Move B from C to table | Moved to state -> Stack 1: [A, D, E, C], Stack 2: [B] | Plan so far [Move B from C to table] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from E to B | New state -> Stack 1: [A, D, E], Stack 2: [B, C] | Exploring action Move D from A to table | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [A, D, E, C, B] | Exploring action Move C from E to table | New state -> Stack 1: [A, D, E], Stack 2: [B], Stack 3: [C] | Taking action Move C from E to table | Moved to state -> Stack 1: [A, D, E], Stack 2: [B], Stack 3: [C] | Plan so far [Move B from C to table | Move C from E to table] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move E from D to B | New state -> Stack 1: [A, D], Stack 2: [B, E], Stack 3: [C] | Exploring action Move B from table to E | New state -> Stack 1: [A, D, E, B], Stack 2: [C] | Exploring action Move E from D to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C], Stack 4: [E] | Taking action Move E from D to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C], Stack 4: [E] | Plan so far [Move B from C to table | Move C from E to table | Move E from D to table] | Exploring action Move B from table to E | New state -> Stack 1: [A, D], Stack 2: [C], Stack 3: [E, B] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move A from table to B | New state -> Invalid | Taking action Move B from table to E | Moved to state -> Stack 1: [A, D], Stack 2: [C], Stack 3: [E, B] | Plan so far [Move B from C to table | Move C from E to table | Move E from D to table | Move B from table to E] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Exploring action Move E from table to B | New state -> Invalid | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [E, B, D] | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [C, D], Stack 3: [E, B] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Plan so far [Move B from C to table | Move C from E to table | Move E from D to table | Move B from table to E | Move D from A to table] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [C], Stack 3: [E, B] | Exploring action Move E from table to D | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [C], Stack 2: [D, A], Stack 3: [E, B] | Exploring action Move A from table to B | New state -> Stack 1: [C], Stack 2: [D], Stack 3: [E, B, A] | Exploring action Move E from table to A | New state -> Invalid | Taking action Move A from table to D | Moved to state -> Stack 1: [C], Stack 2: [D, A], Stack 3: [E, B] | Plan so far [Move B from C to table | Move C from E to table | Move E from D to table | Move B from table to E | Move D from A to table | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 26
    },
    {
        "idx": 236,
        "start": [
            [
                "table",
                "A",
                "C",
                "D"
            ],
            [
                "table",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. D is on C. D is clear.\nB is on the table. B is clear.\n\nThe goal is:\nB is on the table. B is clear.\nC is on the table. D is on C. A is on D. A is clear.\n",
        "system1_plan": "Move D from C to table | Move C from A to table | Move D from table to C | Move A from table to D",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [] | Exploring action Move D from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A, C, D, B] | Exploring action Move C from A to B | New state -> Invalid | Exploring action Move D from C to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Taking action Move D from C to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from C to table] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move D from table to C | New state -> Stack 1: [A, C, D], Stack 2: [B] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from C to table | Move C from A to table] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move D from C to table | Move C from A to table | Move D from table to C] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C, D, A] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move A from table to D | Moved to state -> Stack 1: [B], Stack 2: [C, D, A] | Plan so far [Move D from C to table | Move C from A to table | Move D from table to C | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 15
    },
    {
        "idx": 237,
        "start": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. A is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. B is on A. C is on B. D is on C. D is clear.\n",
        "system1_plan": "Move A from B to table | Move B from table to A | Move C from table to B | Move D from table to C",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to C | New state -> Stack 1: [B, A], Stack 2: [C, D] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from B to table] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move B from table to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move A from B to table | Move B from table to A] | Exploring action Move C from table to B | New state -> Stack 1: [A, B, C], Stack 2: [D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A, B], Stack 2: [C, D] | Taking action Move C from table to B | Moved to state -> Stack 1: [A, B, C], Stack 2: [D] | Plan so far [Move A from B to table | Move B from table to A | Move C from table to B] | Exploring action Move C from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A, B, C, D] | Exploring action Move C from B to D | New state -> Stack 1: [A, B], Stack 2: [D, C] | Taking action Move D from table to C | Moved to state -> Stack 1: [A, B, C, D] | Plan so far [Move A from B to table | Move B from table to A | Move C from table to B | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 17
    },
    {
        "idx": 371,
        "start": [
            [
                "table",
                "A",
                "C",
                "B",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "D"
            ],
            [
                "table",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. B is on C. D is on B. D is clear.\n\nThe goal is:\nB is on the table. D is on B. D is clear.\nC is on the table. A is on C. A is clear.\n",
        "system1_plan": "Move D from B to table | Move B from C to table | Move D from table to B | Move C from A to table | Move A from table to C",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, B, D] | Plan so far [] | Exploring action Move D from B to table | New state -> Stack 1: [A, C, B], Stack 2: [D] | Exploring action Move B from C to table | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A, C, B], Stack 2: [D] | Plan so far [Move D from B to table] | Exploring action Move B from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from A to table | New state -> Invalid | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, C, B, D] | Exploring action Move B from C to D | New state -> Stack 1: [A, C], Stack 2: [D, B] | Taking action Move B from C to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from B to table | Move B from C to table] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Taking action Move D from table to B | Moved to state -> Stack 1: [A, C], Stack 2: [B, D] | Plan so far [Move D from B to table | Move B from C to table | Move D from table to B] | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B, D, C] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from B to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to D | New state -> Invalid | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move D from B to table | Move B from C to table | Move D from table to B | Move C from A to table] | Exploring action Move A from table to D | New state -> Stack 1: [B, D, A], Stack 2: [C] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B, D], Stack 2: [C, A] | Plan so far [Move D from B to table | Move B from C to table | Move D from table to B | Move C from A to table | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 20
    },
    {
        "idx": 128,
        "start": [
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "A",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "A",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. C is clear.\nD is on the table. A is on D. B is on A. B is clear.\n\nThe goal is:\nC is on the table. A is on C. B is on A. B is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move B from A to table | Move A from D to C | Move B from table to A",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [C], Stack 2: [D, A, B] | Plan so far [] | Exploring action Move C from table to B | New state -> Stack 1: [D, A, B, C] | Exploring action Move A from D to C | New state -> Invalid | Exploring action Move B from A to C | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from D to table | New state -> Invalid | Taking action Move B from A to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move B from A to table] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move A from D to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move B from A to table | Move A from D to C] | Exploring action Move B from table to A | New state -> Stack 1: [C, A, B], Stack 2: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from table to A | Moved to state -> Stack 1: [C, A, B], Stack 2: [D] | Plan so far [Move B from A to table | Move A from D to C | Move B from table to A] | Reached goal state!",
        "system2_states_v1": 14
    },
    {
        "idx": 457,
        "start": [
            [
                "table",
                "B",
                "C",
                "A",
                "E",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "B",
                "E"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "E",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "E",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "E": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. C is on B. A is on C. E is on A. D is on E. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nC is on the table. C is clear.\nD is on the table. B is on D. E is on B. E is clear.\n",
        "system1_plan": "Move D from E to table | Move E from A to table | Move A from C to table | Move C from B to table | Move B from table to D | Move E from table to B",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, C, A, E, D] | Plan so far [] | Exploring action Move D from E to table | New state -> Stack 1: [B, C, A, E], Stack 2: [D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move C from B to table | New state -> Invalid | Taking action Move D from E to table | Moved to state -> Stack 1: [B, C, A, E], Stack 2: [D] | Plan so far [Move D from E to table] | Exploring action Move D from table to E | New state -> Stack 1: [B, C, A, E, D] | Exploring action Move C from B to D | New state -> Invalid | Exploring action Move E from A to D | New state -> Stack 1: [B, C, A], Stack 2: [D, E] | Exploring action Move E from A to table | New state -> Stack 1: [B, C, A], Stack 2: [D], Stack 3: [E] | Exploring action Move C from B to table | New state -> Invalid | Taking action Move E from A to table | Moved to state -> Stack 1: [B, C, A], Stack 2: [D], Stack 3: [E] | Plan so far [Move D from E to table | Move E from A to table] | Exploring action Move C from B to E | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Exploring action Move A from C to E | New state -> Stack 1: [B, C], Stack 2: [D], Stack 3: [E, A] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from C to D | New state -> Stack 1: [B, C], Stack 2: [D, A], Stack 3: [E] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Plan so far [Move D from E to table | Move E from A to table | Move A from C to table] | Exploring action Move C from B to E | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Exploring action Move C from B to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move C from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move D from E to table | Move E from A to table | Move A from C to table | Move C from B to table] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move E from table to B | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Plan so far [Move D from E to table | Move E from A to table | Move A from C to table | Move C from B to table | Move B from table to D] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move B from D to E | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move E from table to B | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B, E] | Taking action Move E from table to B | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B, E] | Plan so far [Move D from E to table | Move E from A to table | Move A from C to table | Move C from B to table | Move B from table to D | Move E from table to B] | Reached goal state!",
        "system2_states_v1": 24
    },
    {
        "idx": 30,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. B is on A. C is on B. C is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move B from table to A | Move C from table to B",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Taking action Move B from table to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move B from table to A] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A, B, C], Stack 2: [D] | Taking action Move C from table to B | Moved to state -> Stack 1: [A, B, C], Stack 2: [D] | Plan so far [Move B from table to A | Move C from table to B] | Reached goal state!",
        "system2_states_v1": 7
    },
    {
        "idx": 233,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C",
                "B",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. D is on C. D is clear.\n\nThe goal is:\nA is on the table. C is on A. B is on C. D is on B. D is clear.\n",
        "system1_plan": "Move D from C to table | Move C from table to A | Move B from table to C | Move D from table to B",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move D from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from C to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move D from C to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move D from C to B] | Exploring action Move A from table to C | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Taking action Move C from table to A | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from C to table | Move C from table to A] | Exploring action Move B from table to C | New state -> Stack 1: [A, C, B], Stack 2: [D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Taking action Move C from table to A | Moved to state -> Stack 1: [A, C], Stack 2: [B, D] | Plan so far [Move D from C to B | Move C from table to A] | Exploring action Move D from B to C | New state -> Stack 1: [A, C, D], Stack 2: [B] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from B to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from table to C | New state -> Invalid | Taking action Move B from table to C | Moved to state -> Stack 1: [A, C, B], Stack 2: [D] | Plan so far [Move D from C to table | Move C from table to A | Move B from table to C] | Exploring action Move B from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A, C, B, D] | Exploring action Move C from A to B | New state -> Invalid | Exploring action Move B from C to D | New state -> Stack 1: [A, C], Stack 2: [D, B] | Taking action Move D from table to B | Moved to state -> Stack 1: [A, C, B, D] | Plan so far [Move D from C to table | Move C from table to A | Move B from table to C | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 24
    },
    {
        "idx": 60,
        "start": [
            [
                "table",
                "B",
                "A",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. C is on A. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nB is on the table. A is on B. D is on A. D is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move C from A to table | Move D from table to A",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A, C], Stack 2: [D] | Plan so far [] | Exploring action Move C from A to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move C from A to D | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move D from table to C | New state -> Stack 1: [B, A, C, D] | Exploring action Move A from B to table | New state -> Invalid | Exploring action Move B from table to D | New state -> Invalid | Taking action Move C from A to table | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from A to table] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move D from table to A | Moved to state -> Stack 1: [B, A, D], Stack 2: [C] | Plan so far [Move C from A to table | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 153,
        "start": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. A is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. B is on A. D is on B. D is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move A from B to table | Move B from table to A | Move D from table to B",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from B to table] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move B from table to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move A from B to table | Move B from table to A] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to D | New state -> Invalid | Taking action Move D from table to B | Moved to state -> Stack 1: [A, B, D], Stack 2: [C] | Plan so far [Move A from B to table | Move B from table to A | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 38,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "A",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "A"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nC is on the table. A is on C. D is on A. D is clear.\n\nThe goal is:\nC is on the table. A is on C. A is clear.\nD is on the table. B is on D. B is clear.\n",
        "system1_plan": "Move D from A to table | Move B from table to D",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [C, A, D] | Plan so far [] | Exploring action Move A from C to table | New state -> Invalid | Exploring action Move D from A to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move D from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [C, A, D, B] | Taking action Move D from A to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move D from A to table] | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Taking action Move B from table to D | Moved to state -> Stack 1: [C, A], Stack 2: [D, B] | Plan so far [Move D from A to table | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 8
    },
    {
        "idx": 72,
        "start": [
            [
                "table",
                "A",
                "B"
            ],
            [
                "table",
                "D",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. B is clear.\nD is on the table. C is on D. C is clear.\n\nThe goal is:\nA is on the table. B is on A. D is on B. D is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move C from D to table | Move D from table to B",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B], Stack 2: [D, C] | Plan so far [] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move C from D to B | New state -> Stack 1: [A, B, C], Stack 2: [D] | Taking action Move C from D to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from D to table] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Taking action Move D from table to B | Moved to state -> Stack 1: [A, B, D], Stack 2: [C] | Plan so far [Move C from D to table | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 350,
        "start": [
            [
                "table",
                "C",
                "B",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "A",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. D is on B. A is on D. A is clear.\n\nThe goal is:\nB is on the table. B is clear.\nC is on the table. A is on C. D is on A. D is clear.\n",
        "system1_plan": "Move A from D to table | Move D from B to table | Move B from C to table | Move A from table to C | Move D from table to A",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B, D, A] | Plan so far [] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [C, B, D] | Exploring action Move D from B to A | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [C, B, D] | Plan so far [Move A from D to table] | Exploring action Move A from table to D | New state -> Stack 1: [C, B, D, A] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from C to D | New state -> Invalid | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move A from D to table | Move D from B to table] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to D | New state -> Invalid | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from D to table | Move D from B to table | Move B from C to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move A from D to table | Move D from B to table | Move B from C to table | Move A from table to C] | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Taking action Move D from table to A | Moved to state -> Stack 1: [B], Stack 2: [C, A, D] | Plan so far [Move A from D to table | Move D from B to table | Move B from C to table | Move A from table to C | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 19
    },
    {
        "idx": 352,
        "start": [
            [
                "table",
                "D",
                "A",
                "B",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nD is on the table. A is on D. B is on A. C is on B. C is clear.\n\nThe goal is:\nA is on the table. B is on A. D is on B. D is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move C from B to table | Move B from A to table | Move A from D to table | Move B from table to A | Move D from table to B",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [D, A, B, C] | Plan so far [] | Exploring action Move B from A to table | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [C], Stack 2: [D, A, B] | Exploring action Move A from D to C | New state -> Invalid | Taking action Move C from B to table | Moved to state -> Stack 1: [C], Stack 2: [D, A, B] | Plan so far [Move C from B to table] | Exploring action Move A from D to C | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move B from A to C | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move C from table to B | New state -> Stack 1: [D, A, B, C] | Taking action Move B from A to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move C from B to table | Move B from A to table] | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from B to table | Move B from A to table | Move A from D to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move B from table to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from B to table | Move B from A to table | Move A from D to table | Move B from table to A] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move D from table to B | Moved to state -> Stack 1: [A, B, D], Stack 2: [C] | Plan so far [Move C from B to table | Move B from A to table | Move A from D to table | Move B from table to A | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 332,
        "start": [
            [
                "table",
                "B",
                "C",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "D",
                "B",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. C is on B. A is on C. A is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. D is on A. B is on D. C is on B. C is clear.\n",
        "system1_plan": "Move A from C to table | Move C from B to table | Move D from table to A | Move B from table to D | Move C from table to B",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, C, A], Stack 2: [D] | Plan so far [] | Exploring action Move A from C to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [B, C, A, D] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from B to table | New state -> Invalid | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move A from C to table] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Taking action Move D from table to A | Moved to state -> Stack 1: [A, D], Stack 2: [B, C] | Plan so far [Move A from C to table | Move D from table to A] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from B to D | New state -> Stack 1: [A, D, C], Stack 2: [B] | Exploring action Move C from B to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move A from C to D | Moved to state -> Stack 1: [B, C], Stack 2: [D, A] | Plan so far [Move A from C to D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move A from D to C | New state -> Stack 1: [B, C, A], Stack 2: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move C from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from C to table | Move C from B to table] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move A from C to D | Move A from D to table] | Taking action Move D from table to A | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move A from C to table | Move C from B to table | Move D from table to A] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move B from table to D | New state -> Stack 1: [A, D, B], Stack 2: [C] | Exploring action Move C from table to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Taking action Move C from B to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move A from C to table | Move D from table to A | Move C from B to table] | Taking action Move B from table to D | Moved to state -> Stack 1: [A, D, B], Stack 2: [C] | Plan so far [Move A from C to table | Move C from B to table | Move D from table to A | Move B from table to D] | Exploring action Move B from D to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from D to C | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move C from table to B | New state -> Stack 1: [A, D, B, C] | Taking action Move C from table to B | Moved to state -> Stack 1: [A, D, B, C] | Plan so far [Move A from C to table | Move C from B to table | Move D from table to A | Move B from table to D | Move C from table to B] | Reached goal state!",
        "system2_states_v1": 29
    },
    {
        "idx": 460,
        "start": [
            [
                "table",
                "C",
                "E",
                "B"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A",
                "C",
                "D",
                "E"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "E",
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. E is on C. B is on E. B is clear.\nD is on the table. A is on D. A is clear.\n\nThe goal is:\nB is on the table. A is on B. C is on A. D is on C. E is on D. E is clear.\n",
        "system1_plan": "Move B from E to table | Move A from D to B | Move E from C to table | Move C from table to A | Move D from table to C | Move E from table to D",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, E, B], Stack 2: [D, A] | Plan so far [] | Exploring action Move E from C to A | New state -> Invalid | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from E to table | New state -> Stack 1: [B], Stack 2: [C, E], Stack 3: [D, A] | Exploring action Move A from D to B | New state -> Stack 1: [C, E, B, A], Stack 2: [D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [C, E, B], Stack 3: [D] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [C, E, B], Stack 3: [D] | Plan so far [Move A from D to table] | Exploring action Move B from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from E to D | New state -> Stack 1: [A], Stack 2: [C, E], Stack 3: [D, B] | Exploring action Move B from E to A | New state -> Stack 1: [A, B], Stack 2: [C, E], Stack 3: [D] | Taking action Move B from E to table | Moved to state -> Stack 1: [B], Stack 2: [C, E], Stack 3: [D, A] | Plan so far [Move B from E to table] | Exploring action Move C from table to E | New state -> Invalid | Exploring action Move E from C to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C, E], Stack 3: [D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Taking action Move A from D to B | Moved to state -> Stack 1: [B, A], Stack 2: [C, E], Stack 3: [D] | Plan so far [Move B from E to table | Move A from D to B] | Exploring action Move C from table to E | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move E from C to A | New state -> Stack 1: [B, A, E], Stack 2: [C], Stack 3: [D] | Exploring action Move E from C to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move E from C to D | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D, E] | Taking action Move E from C to table | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Plan so far [Move B from E to table | Move A from D to B | Move E from C to table] | Exploring action Move B from table to E | New state -> Invalid | Exploring action Move E from table to D | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D, E] | Exploring action Move C from table to E | New state -> Stack 1: [B, A], Stack 2: [D], Stack 3: [E, C] | Exploring action Move C from table to A | New state -> Stack 1: [B, A, C], Stack 2: [D], Stack 3: [E] | Exploring action Move B from table to C | New state -> Invalid | Taking action Move E from C to D | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D, E] | Plan so far [Move B from E to table | Move A from D to B | Move E from C to D] | Exploring action Move C from table to A | New state -> Stack 1: [B, A, C], Stack 2: [D, E] | Exploring action Move B from table to E | New state -> Invalid | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move E from D to A | New state -> Stack 1: [B, A, E], Stack 2: [C], Stack 3: [D] | Exploring action Move E from D to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Taking action Move C from table to A | Moved to state -> Stack 1: [B, A, C], Stack 2: [D], Stack 3: [E] | Plan so far [Move B from E to table | Move A from D to B | Move E from C to table | Move C from table to A] | Exploring action Move E from table to D | New state -> Stack 1: [B, A, C], Stack 2: [D, E] | Exploring action Move A from B to D | New state -> Invalid | Exploring action Move E from table to C | New state -> Stack 1: [B, A, C, E], Stack 2: [D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [B, A, C, D], Stack 2: [E] | Taking action Move C from table to A | Moved to state -> Stack 1: [B, A, C], Stack 2: [D, E] | Plan so far [Move B from E to table | Move A from D to B | Move E from C to D | Move C from table to A] | Exploring action Move E from D to C | New state -> Stack 1: [B, A, C, E], Stack 2: [D] | Exploring action Move C from A to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D, E] | Exploring action Move E from D to table | New state -> Stack 1: [B, A, C], Stack 2: [D], Stack 3: [E] | Exploring action Move A from B to E | New state -> Invalid | Taking action Move D from table to C | Moved to state -> Stack 1: [B, A, C, D], Stack 2: [E] | Plan so far [Move B from E to table | Move A from D to B | Move E from C to table | Move C from table to A | Move D from table to C] | Exploring action Move E from table to D | New state -> Stack 1: [B, A, C, D, E] | Exploring action Move D from C to table | New state -> Stack 1: [B, A, C], Stack 2: [D], Stack 3: [E] | Exploring action Move D from C to E | New state -> Stack 1: [B, A, C], Stack 2: [E, D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move A from B to D | New state -> Invalid | Taking action Move E from table to D | Moved to state -> Stack 1: [B, A, C, D, E] | Plan so far [Move B from E to table | Move A from D to B | Move E from C to table | Move C from table to A | Move D from table to C | Move E from table to D] | Reached goal state!",
        "system2_states_v1": 43
    },
    {
        "idx": 426,
        "start": [
            [
                "table",
                "A",
                "E",
                "C"
            ],
            [
                "table",
                "B",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "D"
            ],
            [
                "table",
                "E",
                "A",
                "C",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "E",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. E is on A. C is on E. C is clear.\nB is on the table. D is on B. D is clear.\n\nThe goal is:\nD is on the table. D is clear.\nE is on the table. A is on E. C is on A. B is on C. B is clear.\n",
        "system1_plan": "Move D from B to table | Move C from E to table | Move E from A to table | Move A from table to E | Move C from table to A | Move B from table to C",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, E, C], Stack 2: [B, D] | Plan so far [] | Exploring action Move D from B to table | New state -> Stack 1: [A, E, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from E to D | New state -> Stack 1: [A, E], Stack 2: [B, D, C] | Exploring action Move C from E to table | New state -> Stack 1: [A, E], Stack 2: [B, D], Stack 3: [C] | Exploring action Move E from A to table | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A, E, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from B to table] | Exploring action Move C from E to table | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from E to B | New state -> Stack 1: [A, E], Stack 2: [B, C], Stack 3: [D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [A, E, C, B], Stack 2: [D] | Exploring action Move E from A to table | New state -> Invalid | Taking action Move C from E to table | Moved to state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from B to table | Move C from E to table] | Exploring action Move E from A to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Exploring action Move E from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move B from table to C | New state -> Stack 1: [A, E], Stack 2: [C, B], Stack 3: [D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move A from table to C | New state -> Invalid | Taking action Move E from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move D from B to table | Move C from E to table | Move E from A to table] | Exploring action Move A from table to E | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D], Stack 4: [E, A] | Exploring action Move C from table to E | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Taking action Move A from table to E | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D], Stack 4: [E, A] | Plan so far [Move D from B to table | Move C from E to table | Move E from A to table | Move A from table to E] | Exploring action Move B from table to C | New state -> Stack 1: [C, B], Stack 2: [D], Stack 3: [E, A] | Exploring action Move A from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move C from table to A | New state -> Stack 1: [B], Stack 2: [D], Stack 3: [E, A, C] | Exploring action Move E from table to C | New state -> Invalid | Taking action Move C from table to A | Moved to state -> Stack 1: [B], Stack 2: [D], Stack 3: [E, A, C] | Plan so far [Move D from B to table | Move C from E to table | Move E from A to table | Move A from table to E | Move C from table to A] | Exploring action Move A from E to B | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [E, A, C] | Exploring action Move B from table to C | New state -> Stack 1: [D], Stack 2: [E, A, C, B] | Exploring action Move C from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D], Stack 4: [E, A] | Exploring action Move A from E to C | New state -> Invalid | Taking action Move B from table to C | Moved to state -> Stack 1: [D], Stack 2: [E, A, C, B] | Plan so far [Move D from B to table | Move C from E to table | Move E from A to table | Move A from table to E | Move C from table to A | Move B from table to C] | Reached goal state!",
        "system2_states_v1": 26
    },
    {
        "idx": 361,
        "start": [
            [
                "table",
                "A",
                "D",
                "B"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. B is on D. B is clear.\nC is on the table. C is clear.\n\nThe goal is:\nA is on the table. C is on A. D is on C. B is on D. B is clear.\n",
        "system1_plan": "Move B from D to table | Move D from A to table | Move C from table to A | Move D from table to C | Move B from table to D",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D, B], Stack 2: [C] | Plan so far [] | Exploring action Move D from A to B | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A, D, B, C] | Exploring action Move B from D to C | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move B from D to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move B from D to table] | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to D | New state -> Invalid | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from D to table | Move D from A to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Taking action Move C from table to A | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move B from D to table | Move D from A to table | Move C from table to A] | Exploring action Move D from table to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move B from table to D | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move D from table to C | New state -> Stack 1: [A, C, D], Stack 2: [B] | Exploring action Move A from table to D | New state -> Invalid | Taking action Move D from table to C | Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [Move B from D to table | Move D from A to table | Move C from table to A | Move D from table to C] | Exploring action Move D from C to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move B from table to D | New state -> Stack 1: [A, C, D, B] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Taking action Move B from table to D | Moved to state -> Stack 1: [A, C, D, B] | Plan so far [Move B from D to table | Move D from A to table | Move C from table to A | Move D from table to C | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 21
    },
    {
        "idx": 256,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "B",
                "A",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. D is on B. D is clear.\nC is on the table. C is clear.\n\nThe goal is:\nC is on the table. B is on C. A is on B. D is on A. D is clear.\n",
        "system1_plan": "Move D from B to table | Move B from table to C | Move A from table to B | Move D from table to A",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from B to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move B from table to D | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from B to table] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move D from B to A | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move D from B to A] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to C | New state -> Stack 1: [A, D], Stack 2: [C, B] | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move D from B to table | Move B from table to C] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [C, B, A], Stack 2: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Taking action Move B from table to C | Moved to state -> Stack 1: [A, D], Stack 2: [C, B] | Plan so far [Move D from B to A | Move B from table to C] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [C, B, D] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from C to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move A from table to B | Moved to state -> Stack 1: [C, B, A], Stack 2: [D] | Plan so far [Move D from B to table | Move B from table to C | Move A from table to B] | Exploring action Move A from B to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [C, B, A, D] | Taking action Move D from table to A | Moved to state -> Stack 1: [C, B, A, D] | Plan so far [Move D from B to table | Move B from table to C | Move A from table to B | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 26
    },
    {
        "idx": 240,
        "start": [
            [
                "table",
                "A",
                "C",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. B is on C. B is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nC is on the table. D is on C. B is on D. B is clear.\n",
        "system1_plan": "Move B from C to table | Move C from A to table | Move D from table to C | Move B from table to D",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, B], Stack 2: [D] | Plan so far [] | Exploring action Move D from table to B | New state -> Stack 1: [A, C, B, D] | Exploring action Move B from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from C to D | New state -> Stack 1: [A, C], Stack 2: [D, B] | Taking action Move B from C to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move B from C to table] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move A from table to D | New state -> Invalid | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from C to table | Move C from A to table] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move B from C to table | Move C from A to table | Move D from table to C] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C, D, B] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C, D, B] | Plan so far [Move B from C to table | Move C from A to table | Move D from table to C | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 16
    },
    {
        "idx": 226,
        "start": [
            [
                "table",
                "C",
                "B"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "D",
                "A"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. B is clear.\nD is on the table. A is on D. A is clear.\n\nThe goal is:\nB is on the table. D is on B. A is on D. A is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move B from C to table | Move A from D to table | Move D from table to B | Move A from table to D",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B], Stack 2: [D, A] | Plan so far [] | Exploring action Move B from C to A | New state -> Stack 1: [C], Stack 2: [D, A, B] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move B from C to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move B from C to table] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from C to table | Move A from D to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move D from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move B from C to table | Move A from D to table | Move D from table to B] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [B, D, A], Stack 2: [C] | Taking action Move A from table to D | Moved to state -> Stack 1: [B, D, A], Stack 2: [C] | Plan so far [Move B from C to table | Move A from D to table | Move D from table to B | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 16
    },
    {
        "idx": 357,
        "start": [
            [
                "table",
                "A",
                "D",
                "C",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "A",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. C is on D. B is on C. B is clear.\n\nThe goal is:\nC is on the table. A is on C. B is on A. B is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move B from C to table | Move C from D to table | Move D from A to table | Move A from table to C | Move B from table to A",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D, C, B] | Plan so far [] | Exploring action Move C from D to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A, D, C], Stack 2: [B] | Taking action Move B from C to table | Moved to state -> Stack 1: [A, D, C], Stack 2: [B] | Plan so far [Move B from C to table] | Exploring action Move C from D to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from A to table | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [A, D, C, B] | Exploring action Move C from D to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move A from table to B | New state -> Invalid | Taking action Move C from D to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move B from C to table | Move C from D to table] | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from C to table | Move C from D to table | Move D from A to table] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move B from C to table | Move C from D to table | Move D from A to table | Move A from table to C] | Exploring action Move B from table to A | New state -> Stack 1: [C, A, B], Stack 2: [D] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move C from table to D | New state -> Invalid | Taking action Move B from table to A | Moved to state -> Stack 1: [C, A, B], Stack 2: [D] | Plan so far [Move B from C to table | Move C from D to table | Move D from A to table | Move A from table to C | Move B from table to A] | Reached goal state!",
        "system2_states_v1": 19
    },
    {
        "idx": 143,
        "start": [
            [
                "table",
                "B",
                "D",
                "A"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "A",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. D is on B. A is on D. A is clear.\nC is on the table. C is clear.\n\nThe goal is:\nC is on the table. A is on C. B is on A. B is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move A from D to C | Move D from B to table | Move B from table to A",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, D, A], Stack 2: [C] | Plan so far [] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [B, D, A, C] | Exploring action Move A from D to C | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move A from D to C | Moved to state -> Stack 1: [B, D], Stack 2: [C, A] | Plan so far [Move A from D to C] | Exploring action Move D from B to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from B to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move D from B to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move A from D to C | Move D from B to table] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [C, A, B], Stack 2: [D] | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Taking action Move B from table to A | Moved to state -> Stack 1: [C, A, B], Stack 2: [D] | Plan so far [Move A from D to C | Move D from B to table | Move B from table to A] | Reached goal state!",
        "system2_states_v1": 15
    },
    {
        "idx": 448,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "E",
                "B",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "E",
                "C",
                "D",
                "B",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "E",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "E",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nC is on the table. C is clear.\nE is on the table. B is on E. D is on B. D is clear.\n\nThe goal is:\nE is on the table. C is on E. D is on C. B is on D. A is on B. A is clear.\n",
        "system1_plan": "Move D from B to table | Move B from E to table | Move C from table to E | Move D from table to C | Move B from table to D | Move A from table to B",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [E, B, D] | Plan so far [] | Exploring action Move B from E to A | New state -> Invalid | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [C], Stack 3: [E, B] | Exploring action Move D from B to C | New state -> Stack 1: [A], Stack 2: [C, D], Stack 3: [E, B] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Plan so far [Move D from B to table] | Exploring action Move E from table to C | New state -> Invalid | Exploring action Move B from E to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move B from E to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Exploring action Move E from table to A | New state -> Invalid | Exploring action Move B from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move B from E to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move D from B to table | Move B from E to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move C from table to E | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Taking action Move C from table to E | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Plan so far [Move D from B to table | Move B from E to table | Move C from table to E] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [E, C, D] | Exploring action Move E from table to B | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [D], Stack 3: [E, C] | Exploring action Move C from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [E, C, D] | Plan so far [Move D from B to table | Move B from E to table | Move C from table to E | Move D from table to C] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [E, C, D, B] | Exploring action Move C from E to A | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [E, C, D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [E, C, D] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [E, C, D, B] | Plan so far [Move D from B to table | Move B from E to table | Move C from table to E | Move D from table to C | Move B from table to D] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [E, C, D] | Exploring action Move A from table to B | New state -> Stack 1: [E, C, D, B, A] | Exploring action Move E from table to B | New state -> Invalid | Exploring action Move E from table to A | New state -> Invalid | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [E, C, D] | Taking action Move A from table to B | Moved to state -> Stack 1: [E, C, D, B, A] | Plan so far [Move D from B to table | Move B from E to table | Move C from table to E | Move D from table to C | Move B from table to D | Move A from table to B] | Reached goal state!",
        "system2_states_v1": 25
    },
    {
        "idx": 257,
        "start": [
            [
                "table",
                "C",
                "D",
                "B",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. D is on C. B is on D. A is on B. A is clear.\n\nThe goal is:\nB is on the table. B is clear.\nC is on the table. C is clear.\nD is on the table. A is on D. A is clear.\n",
        "system1_plan": "Move A from B to table | Move B from D to table | Move D from C to table | Move A from table to D",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, D, B, A] | Plan so far [] | Exploring action Move B from D to A | New state -> Invalid | Exploring action Move B from D to table | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C, D, B] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, D, B] | Plan so far [Move A from B to table] | Exploring action Move D from C to table | New state -> Invalid | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move A from table to B | New state -> Stack 1: [C, D, B, A] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move A from B to table | Move B from D to table] | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from B to table | Move B from D to table | Move D from C to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move A from table to D | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move A from B to table | Move B from D to table | Move D from C to table | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 14
    },
    {
        "idx": 152,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "B",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. D is on B. D is clear.\nC is on the table. C is clear.\n\nThe goal is:\nC is on the table. B is on C. A is on B. A is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move D from B to table | Move B from table to C | Move A from table to B",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move D from B to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to D | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from B to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move D from B to table | Move B from table to C] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move A from table to B | New state -> Stack 1: [C, B, A], Stack 2: [D] | Exploring action Move C from table to D | New state -> Invalid | Taking action Move A from table to B | Moved to state -> Stack 1: [C, B, A], Stack 2: [D] | Plan so far [Move D from B to table | Move B from table to C | Move A from table to B] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 473,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "E",
                "D",
                "A",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "C"
            ],
            [
                "table",
                "E",
                "B",
                "A",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "E",
                "under": "A",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "E",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nE is on the table. D is on E. A is on D. C is on A. C is clear.\n\nThe goal is:\nC is on the table. C is clear.\nE is on the table. B is on E. A is on B. D is on A. D is clear.\n",
        "system1_plan": "Move C from A to table | Move A from D to table | Move D from E to table | Move B from table to E | Move A from table to B | Move D from table to A",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [E, D, A, C] | Plan so far [] | Exploring action Move B from table to C | New state -> Stack 1: [E, D, A, C, B] | Exploring action Move C from A to B | New state -> Stack 1: [B, C], Stack 2: [E, D, A] | Exploring action Move E from table to B | New state -> Invalid | Exploring action Move D from E to B | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [E, D, A] | Taking action Move C from A to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [E, D, A] | Plan so far [Move C from A to table] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [E, D] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [E, D] | Exploring action Move E from table to A | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Plan so far [Move C from A to table | Move A from D to table] | Exploring action Move E from table to D | New state -> Invalid | Exploring action Move D from E to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C], Stack 4: [E] | Exploring action Move D from E to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move D from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move D from E to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move C from A to table | Move A from D to table | Move D from E to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move B from table to E | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C], Stack 4: [E] | Taking action Move D from E to A | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C], Stack 4: [E] | Plan so far [Move C from A to table | Move A from D to table | Move D from E to A] | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from table to E | New state -> Stack 1: [A, D], Stack 2: [C], Stack 3: [E, B] | Exploring action Move A from table to C | New state -> Invalid | Taking action Move B from table to E | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Plan so far [Move C from A to table | Move A from D to table | Move D from E to table | Move B from table to E] | Exploring action Move A from table to B | New state -> Stack 1: [C], Stack 2: [D], Stack 3: [E, B, A] | Exploring action Move A from table to D | New state -> Stack 1: [C], Stack 2: [D, A], Stack 3: [E, B] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [C], Stack 3: [E, B] | Exploring action Move E from table to C | New state -> Invalid | Taking action Move B from table to E | Moved to state -> Stack 1: [A, D], Stack 2: [C], Stack 3: [E, B] | Plan so far [Move C from A to table | Move A from D to table | Move D from E to A | Move B from table to E] | Exploring action Move E from table to D | New state -> Invalid | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [E, B, D] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Exploring action Move B from E to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C], Stack 4: [E] | Taking action Move A from table to B | Moved to state -> Stack 1: [C], Stack 2: [D], Stack 3: [E, B, A] | Plan so far [Move C from A to table | Move A from D to table | Move D from E to table | Move B from table to E | Move A from table to B] | Exploring action Move A from B to D | New state -> Stack 1: [C], Stack 2: [D, A], Stack 3: [E, B] | Exploring action Move D from table to A | New state -> Stack 1: [C], Stack 2: [E, B, A, D] | Exploring action Move B from E to A | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Exploring action Move E from table to C | New state -> Invalid | Taking action Move D from table to A | Moved to state -> Stack 1: [C], Stack 2: [E, B, A, D] | Plan so far [Move C from A to table | Move A from D to table | Move D from E to table | Move B from table to E | Move A from table to B | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 34
    },
    {
        "idx": 164,
        "start": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. C is clear.\nB is on the table. B is clear.\nD is on the table. D is clear.\n\nThe goal is:\nB is on the table. B is clear.\nC is on the table. D is on C. A is on D. A is clear.\n",
        "system1_plan": "Move C from A to table | Move D from table to C | Move A from table to D",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [] | Exploring action Move D from table to C | New state -> Stack 1: [A, C, D], Stack 2: [B] | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from A to table] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move C from A to table | Move D from table to C] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C, D, A] | Exploring action Move C from table to B | New state -> Invalid | Taking action Move A from table to D | Moved to state -> Stack 1: [B], Stack 2: [C, D, A] | Plan so far [Move C from A to table | Move D from table to C | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 266,
        "start": [
            [
                "table",
                "A",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. D is on B. D is clear.\nC is on the table. C is clear.\n\nThe goal is:\nA is on the table. C is on A. C is clear.\nB is on the table. D is on B. D is clear.\n",
        "system1_plan": "Move D from B to table | Move B from A to table | Move C from table to A | Move D from table to B",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B, D], Stack 2: [C] | Plan so far [] | Exploring action Move D from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move D from B to C | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move C from table to D | New state -> Stack 1: [A, B, D, C] | Exploring action Move B from A to D | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move D from B to table] | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to B | New state -> Invalid | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from B to table | Move B from A to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move C from table to A | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from B to table | Move B from A to table | Move C from table to A] | Exploring action Move D from table to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move A from table to C | New state -> Invalid | Taking action Move D from table to B | Moved to state -> Stack 1: [A, C], Stack 2: [B, D] | Plan so far [Move D from B to table | Move B from A to table | Move C from table to A | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 15
    },
    {
        "idx": 136,
        "start": [
            [
                "table",
                "A",
                "C",
                "D"
            ],
            [
                "table",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. D is on C. D is clear.\nB is on the table. B is clear.\n\nThe goal is:\nA is on the table. B is on A. B is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move D from C to table | Move C from A to table | Move B from table to A",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [] | Exploring action Move C from A to B | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from C to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move B from table to D | New state -> Stack 1: [A, C, D, B] | Exploring action Move A from table to D | New state -> Invalid | Taking action Move D from C to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from C to table] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to C | New state -> Stack 1: [A, C, B], Stack 2: [D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from C to table | Move C from A to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move B from table to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move D from C to table | Move C from A to table | Move B from table to A] | Reached goal state!",
        "system2_states_v1": 13
    },
    {
        "idx": 366,
        "start": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "C",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "D",
                "C",
                "A",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. D is clear.\nC is on the table. B is on C. B is clear.\n\nThe goal is:\nD is on the table. C is on D. A is on C. B is on A. B is clear.\n",
        "system1_plan": "Move B from C to table | Move D from A to table | Move C from table to D | Move A from table to C | Move B from table to A",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D], Stack 2: [C, B] | Plan so far [] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from C to D | New state -> Stack 1: [A, D, B], Stack 2: [C] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move B from C to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move B from C to table] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move D from A to table] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from C to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from C to table | Move D from A to table] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from A to table | Move B from C to table] | Taking action Move B from C to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move D from A to table | Move B from C to A] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move C from table to D | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move A from table to D | New state -> Invalid | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move B from C to table | Move D from A to table | Move C from table to D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [D, C, A] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [D, C] | Taking action Move C from table to D | Moved to state -> Stack 1: [A, B], Stack 2: [D, C] | Plan so far [Move D from A to table | Move B from C to A | Move C from table to D] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move B from A to C | New state -> Stack 1: [A], Stack 2: [D, C, B] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [D, C, A] | Plan so far [Move B from C to table | Move D from A to table | Move C from table to D | Move A from table to C] | Exploring action Move B from table to A | New state -> Stack 1: [D, C, A, B] | Exploring action Move C from D to A | New state -> Invalid | Exploring action Move A from C to B | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move B from table to A | Moved to state -> Stack 1: [D, C, A, B] | Plan so far [Move B from C to table | Move D from A to table | Move C from table to D | Move A from table to C | Move B from table to A] | Reached goal state!",
        "system2_states_v1": 33
    },
    {
        "idx": 71,
        "start": [
            [
                "table",
                "C",
                "A",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. A is on C. B is on A. B is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nC is on the table. C is clear.\nD is on the table. B is on D. B is clear.\n",
        "system1_plan": "Move B from A to D | Move A from C to table",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, A, B], Stack 2: [D] | Plan so far [] | Exploring action Move A from C to table | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [C, A, B, D] | Exploring action Move B from A to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move B from A to D | Moved to state -> Stack 1: [C, A], Stack 2: [D, B] | Plan so far [Move B from A to D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from C to B | New state -> Stack 1: [C], Stack 2: [D, B, A] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move B from A to D | Move A from C to table] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 24,
        "start": [
            [
                "table",
                "A",
                "D",
                "C"
            ],
            [
                "table",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "D",
                "B"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. C is on D. C is clear.\nB is on the table. B is clear.\n\nThe goal is:\nA is on the table. D is on A. B is on D. B is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move C from D to table | Move B from table to D",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D, C], Stack 2: [B] | Plan so far [] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move B from table to C | New state -> Stack 1: [A, D, C, B] | Exploring action Move C from D to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Taking action Move C from D to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move C from D to table] | Exploring action Move B from table to D | New state -> Stack 1: [A, D, B], Stack 2: [C] | Exploring action Move C from table to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from table to D | Moved to state -> Stack 1: [A, D, B], Stack 2: [C] | Plan so far [Move C from D to table | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 8
    },
    {
        "idx": 368,
        "start": [
            [
                "table",
                "A",
                "D",
                "C"
            ],
            [
                "table",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "B",
                "A",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. C is on D. C is clear.\nB is on the table. B is clear.\n\nThe goal is:\nC is on the table. B is on C. A is on B. D is on A. D is clear.\n",
        "system1_plan": "Move C from D to table | Move B from table to C | Move D from A to table | Move A from table to B | Move D from table to A",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D, C], Stack 2: [B] | Plan so far [] | Exploring action Move C from D to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move D from A to B | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [A, D, C, B] | Exploring action Move C from D to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move C from D to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move C from D to table] | Exploring action Move C from table to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to C | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move A from table to B | New state -> Invalid | Taking action Move B from table to C | Moved to state -> Stack 1: [A, D], Stack 2: [C, B] | Plan so far [Move C from D to table | Move B from table to C] | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [C, B, D] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move C from D to B | Moved to state -> Stack 1: [A, D], Stack 2: [B, C] | Plan so far [Move C from D to B] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from B to D | New state -> Stack 1: [A, D, C], Stack 2: [B] | Exploring action Move C from B to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from D to table | Move D from A to table] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move C from B to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move C from D to B | Move C from B to table] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move C from D to table | Move B from table to C | Move D from A to table] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [C, B, A], Stack 2: [D] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move C from D to table | Move D from A to table | Move B from table to C] | Taking action Move A from table to B | Moved to state -> Stack 1: [C, B, A], Stack 2: [D] | Plan so far [Move C from D to table | Move B from table to C | Move D from A to table | Move A from table to B] | Exploring action Move B from C to A | New state -> Invalid | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move A from B to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [C, B, A, D] | Taking action Move D from table to A | Moved to state -> Stack 1: [C, B, A, D] | Plan so far [Move C from D to table | Move B from table to C | Move D from A to table | Move A from table to B | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 30
    },
    {
        "idx": 66,
        "start": [
            [
                "table",
                "A",
                "C",
                "B",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. B is on C. D is on B. D is clear.\n\nThe goal is:\nA is on the table. C is on A. C is clear.\nD is on the table. B is on D. B is clear.\n",
        "system1_plan": "Move D from B to table | Move B from C to D",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, B, D] | Plan so far [] | Exploring action Move C from A to table | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A, C, B], Stack 2: [D] | Exploring action Move B from C to D | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A, C, B], Stack 2: [D] | Plan so far [Move D from B to table] | Exploring action Move B from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from A to D | New state -> Invalid | Exploring action Move C from A to table | New state -> Invalid | Exploring action Move B from C to D | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [A, C, B, D] | Taking action Move B from C to D | Moved to state -> Stack 1: [A, C], Stack 2: [D, B] | Plan so far [Move D from B to table | Move B from C to D] | Reached goal state!",
        "system2_states_v1": 8
    },
    {
        "idx": 261,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nC is on the table. D is on C. A is on D. A is clear.\n\nThe goal is:\nB is on the table. B is clear.\nD is on the table. C is on D. A is on C. A is clear.\n",
        "system1_plan": "Move A from D to table | Move D from C to table | Move C from table to D | Move A from table to C",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [C, D, A] | Plan so far [] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C, D] | Exploring action Move D from C to table | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [C, D, A, B] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move A from D to table] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move D from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from D to table | Move D from C to table] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move A from D to table | Move D from C to table | Move C from table to D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [D, C, A] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [D, C, A] | Plan so far [Move A from D to table | Move D from C to table | Move C from table to D | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 15
    },
    {
        "idx": 444,
        "start": [
            [
                "table",
                "C",
                "A"
            ],
            [
                "table",
                "D",
                "B",
                "E"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "D",
                "B"
            ],
            [
                "table",
                "C",
                "E"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "E",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "E": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. A is on C. A is clear.\nD is on the table. B is on D. E is on B. E is clear.\n\nThe goal is:\nA is on the table. D is on A. B is on D. B is clear.\nC is on the table. E is on C. E is clear.\n",
        "system1_plan": "Move E from B to table | Move A from C to table | Move E from table to C | Move B from D to table | Move D from table to A | Move B from table to D",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, A], Stack 2: [D, B, E] | Plan so far [] | Exploring action Move E from B to table | New state -> Stack 1: [C, A], Stack 2: [D, B], Stack 3: [E] | Exploring action Move D from table to E | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B, E] | Exploring action Move E from B to A | New state -> Stack 1: [C, A, E], Stack 2: [D, B] | Taking action Move E from B to table | Moved to state -> Stack 1: [C, A], Stack 2: [D, B], Stack 3: [E] | Plan so far [Move E from B to table] | Exploring action Move A from C to E | New state -> Stack 1: [C], Stack 2: [D, B], Stack 3: [E, A] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from table to E | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Plan so far [Move E from B to table | Move A from C to table] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move E from table to C | New state -> Stack 1: [A], Stack 2: [C, E], Stack 3: [D, B] | Exploring action Move B from D to E | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move D from table to C | New state -> Invalid | Taking action Move E from table to C | Moved to state -> Stack 1: [A], Stack 2: [C, E], Stack 3: [D, B] | Plan so far [Move E from B to table | Move A from C to table | Move E from table to C] | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C, E], Stack 3: [D] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move D from table to E | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Exploring action Move A from table to B | New state -> Stack 1: [C, E], Stack 2: [D, B, A] | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Plan so far [Move E from B to table | Move A from C to table | Move E from table to C | Move B from D to table] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C, E] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C, E], Stack 3: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C, E], Stack 3: [D, B] | Taking action Move D from table to A | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C, E] | Plan so far [Move E from B to table | Move A from C to table | Move E from table to C | Move B from D to table | Move D from table to A] | Exploring action Move B from table to D | New state -> Stack 1: [A, D, B], Stack 2: [C, E] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move E from C to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C], Stack 4: [E] | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Taking action Move B from table to D | Moved to state -> Stack 1: [A, D, B], Stack 2: [C, E] | Plan so far [Move E from B to table | Move A from C to table | Move E from table to C | Move B from D to table | Move D from table to A | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 28
    },
    {
        "idx": 124,
        "start": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. A is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. C is on A. C is clear.\nD is on the table. B is on D. B is clear.\n",
        "system1_plan": "Move A from B to table | Move B from table to D | Move C from table to A",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [] | Exploring action Move A from B to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to A | New state -> Invalid | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from B to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move A from B to table | Move B from table to D] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [D, B] | Taking action Move C from table to A | Moved to state -> Stack 1: [A, C], Stack 2: [D, B] | Plan so far [Move A from B to table | Move B from table to D | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 11
    },
    {
        "idx": 125,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "A",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. D is on C. D is clear.\n\nThe goal is:\nB is on the table. B is clear.\nC is on the table. A is on C. D is on A. D is clear.\n",
        "system1_plan": "Move D from C to table | Move A from table to C | Move D from table to A",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [] | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move D from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from C to table] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move D from C to A | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move D from C to A] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move D from C to table | Move A from table to C] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move D from table to A | Moved to state -> Stack 1: [B], Stack 2: [C, A, D] | Plan so far [Move D from C to table | Move A from table to C | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 15
    },
    {
        "idx": 149,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. B is on A. C is on B. D is on C. D is clear.\n",
        "system1_plan": "Move B from table to A | Move C from table to B | Move D from table to C",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Taking action Move B from table to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move B from table to A] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A, B, C], Stack 2: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A, B], Stack 2: [C, D] | Taking action Move C from table to B | Moved to state -> Stack 1: [A, B, C], Stack 2: [D] | Plan so far [Move B from table to A | Move C from table to B] | Exploring action Move C from B to D | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move B from A to C | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move B from A to D | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A, B, C, D] | Taking action Move D from table to C | Moved to state -> Stack 1: [A, B, C, D] | Plan so far [Move B from table to A | Move C from table to B | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 13
    },
    {
        "idx": 172,
        "start": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "C",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. D is clear.\nC is on the table. B is on C. B is clear.\n\nThe goal is:\nA is on the table. C is on A. C is clear.\nB is on the table. B is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move B from C to table | Move D from A to table | Move C from table to A",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D], Stack 2: [C, B] | Plan so far [] | Exploring action Move B from C to D | New state -> Stack 1: [A, D, B], Stack 2: [C] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from C to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move B from C to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move B from C to table] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from C to table | Move D from A to table] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Taking action Move C from table to A | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move B from C to table | Move D from A to table | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 370,
        "start": [
            [
                "table",
                "C",
                "B",
                "A",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. A is on B. D is on A. D is clear.\n\nThe goal is:\nB is on the table. A is on B. A is clear.\nD is on the table. C is on D. C is clear.\n",
        "system1_plan": "Move D from A to table | Move A from B to table | Move B from C to table | Move A from table to B | Move C from table to D",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B, A, D] | Plan so far [] | Exploring action Move B from C to D | New state -> Invalid | Exploring action Move A from B to D | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [C, B, A], Stack 2: [D] | Taking action Move D from A to table | Moved to state -> Stack 1: [C, B, A], Stack 2: [D] | Plan so far [Move D from A to table] | Exploring action Move D from table to A | New state -> Stack 1: [C, B, A, D] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from C to table | New state -> Invalid | Exploring action Move A from B to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move D from A to table | Move A from B to table] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [C, B, A], Stack 2: [D] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from A to table | Move A from B to table | Move B from C to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move D from A to table | Move A from B to table | Move B from C to table | Move A from table to B] | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [B, A], Stack 2: [C, D] | Exploring action Move C from table to D | New state -> Stack 1: [B, A], Stack 2: [D, C] | Taking action Move C from table to D | Moved to state -> Stack 1: [B, A], Stack 2: [D, C] | Plan so far [Move D from A to table | Move A from B to table | Move B from C to table | Move A from table to B | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 337,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "A",
                "B",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nC is on the table. D is on C. A is on D. A is clear.\n\nThe goal is:\nC is on the table. A is on C. B is on A. D is on B. D is clear.\n",
        "system1_plan": "Move A from D to table | Move D from C to table | Move A from table to C | Move B from table to A | Move D from table to B",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [C, D, A] | Plan so far [] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C, D] | Exploring action Move D from C to table | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move B from table to A | New state -> Stack 1: [C, D, A, B] | Exploring action Move D from C to B | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move A from D to table] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move D from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from D to table | Move D from C to table] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move D from C to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move A from D to table | Move D from C to B] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move A from table to C | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to D | New state -> Invalid | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move A from D to table | Move D from C to table | Move A from table to C] | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [C, A, B], Stack 2: [D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B, D], Stack 2: [C, A] | Plan so far [Move A from D to table | Move D from C to B | Move A from table to C] | Exploring action Move D from B to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move D from B to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move B from table to A | Moved to state -> Stack 1: [C, A, B], Stack 2: [D] | Plan so far [Move A from D to table | Move D from C to table | Move A from table to C | Move B from table to A] | Exploring action Move A from C to D | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [C, A, B, D] | Exploring action Move B from A to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move D from table to B | Moved to state -> Stack 1: [C, A, B, D] | Plan so far [Move A from D to table | Move D from C to table | Move A from table to C | Move B from table to A | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 30
    },
    {
        "idx": 329,
        "start": [
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "B",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "D",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. C is clear.\nD is on the table. B is on D. A is on B. A is clear.\n\nThe goal is:\nB is on the table. D is on B. C is on D. A is on C. A is clear.\n",
        "system1_plan": "Move A from B to table | Move B from D to table | Move D from table to B | Move C from table to D | Move A from table to C",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [C], Stack 2: [D, B, A] | Plan so far [] | Exploring action Move A from B to C | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move C from table to A | New state -> Stack 1: [D, B, A, C] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from D to C | New state -> Invalid | Exploring action Move B from D to A | New state -> Invalid | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move A from B to table] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move A from B to C | Moved to state -> Stack 1: [C, A], Stack 2: [D, B] | Plan so far [Move A from B to C] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from C to B | New state -> Stack 1: [C], Stack 2: [D, B, A] | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from B to table | Move B from D to table] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move B from D to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move A from B to C | Move B from D to table] | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move C from table to B | New state -> Invalid | Taking action Move D from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move A from B to table | Move B from D to table | Move D from table to B] | Exploring action Move A from table to C | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B, D, C] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move B from table to A | New state -> Invalid | Taking action Move D from table to B | Moved to state -> Stack 1: [B, D], Stack 2: [C, A] | Plan so far [Move A from B to C | Move B from D to table | Move D from table to B] | Exploring action Move A from C to D | New state -> Stack 1: [B, D, A], Stack 2: [C] | Exploring action Move D from B to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move B from table to D | New state -> Invalid | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B, D, C] | Plan so far [Move A from B to table | Move B from D to table | Move D from table to B | Move C from table to D] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move A from table to C | New state -> Stack 1: [B, D, C, A] | Taking action Move A from table to C | Moved to state -> Stack 1: [B, D, C, A] | Plan so far [Move A from B to table | Move B from D to table | Move D from table to B | Move C from table to D | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 37
    },
    {
        "idx": 40,
        "start": [
            [
                "table",
                "A",
                "C",
                "D",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. D is on C. B is on D. B is clear.\n\nThe goal is:\nA is on the table. C is on A. C is clear.\nB is on the table. D is on B. D is clear.\n",
        "system1_plan": "Move B from D to table | Move D from C to B",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, D, B] | Plan so far [] | Exploring action Move D from C to B | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A, C, D], Stack 2: [B] | Taking action Move B from D to table | Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [Move B from D to table] | Exploring action Move D from C to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move C from A to table | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [A, C, D, B] | Exploring action Move D from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Taking action Move D from C to B | Moved to state -> Stack 1: [A, C], Stack 2: [B, D] | Plan so far [Move B from D to table | Move D from C to B] | Reached goal state!",
        "system2_states_v1": 6
    },
    {
        "idx": 260,
        "start": [
            [
                "table",
                "C",
                "B"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "B",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. B is clear.\nD is on the table. A is on D. A is clear.\n\nThe goal is:\nC is on the table. C is clear.\nD is on the table. B is on D. A is on B. A is clear.\n",
        "system1_plan": "Move B from C to table | Move A from D to table | Move B from table to D | Move A from table to B",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B], Stack 2: [D, A] | Plan so far [] | Exploring action Move A from D to B | New state -> Stack 1: [C, B, A], Stack 2: [D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move B from C to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move B from C to table] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from C to table | Move A from D to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move A from D to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move B from C to table | Move A from D to B] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move B from C to table | Move A from D to table | Move B from table to D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [C], Stack 2: [D, B, A] | Taking action Move A from table to B | Moved to state -> Stack 1: [C], Stack 2: [D, B, A] | Plan so far [Move B from C to table | Move A from D to table | Move B from table to D | Move A from table to B] | Reached goal state!",
        "system2_states_v1": 21
    },
    {
        "idx": 271,
        "start": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "A"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. C is clear.\nB is on the table. D is on B. D is clear.\n\nThe goal is:\nC is on the table. A is on C. A is clear.\nD is on the table. B is on D. B is clear.\n",
        "system1_plan": "Move C from A to table | Move A from table to C | Move D from B to table | Move B from table to D",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C], Stack 2: [B, D] | Plan so far [] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B, D, C] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move C from A to table] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to C | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move B from table to C | New state -> Invalid | Taking action Move A from table to C | Moved to state -> Stack 1: [B, D], Stack 2: [C, A] | Plan so far [Move C from A to table | Move A from table to C] | Exploring action Move D from B to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from B to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move C from A to table | Move A from table to C | Move D from B to table] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Taking action Move B from table to D | Moved to state -> Stack 1: [C, A], Stack 2: [D, B] | Plan so far [Move C from A to table | Move A from table to C | Move D from B to table | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 48,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "D",
                "C"
            ],
            [
                "table",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. D is on A. C is on D. C is clear.\nB is on the table. B is clear.\n",
        "system1_plan": "Move D from table to A | Move C from table to D",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move D from table to A | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move D from table to A] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move C from table to D | New state -> Stack 1: [A, D, C], Stack 2: [B] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Taking action Move C from table to D | Moved to state -> Stack 1: [A, D, C], Stack 2: [B] | Plan so far [Move D from table to A | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 8
    },
    {
        "idx": 64,
        "start": [
            [
                "table",
                "C",
                "D",
                "A",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. D is on C. A is on D. B is on A. B is clear.\n\nThe goal is:\nB is on the table. A is on B. A is clear.\nC is on the table. D is on C. D is clear.\n",
        "system1_plan": "Move B from A to table | Move A from D to B",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, D, A, B] | Plan so far [] | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C, D, A] | Exploring action Move D from C to B | New state -> Invalid | Exploring action Move D from C to table | New state -> Invalid | Taking action Move B from A to table | Moved to state -> Stack 1: [B], Stack 2: [C, D, A] | Plan so far [Move B from A to table] | Exploring action Move D from C to table | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [C, D, A, B] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C, D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from C to B | New state -> Invalid | Taking action Move A from D to B | Moved to state -> Stack 1: [B, A], Stack 2: [C, D] | Plan so far [Move B from A to table | Move A from D to B] | Reached goal state!",
        "system2_states_v1": 8
    },
    {
        "idx": 469,
        "start": [
            [
                "table",
                "A",
                "E",
                "C"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "D",
                "A",
                "E",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "E",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. E is on A. C is on E. C is clear.\nB is on the table. B is clear.\nD is on the table. D is clear.\n\nThe goal is:\nB is on the table. D is on B. A is on D. E is on A. C is on E. C is clear.\n",
        "system1_plan": "Move D from table to B | Move C from E to table | Move E from A to table | Move A from table to D | Move E from table to A | Move C from table to E",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, E, C], Stack 2: [B], Stack 3: [D] | Plan so far [] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [A, E, C], Stack 2: [D, B] | Exploring action Move C from E to table | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A, E, C], Stack 2: [B, D] | Taking action Move D from table to B | Moved to state -> Stack 1: [A, E, C], Stack 2: [B, D] | Plan so far [Move D from table to B] | Exploring action Move C from E to D | New state -> Stack 1: [A, E], Stack 2: [B, D, C] | Exploring action Move C from E to table | New state -> Stack 1: [A, E], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from B to table | New state -> Stack 1: [A, E, C], Stack 2: [B], Stack 3: [D] | Exploring action Move E from A to D | New state -> Invalid | Exploring action Move A from table to D | New state -> Invalid | Taking action Move B from table to D | Moved to state -> Stack 1: [A, E, C], Stack 2: [D, B] | Plan so far [Move B from table to D] | Exploring action Move B from D to C | New state -> Stack 1: [A, E, C, B], Stack 2: [D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from E to table | New state -> Stack 1: [A, E], Stack 2: [C], Stack 3: [D, B] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A, E, C], Stack 2: [B], Stack 3: [D] | Moved to state -> Stack 1: [A, E, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from table to B | Move D from B to table] | Moved to state -> Stack 1: [A, E, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move B from table to D | Move B from D to table] | Taking action Move C from E to table | Moved to state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from E to table] | Exploring action Move C from table to E | New state -> Stack 1: [A, E, C], Stack 2: [B], Stack 3: [D] | Exploring action Move E from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move D from table to B | New state -> Stack 1: [A, E], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to C | New state -> Invalid | Moved to state -> Stack 1: [A, E, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move C from E to table | Move C from table to E] | Taking action Move D from table to C | Moved to state -> Stack 1: [A, E, C, D], Stack 2: [B] | Plan so far [Move D from table to C] | Exploring action Move C from E to D | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [A, E, C, D, B] | Exploring action Move C from E to table | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A, E, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from C to B | New state -> Stack 1: [A, E, C], Stack 2: [B, D] | Taking action Move D from C to B | Moved to state -> Stack 1: [A, E, C], Stack 2: [B, D] | Plan so far [Move D from table to C | Move D from C to B] | Moved to state -> Stack 1: [A, E, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from table to C | Move D from C to table] | Taking action Move C from E to table | Moved to state -> Stack 1: [A, E], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move D from table to B | Move C from E to table] | Exploring action Move C from table to E | New state -> Stack 1: [A, E, C], Stack 2: [B, D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move B from table to E | New state -> Invalid | Exploring action Move E from A to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move E from A to C | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C, E] | Taking action Move C from table to E | Moved to state -> Stack 1: [A, E, C], Stack 2: [B, D] | Plan so far [Move D from table to B | Move C from E to table | Move C from table to E] | Taking action Move E from A to table | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Plan so far [Move D from table to B | Move C from E to table | Move E from A to table] | Exploring action Move A from table to D | New state -> Stack 1: [B, D, A], Stack 2: [C], Stack 3: [E] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move C from table to E | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [E, C] | Taking action Move E from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move C from E to table | Move E from A to table] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move C from table to E | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Taking action Move A from table to D | Moved to state -> Stack 1: [B, D, A], Stack 2: [C], Stack 3: [E] | Plan so far [Move D from table to B | Move C from E to table | Move E from A to table | Move A from table to D] | Exploring action Move E from table to A | New state -> Stack 1: [B, D, A, E], Stack 2: [C] | Exploring action Move D from B to table | New state -> Invalid | Exploring action Move D from B to E | New state -> Invalid | Exploring action Move E from table to C | New state -> Stack 1: [B, D, A], Stack 2: [C, E] | Exploring action Move C from table to E | New state -> Stack 1: [B, D, A], Stack 2: [E, C] | Taking action Move D from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Plan so far [Move C from E to table | Move E from A to table | Move D from table to B] | Taking action Move B from table to C | Moved to state -> Stack 1: [A, E, C, B], Stack 2: [D] | Plan so far [Move B from table to C] | Exploring action Move B from C to table | New state -> Stack 1: [A, E, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from C to D | New state -> Stack 1: [A, E, C], Stack 2: [D, B] | Exploring action Move E from A to table | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, E, C, B, D] | Exploring action Move C from E to B | New state -> Invalid | Moved to state -> Stack 1: [A, E, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move B from table to C | Move B from C to table] | Taking action Move D from table to B | Moved to state -> Stack 1: [A, E], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move C from E to table | Move D from table to B] | Taking action Move E from table to A | Moved to state -> Stack 1: [B, D, A, E], Stack 2: [C] | Plan so far [Move D from table to B | Move C from E to table | Move E from A to table | Move A from table to D | Move E from table to A] | Exploring action Move D from B to C | New state -> Invalid | Exploring action Move E from A to C | New state -> Stack 1: [B, D, A], Stack 2: [C, E] | Exploring action Move D from B to table | New state -> Invalid | Exploring action Move E from A to table | New state -> Stack 1: [B, D, A], Stack 2: [C], Stack 3: [E] | Exploring action Move C from table to E | New state -> Stack 1: [B, D, A, E, C] | Taking action Move C from table to E | Moved to state -> Stack 1: [B, D, A, E, C] | Plan so far [Move D from table to B | Move C from E to table | Move E from A to table | Move A from table to D | Move E from table to A | Move C from table to E] | Reached goal state!",
        "system2_states_v1": 50
    },
    {
        "idx": 358,
        "start": [
            [
                "table",
                "D",
                "C",
                "A",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nD is on the table. C is on D. A is on C. B is on A. B is clear.\n\nThe goal is:\nB is on the table. A is on B. D is on A. C is on D. C is clear.\n",
        "system1_plan": "Move B from A to table | Move A from C to B | Move C from D to table | Move D from table to A | Move C from table to D",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [D, C, A, B] | Plan so far [] | Exploring action Move C from D to B | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [D, C, A] | Taking action Move B from A to table | Moved to state -> Stack 1: [B], Stack 2: [D, C, A] | Plan so far [Move B from A to table] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move A from C to B | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move B from table to A | New state -> Stack 1: [D, C, A, B] | Exploring action Move C from D to table | New state -> Invalid | Taking action Move A from C to B | Moved to state -> Stack 1: [B, A], Stack 2: [D, C] | Plan so far [Move B from A to table | Move A from C to B] | Exploring action Move C from D to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move C from D to A | New state -> Stack 1: [B, A, C], Stack 2: [D] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move B from table to C | New state -> Invalid | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move B from A to table | Move A from C to table] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move C from D to table | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move B from A to table | Move A from C to B | Move C from D to table] | Exploring action Move D from table to C | New state -> Stack 1: [B, A], Stack 2: [C, D] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move C from table to D | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Exploring action Move B from table to D | New state -> Invalid | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [D, C] | Plan so far [Move B from A to table | Move A from C to table | Move A from table to B] | Taking action Move D from table to A | Moved to state -> Stack 1: [B, A, D], Stack 2: [C] | Plan so far [Move B from A to table | Move A from C to B | Move C from D to table | Move D from table to A] | Exploring action Move D from A to C | New state -> Stack 1: [B, A], Stack 2: [C, D] | Exploring action Move A from B to D | New state -> Invalid | Exploring action Move A from B to C | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to D | New state -> Stack 1: [B, A, D, C] | Taking action Move C from table to D | Moved to state -> Stack 1: [B, A, D, C] | Plan so far [Move B from A to table | Move A from C to B | Move C from D to table | Move D from table to A | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 26
    },
    {
        "idx": 325,
        "start": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "D",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "D",
                "B",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. A is clear.\nD is on the table. C is on D. C is clear.\n\nThe goal is:\nD is on the table. B is on D. C is on B. A is on C. A is clear.\n",
        "system1_plan": "Move A from B to table | Move C from D to table | Move B from table to D | Move C from table to B | Move A from table to C",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A], Stack 2: [D, C] | Plan so far [] | Exploring action Move A from B to C | New state -> Stack 1: [B], Stack 2: [D, C, A] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move A from B to table] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from D to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Taking action Move C from D to table | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from D to table] | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from B to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move A from B to C | Moved to state -> Stack 1: [B], Stack 2: [D, C, A] | Plan so far [Move A from B to C] | Exploring action Move A from C to B | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move B from table to A | New state -> Stack 1: [D, C, A, B] | Exploring action Move C from D to B | New state -> Invalid | Exploring action Move C from D to table | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move C from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from B to table | Move C from D to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from D to table | Move A from B to table] | Taking action Move A from B to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move C from D to table | Move A from B to C] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move A from B to table | Move C from D to table | Move B from table to D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [D, B, C] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [D, B] | Taking action Move B from table to D | Moved to state -> Stack 1: [C, A], Stack 2: [D, B] | Plan so far [Move C from D to table | Move A from B to C | Move B from table to D] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move A from C to B | New state -> Stack 1: [C], Stack 2: [D, B, A] | Exploring action Move B from D to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [D, B, C] | Plan so far [Move A from B to table | Move C from D to table | Move B from table to D | Move C from table to B] | Exploring action Move B from D to table | New state -> Invalid | Exploring action Move B from D to C | New state -> Invalid | Exploring action Move C from B to A | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move A from table to C | New state -> Stack 1: [D, B, C, A] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move A from table to C | Moved to state -> Stack 1: [D, B, C, A] | Plan so far [Move A from B to table | Move C from D to table | Move B from table to D | Move C from table to B | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 38
    },
    {
        "idx": 442,
        "start": [
            [
                "table",
                "A",
                "C",
                "B",
                "E"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "D",
                "E",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "E",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "E": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "E",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "E",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. B is on C. E is on B. E is clear.\nD is on the table. D is clear.\n\nThe goal is:\nB is on the table. D is on B. E is on D. C is on E. A is on C. A is clear.\n",
        "system1_plan": "Move E from B to table | Move B from C to table | Move D from table to B | Move E from table to D | Move C from A to E | Move A from table to C",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, B, E], Stack 2: [D] | Plan so far [] | Exploring action Move E from B to D | New state -> Stack 1: [A, C, B], Stack 2: [D, E] | Exploring action Move D from table to E | New state -> Stack 1: [A, C, B, E, D] | Exploring action Move B from C to E | New state -> Invalid | Exploring action Move E from B to table | New state -> Stack 1: [A, C, B], Stack 2: [D], Stack 3: [E] | Taking action Move E from B to table | Moved to state -> Stack 1: [A, C, B], Stack 2: [D], Stack 3: [E] | Plan so far [Move E from B to table] | Exploring action Move B from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Exploring action Move C from A to table | New state -> Invalid | Exploring action Move B from C to D | New state -> Stack 1: [A, C], Stack 2: [D, B], Stack 3: [E] | Exploring action Move B from C to E | New state -> Stack 1: [A, C], Stack 2: [D], Stack 3: [E, B] | Exploring action Move C from A to D | New state -> Invalid | Taking action Move B from C to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Plan so far [Move E from B to table | Move B from C to table] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, C], Stack 2: [B, D], Stack 3: [E] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move E from B to table | Move B from C to table | Move C from A to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Taking action Move D from table to B | Moved to state -> Stack 1: [A, C], Stack 2: [B, D], Stack 3: [E] | Plan so far [Move E from B to table | Move B from C to table | Move D from table to B] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move E from table to D | New state -> Stack 1: [A, C], Stack 2: [B, D, E] | Exploring action Move C from A to E | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [E, C] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move A from table to D | New state -> Invalid | Taking action Move D from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Plan so far [Move E from B to table | Move B from C to table | Move C from A to table | Move D from table to B] | Exploring action Move E from table to D | New state -> Stack 1: [A], Stack 2: [B, D, E], Stack 3: [C] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move A from table to C | New state -> Stack 1: [B, D], Stack 2: [C, A], Stack 3: [E] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Plan so far [Move E from B to table | Move B from C to table | Move D from table to B | Move C from A to table] | Taking action Move E from table to D | Moved to state -> Stack 1: [A], Stack 2: [B, D, E], Stack 3: [C] | Plan so far [Move E from B to table | Move B from C to table | Move C from A to table | Move D from table to B | Move E from table to D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D, E] | Exploring action Move D from B to table | New state -> Invalid | Exploring action Move C from table to E | New state -> Stack 1: [A], Stack 2: [B, D, E, C] | Exploring action Move A from table to C | New state -> Stack 1: [B, D, E], Stack 2: [C, A] | Exploring action Move B from table to A | New state -> Invalid | Taking action Move E from table to D | Moved to state -> Stack 1: [A, C], Stack 2: [B, D, E] | Plan so far [Move E from B to table | Move B from C to table | Move D from table to B | Move E from table to D] | Exploring action Move C from A to E | New state -> Stack 1: [A], Stack 2: [B, D, E, C] | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B, D, E], Stack 3: [C] | Exploring action Move E from D to table | New state -> Stack 1: [A, C], Stack 2: [B, D], Stack 3: [E] | Exploring action Move B from table to E | New state -> Invalid | Taking action Move C from A to E | Moved to state -> Stack 1: [A], Stack 2: [B, D, E, C] | Plan so far [Move E from B to table | Move B from C to table | Move D from table to B | Move E from table to D | Move C from A to E] | Exploring action Move C from E to table | New state -> Stack 1: [A], Stack 2: [B, D, E], Stack 3: [C] | Exploring action Move C from E to A | New state -> Stack 1: [A, C], Stack 2: [B, D, E] | Exploring action Move A from table to C | New state -> Stack 1: [B, D, E, C, A] | Exploring action Move E from D to A | New state -> Invalid | Exploring action Move D from B to A | New state -> Invalid | Taking action Move A from table to C | Moved to state -> Stack 1: [B, D, E, C, A] | Plan so far [Move E from B to table | Move B from C to table | Move D from table to B | Move E from table to D | Move C from A to E | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 40
    },
    {
        "idx": 258,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "D",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. D is on B. C is on D. C is clear.\n\nThe goal is:\nB is on the table. C is on B. A is on C. A is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move C from D to table | Move D from B to table | Move C from table to B | Move A from table to C",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B, D, C] | Plan so far [] | Exploring action Move A from table to C | New state -> Stack 1: [B, D, C, A] | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move D from B to C | New state -> Invalid | Exploring action Move D from B to table | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move C from D to table | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move C from D to table] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from B to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from D to table | Move D from B to table] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move C from D to table | Move D from B to table | Move C from table to B] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [B, C, A], Stack 2: [D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B, C, A], Stack 2: [D] | Plan so far [Move C from D to table | Move D from B to table | Move C from table to B | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 270,
        "start": [
            [
                "table",
                "C",
                "A"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C",
                "D"
            ],
            [
                "table",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. A is on C. A is clear.\nD is on the table. B is on D. B is clear.\n\nThe goal is:\nA is on the table. C is on A. D is on C. D is clear.\nB is on the table. B is clear.\n",
        "system1_plan": "Move B from D to table | Move A from C to table | Move C from table to A | Move D from table to C",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, A], Stack 2: [D, B] | Plan so far [] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move A from C to B | New state -> Stack 1: [C], Stack 2: [D, B, A] | Exploring action Move B from D to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move B from D to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move B from D to table] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from D to table | Move A from C to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move C from table to A | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move B from D to table | Move A from C to table | Move C from table to A] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A, C, D], Stack 2: [B] | Taking action Move D from table to C | Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [Move B from D to table | Move A from C to table | Move C from table to A | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 17
    },
    {
        "idx": 58,
        "start": [
            [
                "table",
                "C",
                "A",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "A",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. A is on C. B is on A. B is clear.\nD is on the table. D is clear.\n\nThe goal is:\nB is on the table. B is clear.\nC is on the table. A is on C. D is on A. D is clear.\n",
        "system1_plan": "Move B from A to table | Move D from table to A",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, A, B], Stack 2: [D] | Plan so far [] | Exploring action Move D from table to B | New state -> Stack 1: [C, A, B, D] | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from C to B | New state -> Invalid | Exploring action Move B from A to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Taking action Move B from A to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move B from A to table] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Taking action Move D from table to A | Moved to state -> Stack 1: [B], Stack 2: [C, A, D] | Plan so far [Move B from A to table | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 8
    },
    {
        "idx": 345,
        "start": [
            [
                "table",
                "C",
                "A",
                "D",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. A is on C. D is on A. B is on D. B is clear.\n\nThe goal is:\nB is on the table. C is on B. A is on C. A is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move B from D to table | Move D from A to table | Move A from C to table | Move C from table to B | Move A from table to C",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, A, D, B] | Plan so far [] | Exploring action Move A from C to table | New state -> Invalid | Exploring action Move D from A to table | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [B], Stack 2: [C, A, D] | Taking action Move B from D to table | Moved to state -> Stack 1: [B], Stack 2: [C, A, D] | Plan so far [Move B from D to table] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move D from A to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move D from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from C to B | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [C, A, D, B] | Taking action Move D from A to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move B from D to table | Move D from A to table] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from C to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from D to table | Move D from A to table | Move A from C to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move B from D to table | Move D from A to table | Move A from C to table | Move C from table to B] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [B, C, A], Stack 2: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Taking action Move A from table to C | Moved to state -> Stack 1: [B, C, A], Stack 2: [D] | Plan so far [Move B from D to table | Move D from A to table | Move A from C to table | Move C from table to B | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 20
    },
    {
        "idx": 348,
        "start": [
            [
                "table",
                "A",
                "C",
                "D"
            ],
            [
                "table",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. D is on C. D is clear.\nB is on the table. B is clear.\n\nThe goal is:\nB is on the table. A is on B. C is on A. D is on C. D is clear.\n",
        "system1_plan": "Move D from C to table | Move C from A to table | Move A from table to B | Move C from table to A | Move D from table to C",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [] | Exploring action Move D from C to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [A, C, D, B] | Exploring action Move D from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Taking action Move B from table to D | Moved to state -> Stack 1: [A, C, D, B] | Plan so far [Move B from table to D] | Exploring action Move D from C to table | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A, C, D], Stack 2: [B] | Exploring action Move D from C to B | New state -> Invalid | Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [Move B from table to D | Move B from D to table] | Taking action Move D from C to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from C to table] | Exploring action Move D from table to C | New state -> Stack 1: [A, C, D], Stack 2: [B] | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move A from table to C | New state -> Invalid | Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [Move D from C to table | Move D from table to C] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from C to table | Move C from A to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move D from C to table | Move C from A to table | Move A from table to B] | Exploring action Move C from table to A | New state -> Stack 1: [B, A, C], Stack 2: [D] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [B, A], Stack 2: [C, D] | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Taking action Move C from table to A | Moved to state -> Stack 1: [B, A, C], Stack 2: [D] | Plan so far [Move D from C to table | Move C from A to table | Move A from table to B | Move C from table to A] | Exploring action Move C from A to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [B, A, C, D] | Exploring action Move A from B to D | New state -> Invalid | Exploring action Move A from B to C | New state -> Invalid | Exploring action Move C from A to D | New state -> Stack 1: [B, A], Stack 2: [D, C] | Taking action Move D from table to C | Moved to state -> Stack 1: [B, A, C, D] | Plan so far [Move D from C to table | Move C from A to table | Move A from table to B | Move C from table to A | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 24
    },
    {
        "idx": 465,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "C",
                "B",
                "E"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "E"
            ],
            [
                "table",
                "C",
                "A",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "E",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "E": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nD is on the table. C is on D. B is on C. E is on B. E is clear.\n\nThe goal is:\nB is on the table. E is on B. E is clear.\nC is on the table. A is on C. D is on A. D is clear.\n",
        "system1_plan": "Move E from B to table | Move B from C to table | Move E from table to B | Move C from D to table | Move A from table to C | Move D from table to A",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [D, C, B, E] | Plan so far [] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move E from B to A | New state -> Stack 1: [A, E], Stack 2: [D, C, B] | Exploring action Move E from B to table | New state -> Stack 1: [A], Stack 2: [D, C, B], Stack 3: [E] | Exploring action Move A from table to E | New state -> Stack 1: [D, C, B, E, A] | Taking action Move E from B to table | Moved to state -> Stack 1: [A], Stack 2: [D, C, B], Stack 3: [E] | Plan so far [Move E from B to table] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move E from table to B | New state -> Stack 1: [A], Stack 2: [D, C, B, E] | Exploring action Move C from D to A | New state -> Invalid | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [D, C], Stack 3: [E] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Plan so far [Move E from B to table | Move B from C to table] | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move E from table to B | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [D, C] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move E from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [D, C] | Plan so far [Move E from B to table | Move B from C to table | Move E from table to B] | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B, E], Stack 3: [D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [B, E], Stack 2: [D, C, A] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move C from D to table | Moved to state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Plan so far [Move E from B to table | Move B from C to table | Move E from table to B | Move C from D to table] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, E], Stack 3: [C] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [B, E], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B, E], Stack 2: [C], Stack 3: [D, A] | Taking action Move A from table to C | Moved to state -> Stack 1: [B, E], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move E from B to table | Move B from C to table | Move E from table to B | Move C from D to table | Move A from table to C] | Exploring action Move B from table to E | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Stack 1: [B, E], Stack 2: [C, A, D] | Exploring action Move E from B to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Taking action Move D from table to A | Moved to state -> Stack 1: [B, E], Stack 2: [C, A, D] | Plan so far [Move E from B to table | Move B from C to table | Move E from table to B | Move C from D to table | Move A from table to C | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 28
    },
    {
        "idx": 73,
        "start": [
            [
                "table",
                "C",
                "B"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "B",
                "A",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. B is clear.\nD is on the table. A is on D. A is clear.\n\nThe goal is:\nC is on the table. B is on C. A is on B. D is on A. D is clear.\n",
        "system1_plan": "Move A from D to B | Move D from table to A",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B], Stack 2: [D, A] | Plan so far [] | Exploring action Move B from C to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from D to B | New state -> Stack 1: [C, B, A], Stack 2: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move C from table to B | New state -> Invalid | Taking action Move A from D to B | Moved to state -> Stack 1: [C, B, A], Stack 2: [D] | Plan so far [Move A from D to B] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move A from B to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move B from C to D | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [C, B, A, D] | Taking action Move D from table to A | Moved to state -> Stack 1: [C, B, A, D] | Plan so far [Move A from D to B | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 70,
        "start": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. C is clear.\nB is on the table. D is on B. D is clear.\n\nThe goal is:\nA is on the table. C is on A. D is on C. B is on D. B is clear.\n",
        "system1_plan": "Move D from B to C | Move B from table to D",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C], Stack 2: [B, D] | Plan so far [] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from B to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from B to C | New state -> Stack 1: [A, C, D], Stack 2: [B] | Taking action Move D from B to C | Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [Move D from B to C] | Exploring action Move D from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from C to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [A, C, D, B] | Taking action Move B from table to D | Moved to state -> Stack 1: [A, C, D, B] | Plan so far [Move D from B to C | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 8
    },
    {
        "idx": 463,
        "start": [
            [
                "table",
                "D",
                "A",
                "C",
                "E",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "A"
            ],
            [
                "table",
                "D",
                "E",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "E",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nD is on the table. A is on D. C is on A. E is on C. B is on E. B is clear.\n\nThe goal is:\nC is on the table. A is on C. A is clear.\nD is on the table. E is on D. B is on E. B is clear.\n",
        "system1_plan": "Move B from E to table | Move E from C to table | Move C from A to table | Move A from D to C | Move E from table to D | Move B from table to E",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [D, A, C, E, B] | Plan so far [] | Exploring action Move C from A to B | New state -> Invalid | Exploring action Move B from E to table | New state -> Stack 1: [B], Stack 2: [D, A, C, E] | Exploring action Move C from A to table | New state -> Invalid | Taking action Move B from E to table | Moved to state -> Stack 1: [B], Stack 2: [D, A, C, E] | Plan so far [Move B from E to table] | Exploring action Move B from table to E | New state -> Stack 1: [D, A, C, E, B] | Exploring action Move E from C to table | New state -> Stack 1: [B], Stack 2: [D, A, C], Stack 3: [E] | Exploring action Move C from A to E | New state -> Invalid | Exploring action Move E from C to B | New state -> Stack 1: [B, E], Stack 2: [D, A, C] | Taking action Move E from C to table | Moved to state -> Stack 1: [B], Stack 2: [D, A, C], Stack 3: [E] | Plan so far [Move B from E to table | Move E from C to table] | Exploring action Move D from table to E | New state -> Invalid | Exploring action Move B from table to E | New state -> Stack 1: [D, A, C], Stack 2: [E, B] | Exploring action Move C from A to B | New state -> Stack 1: [B, C], Stack 2: [D, A], Stack 3: [E] | Exploring action Move C from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Taking action Move C from A to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Plan so far [Move B from E to table | Move E from C to table | Move C from A to table] | Exploring action Move B from table to E | New state -> Stack 1: [C], Stack 2: [D, A], Stack 3: [E, B] | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Exploring action Move D from table to E | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move A from D to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Plan so far [Move B from E to table | Move E from C to table | Move C from A to table | Move A from D to C] | Exploring action Move B from table to E | New state -> Stack 1: [C, A], Stack 2: [D], Stack 3: [E, B] | Exploring action Move E from table to D | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D, E] | Exploring action Move B from table to D | New state -> Stack 1: [C, A], Stack 2: [D, B], Stack 3: [E] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move E from table to D | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D, E] | Plan so far [Move B from E to table | Move E from C to table | Move C from A to table | Move A from D to C | Move E from table to D] | Exploring action Move C from table to E | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D, E] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move E from D to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Exploring action Move B from table to E | New state -> Stack 1: [C, A], Stack 2: [D, E, B] | Taking action Move B from table to E | Moved to state -> Stack 1: [C, A], Stack 2: [D, E, B] | Plan so far [Move B from E to table | Move E from C to table | Move C from A to table | Move A from D to C | Move E from table to D | Move B from table to E] | Reached goal state!",
        "system2_states_v1": 24
    },
    {
        "idx": 246,
        "start": [
            [
                "table",
                "C",
                "A"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C",
                "B",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. A is on C. A is clear.\nD is on the table. B is on D. B is clear.\n\nThe goal is:\nA is on the table. C is on A. B is on C. D is on B. D is clear.\n",
        "system1_plan": "Move A from C to table | Move C from table to A | Move B from D to C | Move D from table to B",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, A], Stack 2: [D, B] | Plan so far [] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from D to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from C to B | New state -> Stack 1: [C], Stack 2: [D, B, A] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move A from C to table] | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from D to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move B from D to table] | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from C to table | Move B from D to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move C from table to A | Moved to state -> Stack 1: [A, C], Stack 2: [D, B] | Plan so far [Move A from C to table | Move C from table to A] | Exploring action Move B from D to C | New state -> Stack 1: [A, C, B], Stack 2: [D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from D to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Taking action Move B from D to C | Moved to state -> Stack 1: [A, C, B], Stack 2: [D] | Plan so far [Move A from C to table | Move C from table to A | Move B from D to C] | Exploring action Move C from A to D | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, C, B, D] | Exploring action Move B from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from C to D | New state -> Stack 1: [A, C], Stack 2: [D, B] | Taking action Move D from table to B | Moved to state -> Stack 1: [A, C, B, D] | Plan so far [Move A from C to table | Move C from table to A | Move B from D to C | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 25
    },
    {
        "idx": 336,
        "start": [
            [
                "table",
                "C",
                "D",
                "A",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "A"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. D is on C. A is on D. B is on A. B is clear.\n\nThe goal is:\nC is on the table. A is on C. A is clear.\nD is on the table. B is on D. B is clear.\n",
        "system1_plan": "Move B from A to table | Move A from D to table | Move D from C to table | Move A from table to C | Move B from table to D",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, D, A, B] | Plan so far [] | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C, D, A] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from C to table | New state -> Invalid | Taking action Move B from A to table | Moved to state -> Stack 1: [B], Stack 2: [C, D, A] | Plan so far [Move B from A to table] | Exploring action Move B from table to A | New state -> Stack 1: [C, D, A, B] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C, D] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move B from A to table | Move A from D to table] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move D from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from A to table | Move A from D to table | Move D from C to table] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move B from A to table | Move A from D to table | Move D from C to table | Move A from table to C] | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move B from table to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Taking action Move B from table to D | Moved to state -> Stack 1: [C, A], Stack 2: [D, B] | Plan so far [Move B from A to table | Move A from D to table | Move D from C to table | Move A from table to C | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 19
    },
    {
        "idx": 35,
        "start": [
            [
                "table",
                "B",
                "A",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. D is on A. D is clear.\nC is on the table. C is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. D is on C. D is clear.\n",
        "system1_plan": "Move D from A to C | Move A from B to table",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A, D], Stack 2: [C] | Plan so far [] | Exploring action Move A from B to D | New state -> Invalid | Exploring action Move D from A to C | New state -> Stack 1: [B, A], Stack 2: [C, D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to D | New state -> Stack 1: [B, A, D, C] | Taking action Move D from A to C | Moved to state -> Stack 1: [B, A], Stack 2: [C, D] | Plan so far [Move D from A to C] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C, D, A] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move D from A to C | Move A from B to table] | Reached goal state!",
        "system2_states_v1": 10
    },
    {
        "idx": 328,
        "start": [
            [
                "table",
                "D",
                "A",
                "C",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nD is on the table. A is on D. C is on A. B is on C. B is clear.\n\nThe goal is:\nA is on the table. B is on A. B is clear.\nC is on the table. D is on C. D is clear.\n",
        "system1_plan": "Move B from C to table | Move C from A to table | Move A from D to table | Move B from table to A | Move D from table to C",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [D, A, C, B] | Plan so far [] | Exploring action Move A from D to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [B], Stack 2: [D, A, C] | Taking action Move B from C to table | Moved to state -> Stack 1: [B], Stack 2: [D, A, C] | Plan so far [Move B from C to table] | Exploring action Move B from table to C | New state -> Stack 1: [D, A, C, B] | Exploring action Move C from A to B | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move A from D to C | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move C from A to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move B from C to table | Move C from A to table] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from C to table | Move C from A to table | Move A from D to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Taking action Move B from table to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move B from C to table | Move C from A to table | Move A from D to table | Move B from table to A] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from table to D | New state -> Stack 1: [A, B], Stack 2: [D, C] | Taking action Move D from table to C | Moved to state -> Stack 1: [A, B], Stack 2: [C, D] | Plan so far [Move B from C to table | Move C from A to table | Move A from D to table | Move B from table to A | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 56,
        "start": [
            [
                "table",
                "C",
                "B",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "A",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. A is on B. A is clear.\nD is on the table. D is clear.\n\nThe goal is:\nC is on the table. C is clear.\nD is on the table. A is on D. B is on A. B is clear.\n",
        "system1_plan": "Move A from B to D | Move B from C to A",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B, A], Stack 2: [D] | Plan so far [] | Exploring action Move B from C to table | New state -> Invalid | Exploring action Move B from C to A | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [C, B, A, D] | Exploring action Move A from B to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Taking action Move A from B to D | Moved to state -> Stack 1: [C, B], Stack 2: [D, A] | Plan so far [Move A from B to D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move B from C to A | New state -> Stack 1: [C], Stack 2: [D, A, B] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move B from C to A | Moved to state -> Stack 1: [C], Stack 2: [D, A, B] | Plan so far [Move A from B to D | Move B from C to A] | Reached goal state!",
        "system2_states_v1": 10
    },
    {
        "idx": 248,
        "start": [
            [
                "table",
                "A",
                "C",
                "B",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. B is on C. D is on B. D is clear.\n\nThe goal is:\nB is on the table. B is clear.\nC is on the table. A is on C. A is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move D from B to table | Move B from C to table | Move C from A to table | Move A from table to C",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, B, D] | Plan so far [] | Exploring action Move B from C to D | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A, C, B], Stack 2: [D] | Exploring action Move C from A to table | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A, C, B], Stack 2: [D] | Plan so far [Move D from B to table] | Exploring action Move B from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A, C, B, D] | Exploring action Move B from C to D | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move C from A to B | New state -> Invalid | Taking action Move B from C to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from B to table | Move B from C to table] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from B to table | Move B from C to table | Move C from A to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move D from B to table | Move B from C to table | Move C from A to table | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 15
    },
    {
        "idx": 346,
        "start": [
            [
                "table",
                "B",
                "C",
                "A",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "D",
                "A",
                "B",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. C is on B. A is on C. D is on A. D is clear.\n\nThe goal is:\nD is on the table. A is on D. B is on A. C is on B. C is clear.\n",
        "system1_plan": "Move D from A to table | Move A from C to D | Move C from B to table | Move B from table to A | Move C from table to B",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, C, A, D] | Plan so far [] | Exploring action Move A from C to table | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [B, C, A], Stack 2: [D] | Exploring action Move B from table to D | New state -> Invalid | Taking action Move D from A to table | Moved to state -> Stack 1: [B, C, A], Stack 2: [D] | Plan so far [Move D from A to table] | Exploring action Move A from C to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [B, C, A, D] | Exploring action Move C from B to table | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Taking action Move A from C to D | Moved to state -> Stack 1: [B, C], Stack 2: [D, A] | Plan so far [Move D from A to table | Move A from C to D] | Exploring action Move C from B to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from B to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Exploring action Move B from table to A | New state -> Invalid | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move D from A to table | Move A from C to table] | Exploring action Move A from table to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Taking action Move C from B to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move D from A to table | Move A from C to D | Move C from B to table] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Exploring action Move C from table to B | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move B from table to A | New state -> Stack 1: [C], Stack 2: [D, A, B] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move A from table to D | Moved to state -> Stack 1: [B, C], Stack 2: [D, A] | Plan so far [Move D from A to table | Move A from C to table | Move A from table to D] | Taking action Move B from table to A | Moved to state -> Stack 1: [C], Stack 2: [D, A, B] | Plan so far [Move D from A to table | Move A from C to D | Move C from B to table | Move B from table to A] | Exploring action Move A from D to B | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move B from A to C | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move C from table to B | New state -> Stack 1: [D, A, B, C] | Exploring action Move A from D to table | New state -> Invalid | Taking action Move C from table to B | Moved to state -> Stack 1: [D, A, B, C] | Plan so far [Move D from A to table | Move A from C to D | Move C from B to table | Move B from table to A | Move C from table to B] | Reached goal state!",
        "system2_states_v1": 27
    },
    {
        "idx": 69,
        "start": [
            [
                "table",
                "B",
                "C",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "A",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. C is on B. A is on C. A is clear.\nD is on the table. D is clear.\n\nThe goal is:\nB is on the table. B is clear.\nD is on the table. A is on D. C is on A. C is clear.\n",
        "system1_plan": "Move A from C to D | Move C from B to A",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, C, A], Stack 2: [D] | Plan so far [] | Exploring action Move A from C to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move C from B to D | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [B, C, A, D] | Taking action Move A from C to D | Moved to state -> Stack 1: [B, C], Stack 2: [D, A] | Plan so far [Move A from C to D] | Exploring action Move C from B to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to C | New state -> Invalid | Taking action Move C from B to A | Moved to state -> Stack 1: [B], Stack 2: [D, A, C] | Plan so far [Move A from C to D | Move C from B to A] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 166,
        "start": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "C",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. A is clear.\nC is on the table. D is on C. D is clear.\n\nThe goal is:\nA is on the table. D is on A. D is clear.\nC is on the table. B is on C. B is clear.\n",
        "system1_plan": "Move A from B to table | Move D from C to A | Move B from table to C",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A], Stack 2: [C, D] | Plan so far [] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from C to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move D from C to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move A from B to table] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move D from C to A | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move A from B to table | Move D from C to A] | Exploring action Move B from table to C | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move C from table to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move B from table to D | New state -> Stack 1: [A, D, B], Stack 2: [C] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move A from table to C | New state -> Invalid | Taking action Move B from table to C | Moved to state -> Stack 1: [A, D], Stack 2: [C, B] | Plan so far [Move A from B to table | Move D from C to A | Move B from table to C] | Reached goal state!",
        "system2_states_v1": 15
    },
    {
        "idx": 472,
        "start": [
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ],
            [
                "table",
                "E",
                "B",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "E",
                "D",
                "C",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "E",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "E",
                "under": "C",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. C is clear.\nD is on the table. D is clear.\nE is on the table. B is on E. A is on B. A is clear.\n\nThe goal is:\nA is on the table. E is on A. D is on E. C is on D. B is on C. B is clear.\n",
        "system1_plan": "Move A from B to table | Move B from E to table | Move E from table to A | Move D from table to E | Move C from table to D | Move B from table to C",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [C], Stack 2: [D], Stack 3: [E, B, A] | Plan so far [] | Exploring action Move E from table to C | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Exploring action Move A from B to C | New state -> Stack 1: [C, A], Stack 2: [D], Stack 3: [E, B] | Exploring action Move B from E to D | New state -> Invalid | Exploring action Move A from B to D | New state -> Stack 1: [C], Stack 2: [D, A], Stack 3: [E, B] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Plan so far [Move A from B to table] | Exploring action Move B from E to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Exploring action Move B from E to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move B from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move E from table to A | New state -> Invalid | Taking action Move B from E to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move A from B to table | Move B from E to table] | Exploring action Move E from table to A | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Taking action Move B from E to C | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Plan so far [Move A from B to table | Move B from E to C] | Exploring action Move E from table to A | New state -> Stack 1: [A, E], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from table to E | New state -> Stack 1: [C, B], Stack 2: [D], Stack 3: [E, A] | Taking action Move E from table to A | Moved to state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from B to table | Move B from E to table | Move E from table to A] | Exploring action Move D from table to E | New state -> Stack 1: [A, E, D], Stack 2: [B], Stack 3: [C] | Exploring action Move B from table to E | New state -> Stack 1: [A, E, B], Stack 2: [C], Stack 3: [D] | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [A, E], Stack 2: [C, B], Stack 3: [D] | Taking action Move E from table to A | Moved to state -> Stack 1: [A, E], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move A from B to table | Move B from E to C | Move E from table to A] | Exploring action Move B from C to E | New state -> Stack 1: [A, E, B], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from table to E | New state -> Stack 1: [A, E, D], Stack 2: [C, B] | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from table to E | Moved to state -> Stack 1: [A, E, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move A from B to table | Move B from E to table | Move E from table to A | Move D from table to E] | Exploring action Move B from table to C | New state -> Stack 1: [A, E, D], Stack 2: [C, B] | Exploring action Move E from A to D | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A, E, D], Stack 2: [B, C] | Exploring action Move C from table to D | New state -> Stack 1: [A, E, D, C], Stack 2: [B] | Exploring action Move A from table to B | New state -> Invalid | Taking action Move D from table to E | Moved to state -> Stack 1: [A, E, D], Stack 2: [C, B] | Plan so far [Move A from B to table | Move B from E to C | Move E from table to A | Move D from table to E] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from C to D | New state -> Stack 1: [A, E, D, B], Stack 2: [C] | Exploring action Move D from E to table | New state -> Stack 1: [A, E], Stack 2: [C, B], Stack 3: [D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A, E, D], Stack 2: [B], Stack 3: [C] | Taking action Move C from table to D | Moved to state -> Stack 1: [A, E, D, C], Stack 2: [B] | Plan so far [Move A from B to table | Move B from E to table | Move E from table to A | Move D from table to E | Move C from table to D] | Exploring action Move B from table to C | New state -> Stack 1: [A, E, D, C, B] | Exploring action Move E from A to table | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A, E, D], Stack 2: [B], Stack 3: [C] | Exploring action Move C from D to B | New state -> Stack 1: [A, E, D], Stack 2: [B, C] | Exploring action Move E from A to C | New state -> Invalid | Taking action Move B from table to C | Moved to state -> Stack 1: [A, E, D, C, B] | Plan so far [Move A from B to table | Move B from E to table | Move E from table to A | Move D from table to E | Move C from table to D | Move B from table to C] | Reached goal state!",
        "system2_states_v1": 42
    },
    {
        "idx": 52,
        "start": [
            [
                "table",
                "C",
                "B"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "D",
                "A",
                "B",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. B is clear.\nD is on the table. A is on D. A is clear.\n\nThe goal is:\nD is on the table. A is on D. B is on A. C is on B. C is clear.\n",
        "system1_plan": "Move B from C to A | Move C from table to B",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B], Stack 2: [D, A] | Plan so far [] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from C to A | New state -> Stack 1: [C], Stack 2: [D, A, B] | Exploring action Move B from C to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move B from C to A | Moved to state -> Stack 1: [C], Stack 2: [D, A, B] | Plan so far [Move B from C to A] | Exploring action Move B from A to C | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [D, A, B, C] | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to B | New state -> Invalid | Taking action Move C from table to B | Moved to state -> Stack 1: [D, A, B, C] | Plan so far [Move B from C to A | Move C from table to B] | Reached goal state!",
        "system2_states_v1": 10
    },
    {
        "idx": 247,
        "start": [
            [
                "table",
                "A",
                "B",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. C is on B. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. D is on B. C is on D. C is clear.\n",
        "system1_plan": "Move C from B to table | Move B from A to table | Move D from table to B | Move C from table to D",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B, C], Stack 2: [D] | Plan so far [] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A, B, C, D] | Exploring action Move C from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move C from B to D | New state -> Stack 1: [A, B], Stack 2: [D, C] | Taking action Move C from B to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from B to table] | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from A to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move A from table to C | New state -> Invalid | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from B to table | Move B from A to table] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move D from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move C from B to table | Move B from A to table | Move D from table to B] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B, D, C] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B, D, C] | Plan so far [Move C from B to table | Move B from A to table | Move D from table to B | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 17
    },
    {
        "idx": 431,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "E",
                "D",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "D",
                "B"
            ],
            [
                "table",
                "E",
                "A",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "E",
                "under": "C",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "E",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. E is on B. D is on E. C is on D. C is clear.\n\nThe goal is:\nD is on the table. B is on D. B is clear.\nE is on the table. A is on E. C is on A. C is clear.\n",
        "system1_plan": "Move C from D to table | Move D from E to table | Move E from B to table | Move B from table to D | Move A from table to E | Move C from table to A",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B, E, D, C] | Plan so far [] | Exploring action Move A from table to C | New state -> Stack 1: [B, E, D, C, A] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B, E, D], Stack 3: [C] | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B, E, D] | Exploring action Move D from E to C | New state -> Invalid | Taking action Move C from D to table | Moved to state -> Stack 1: [A], Stack 2: [B, E, D], Stack 3: [C] | Plan so far [Move C from D to table] | Exploring action Move E from B to table | New state -> Invalid | Exploring action Move D from E to C | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C, D] | Exploring action Move D from E to table | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Exploring action Move D from E to A | New state -> Stack 1: [A, D], Stack 2: [B, E], Stack 3: [C] | Taking action Move C from D to A | Moved to state -> Stack 1: [A, C], Stack 2: [B, E, D] | Plan so far [Move C from D to A] | Exploring action Move D from E to table | New state -> Stack 1: [A, C], Stack 2: [B, E], Stack 3: [D] | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B, E, D, C] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B, E, D], Stack 3: [C] | Taking action Move D from E to table | Moved to state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from D to table | Move D from E to table] | Exploring action Move E from B to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Exploring action Move E from B to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D, E] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move E from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move D from E to table | Moved to state -> Stack 1: [A, C], Stack 2: [B, E], Stack 3: [D] | Plan so far [Move C from D to A | Move D from E to table] | Exploring action Move B from table to E | New state -> Invalid | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move E from B to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Exploring action Move E from B to D | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D, E] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Taking action Move E from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move C from D to table | Move D from E to table | Move E from B to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move A from table to E | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D], Stack 4: [E, A] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Plan so far [Move C from D to table | Move D from E to table | Move E from B to table | Move B from table to D] | Exploring action Move A from table to E | New state -> Stack 1: [C], Stack 2: [D, B], Stack 3: [E, A] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [D, B], Stack 3: [E] | Exploring action Move A from table to C | New state -> Stack 1: [C, A], Stack 2: [D, B], Stack 3: [E] | Taking action Move A from table to E | Moved to state -> Stack 1: [C], Stack 2: [D, B], Stack 3: [E, A] | Plan so far [Move C from D to table | Move D from E to table | Move E from B to table | Move B from table to D | Move A from table to E] | Exploring action Move A from E to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move A from E to C | New state -> Stack 1: [C, A], Stack 2: [D, B], Stack 3: [E] | Exploring action Move C from table to A | New state -> Stack 1: [D, B], Stack 2: [E, A, C] | Exploring action Move E from table to A | New state -> Invalid | Taking action Move C from table to A | Moved to state -> Stack 1: [D, B], Stack 2: [E, A, C] | Plan so far [Move C from D to table | Move D from E to table | Move E from B to table | Move B from table to D | Move A from table to E | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 33
    },
    {
        "idx": 459,
        "start": [
            [
                "table",
                "E",
                "D",
                "B",
                "A",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "C"
            ],
            [
                "table",
                "E",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "E",
                "under": "B",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nE is on the table. D is on E. B is on D. A is on B. C is on A. C is clear.\n\nThe goal is:\nA is on the table. A is clear.\nD is on the table. C is on D. C is clear.\nE is on the table. B is on E. B is clear.\n",
        "system1_plan": "Move C from A to table | Move A from B to table | Move B from D to table | Move D from E to table | Move B from table to E | Move C from table to D",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [E, D, B, A, C] | Plan so far [] | Exploring action Move C from A to table | New state -> Stack 1: [C], Stack 2: [E, D, B, A] | Exploring action Move B from D to table | New state -> Invalid | Taking action Move C from A to table | Moved to state -> Stack 1: [C], Stack 2: [E, D, B, A] | Plan so far [Move C from A to table] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [E, D, B] | Exploring action Move A from B to C | New state -> Stack 1: [C, A], Stack 2: [E, D, B] | Exploring action Move B from D to C | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [E, D, B, A, C] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [E, D, B] | Plan so far [Move C from A to table | Move A from B to table] | Exploring action Move D from E to B | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [E, D, B, C] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Exploring action Move B from D to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [E, D] | Exploring action Move E from table to A | New state -> Invalid | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Plan so far [Move C from A to table | Move A from B to table | Move B from D to table] | Exploring action Move D from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move E from table to C | New state -> Invalid | Exploring action Move D from E to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move E from table to A | New state -> Invalid | Exploring action Move D from E to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D], Stack 4: [E] | Taking action Move D from E to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move C from A to table | Move A from B to table | Move B from D to table | Move D from E to table] | Exploring action Move B from table to E | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Taking action Move B from table to E | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Plan so far [Move C from A to table | Move A from B to table | Move B from D to table | Move D from E to table | Move B from table to E] | Exploring action Move E from table to A | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [C], Stack 2: [D, A], Stack 3: [E, B] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [D, C], Stack 3: [E, B] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [C, D], Stack 3: [E, B] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [D, C], Stack 3: [E, B] | Plan so far [Move C from A to table | Move A from B to table | Move B from D to table | Move D from E to table | Move B from table to E | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 23
    },
    {
        "idx": 68,
        "start": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "D",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. C is clear.\nB is on the table. D is on B. D is clear.\n\nThe goal is:\nB is on the table. D is on B. C is on D. A is on C. A is clear.\n",
        "system1_plan": "Move C from A to D | Move A from table to C",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C], Stack 2: [B, D] | Plan so far [] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B, D, C] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move C from A to D | Moved to state -> Stack 1: [A], Stack 2: [B, D, C] | Plan so far [Move C from A to D] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move D from B to C | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [B, D, C, A] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move A from table to C | Moved to state -> Stack 1: [B, D, C, A] | Plan so far [Move C from A to D | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 10
    },
    {
        "idx": 461,
        "start": [
            [
                "table",
                "C"
            ],
            [
                "table",
                "E",
                "D",
                "B",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C",
                "E",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "E",
                "under": "B",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "E",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. C is clear.\nE is on the table. D is on E. B is on D. A is on B. A is clear.\n\nThe goal is:\nB is on the table. C is on B. E is on C. A is on E. A is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move A from B to table | Move B from D to table | Move D from E to table | Move C from table to B | Move E from table to C | Move A from table to E",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [C], Stack 2: [E, D, B, A] | Plan so far [] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [E, D, B] | Exploring action Move A from B to C | New state -> Stack 1: [C, A], Stack 2: [E, D, B] | Exploring action Move C from table to A | New state -> Stack 1: [E, D, B, A, C] | Exploring action Move B from D to C | New state -> Invalid | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [E, D, B] | Plan so far [Move A from B to table] | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [E, D] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Exploring action Move D from E to B | New state -> Invalid | Exploring action Move E from table to B | New state -> Invalid | Exploring action Move B from D to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [E, D] | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Plan so far [Move A from B to table | Move B from D to table] | Exploring action Move D from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [E, D] | Exploring action Move D from E to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move E from table to B | New state -> Invalid | Taking action Move D from E to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move A from B to table | Move B from D to table | Move D from E to table] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Exploring action Move A from table to E | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D], Stack 4: [E, A] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Plan so far [Move A from B to table | Move B from D to table | Move D from E to table | Move C from table to B] | Exploring action Move A from table to C | New state -> Stack 1: [B, C, A], Stack 2: [D], Stack 3: [E] | Exploring action Move E from table to C | New state -> Stack 1: [A], Stack 2: [B, C, E], Stack 3: [D] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from table to E | New state -> Stack 1: [B, C], Stack 2: [D], Stack 3: [E, A] | Taking action Move E from table to C | Moved to state -> Stack 1: [A], Stack 2: [B, C, E], Stack 3: [D] | Plan so far [Move A from B to table | Move B from D to table | Move D from E to table | Move C from table to B | Move E from table to C] | Exploring action Move C from B to E | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C, E] | Exploring action Move E from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Exploring action Move A from table to E | New state -> Stack 1: [B, C, E, A], Stack 2: [D] | Taking action Move A from table to E | Moved to state -> Stack 1: [B, C, E, A], Stack 2: [D] | Plan so far [Move A from B to table | Move B from D to table | Move D from E to table | Move C from table to B | Move E from table to C | Move A from table to E] | Reached goal state!",
        "system2_states_v1": 24
    },
    {
        "idx": 432,
        "start": [
            [
                "table",
                "A",
                "B",
                "C"
            ],
            [
                "table",
                "E",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "A"
            ],
            [
                "table",
                "D",
                "E",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. C is on B. C is clear.\nE is on the table. D is on E. D is clear.\n\nThe goal is:\nC is on the table. A is on C. A is clear.\nD is on the table. E is on D. B is on E. B is clear.\n",
        "system1_plan": "Move C from B to table | Move B from A to table | Move A from table to C | Move D from E to table | Move E from table to D | Move B from table to E",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B, C], Stack 2: [E, D] | Plan so far [] | Exploring action Move D from E to table | New state -> Stack 1: [A, B, C], Stack 2: [D], Stack 3: [E] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from A to table | New state -> Invalid | Exploring action Move C from B to D | New state -> Stack 1: [A, B], Stack 2: [E, D, C] | Exploring action Move C from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [E, D] | Taking action Move C from B to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [E, D] | Plan so far [Move C from B to table] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Exploring action Move D from E to B | New state -> Stack 1: [A, B, D], Stack 2: [C], Stack 3: [E] | Exploring action Move D from E to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move A from table to B | New state -> Invalid | Taking action Move D from E to table | Moved to state -> Stack 1: [A, B, C], Stack 2: [D], Stack 3: [E] | Plan so far [Move D from E to table] | Exploring action Move B from A to C | New state -> Invalid | Exploring action Move E from table to D | New state -> Stack 1: [A, B, C], Stack 2: [D, E] | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move C from B to E | New state -> Stack 1: [A, B], Stack 2: [D], Stack 3: [E, C] | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Plan so far [Move C from B to table | Move B from A to table] | Exploring action Move D from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [E, D] | Exploring action Move E from table to C | New state -> Invalid | Exploring action Move D from E to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move E from table to A | New state -> Invalid | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [E, D] | Plan so far [Move C from B to table | Move B from A to table | Move A from table to C] | Exploring action Move D from E to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Exploring action Move E from table to D | New state -> Invalid | Exploring action Move D from E to B | New state -> Stack 1: [B, D], Stack 2: [C, A], Stack 3: [E] | Exploring action Move B from table to D | New state -> Stack 1: [C, A], Stack 2: [E, D, B] | Taking action Move D from E to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Plan so far [Move C from B to table | Move B from A to table | Move A from table to C | Move D from E to table] | Exploring action Move B from table to D | New state -> Stack 1: [C, A], Stack 2: [D, B], Stack 3: [E] | Exploring action Move E from table to D | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D, E] | Exploring action Move B from table to E | New state -> Stack 1: [C, A], Stack 2: [D], Stack 3: [E, B] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move C from table to A | New state -> Invalid | Taking action Move E from table to D | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D, E] | Plan so far [Move C from B to table | Move B from A to table | Move A from table to C | Move D from E to table | Move E from table to D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D, E] | Exploring action Move E from D to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Exploring action Move B from table to E | New state -> Stack 1: [C, A], Stack 2: [D, E, B] | Taking action Move B from table to E | Moved to state -> Stack 1: [C, A], Stack 2: [D, E, B] | Plan so far [Move C from B to table | Move B from A to table | Move A from table to C | Move D from E to table | Move E from table to D | Move B from table to E] | Reached goal state!",
        "system2_states_v1": 32
    },
    {
        "idx": 37,
        "start": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. C is clear.\nB is on the table. B is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. C is on A. D is on C. B is on D. B is clear.\n",
        "system1_plan": "Move D from table to C | Move B from table to D",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A, C, D], Stack 2: [B] | Exploring action Move D from table to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Taking action Move D from table to C | Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [Move D from table to C] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from C to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move D from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A, C, D, B] | Taking action Move B from table to D | Moved to state -> Stack 1: [A, C, D, B] | Plan so far [Move D from table to C | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 147,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "C",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nC is on the table. C is clear.\nD is on the table. A is on D. A is clear.\n\nThe goal is:\nA is on the table. A is clear.\nD is on the table. C is on D. B is on C. B is clear.\n",
        "system1_plan": "Move A from D to table | Move C from table to D | Move B from table to C",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from D to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move A from D to table | Move C from table to D] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [D, C, B] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move D from table to B | New state -> Invalid | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [D, C, B] | Plan so far [Move A from D to table | Move C from table to D | Move B from table to C] | Reached goal state!",
        "system2_states_v1": 13
    },
    {
        "idx": 259,
        "start": [
            [
                "table",
                "B",
                "C",
                "A",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "A",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. C is on B. A is on C. D is on A. D is clear.\n\nThe goal is:\nC is on the table. C is clear.\nD is on the table. A is on D. B is on A. B is clear.\n",
        "system1_plan": "Move D from A to table | Move A from C to D | Move C from B to table | Move B from table to A",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, C, A, D] | Plan so far [] | Exploring action Move D from A to table | New state -> Stack 1: [B, C, A], Stack 2: [D] | Exploring action Move C from B to table | New state -> Invalid | Exploring action Move C from B to D | New state -> Invalid | Taking action Move D from A to table | Moved to state -> Stack 1: [B, C, A], Stack 2: [D] | Plan so far [Move D from A to table] | Exploring action Move D from table to A | New state -> Stack 1: [B, C, A, D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from C to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Taking action Move A from C to D | Moved to state -> Stack 1: [B, C], Stack 2: [D, A] | Plan so far [Move D from A to table | Move A from C to D] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move C from B to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from B to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move C from B to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move D from A to table | Move A from C to D | Move C from B to table] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to A | New state -> Stack 1: [C], Stack 2: [D, A, B] | Taking action Move B from table to A | Moved to state -> Stack 1: [C], Stack 2: [D, A, B] | Plan so far [Move D from A to table | Move A from C to D | Move C from B to table | Move B from table to A] | Reached goal state!",
        "system2_states_v1": 16
    },
    {
        "idx": 453,
        "start": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B",
                "D"
            ],
            [
                "table",
                "E"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "B",
                "A",
                "D",
                "E"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "E",
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. C is clear.\nB is on the table. D is on B. D is clear.\nE is on the table. E is clear.\n\nThe goal is:\nC is on the table. B is on C. A is on B. D is on A. E is on D. E is clear.\n",
        "system1_plan": "Move C from A to table | Move D from B to table | Move B from table to C | Move A from table to B | Move D from table to A | Move E from table to D",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C], Stack 2: [B, D], Stack 3: [E] | Plan so far [] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Exploring action Move C from A to E | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [E, C] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Plan so far [Move C from A to table] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C], Stack 4: [E] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move E from table to D | New state -> Stack 1: [A], Stack 2: [B, D, E], Stack 3: [C] | Taking action Move D from B to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Plan so far [Move D from B to table] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move C from A to E | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move C from A to table | Move D from B to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move E from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D, E] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move D from B to table | Move C from A to table] | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Plan so far [Move C from A to table | Move D from B to table | Move B from table to C] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move C from table to E | New state -> Invalid | Exploring action Move A from table to E | New state -> Stack 1: [C, B], Stack 2: [D], Stack 3: [E, A] | Exploring action Move E from table to D | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D, E] | Exploring action Move A from table to B | New state -> Stack 1: [C, B, A], Stack 2: [D], Stack 3: [E] | Taking action Move A from table to B | Moved to state -> Stack 1: [C, B, A], Stack 2: [D], Stack 3: [E] | Plan so far [Move C from A to table | Move D from B to table | Move B from table to C | Move A from table to B] | Exploring action Move D from table to A | New state -> Stack 1: [C, B, A, D], Stack 2: [E] | Exploring action Move B from C to table | New state -> Invalid | Exploring action Move E from table to A | New state -> Stack 1: [C, B, A, E], Stack 2: [D] | Exploring action Move E from table to D | New state -> Stack 1: [C, B, A], Stack 2: [D, E] | Taking action Move D from table to A | Moved to state -> Stack 1: [C, B, A, D], Stack 2: [E] | Plan so far [Move C from A to table | Move D from B to table | Move B from table to C | Move A from table to B | Move D from table to A] | Exploring action Move E from table to D | New state -> Stack 1: [C, B, A, D, E] | Exploring action Move D from A to E | New state -> Stack 1: [C, B, A], Stack 2: [E, D] | Exploring action Move A from B to D | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [C, B, A], Stack 2: [D], Stack 3: [E] | Taking action Move E from table to D | Moved to state -> Stack 1: [C, B, A, D, E] | Plan so far [Move C from A to table | Move D from B to table | Move B from table to C | Move A from table to B | Move D from table to A | Move E from table to D] | Reached goal state!",
        "system2_states_v1": 29
    },
    {
        "idx": 351,
        "start": [
            [
                "table",
                "C",
                "B",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. D is on B. A is on D. A is clear.\n\nThe goal is:\nB is on the table. A is on B. A is clear.\nC is on the table. D is on C. D is clear.\n",
        "system1_plan": "Move A from D to table | Move D from B to table | Move B from C to table | Move A from table to B | Move D from table to C",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B, D, A] | Plan so far [] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [C, B, D] | Exploring action Move D from B to A | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [C, B, D] | Plan so far [Move A from D to table] | Exploring action Move A from table to D | New state -> Stack 1: [C, B, D, A] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move B from C to A | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move A from D to table | Move D from B to table] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [C, B, A], Stack 2: [D] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from D to table | Move D from B to table | Move B from C to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move A from D to table | Move D from B to table | Move B from C to table | Move A from table to B] | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [B, A], Stack 2: [C, D] | Exploring action Move C from table to D | New state -> Stack 1: [B, A], Stack 2: [D, C] | Taking action Move D from table to C | Moved to state -> Stack 1: [B, A], Stack 2: [C, D] | Plan so far [Move A from D to table | Move D from B to table | Move B from C to table | Move A from table to B | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 130,
        "start": [
            [
                "table",
                "A",
                "C",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. B is on C. B is clear.\nD is on the table. D is clear.\n\nThe goal is:\nB is on the table. B is clear.\nC is on the table. A is on C. A is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move B from C to table | Move C from A to table | Move A from table to C",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, B], Stack 2: [D] | Plan so far [] | Exploring action Move B from C to D | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [A, C, B, D] | Exploring action Move B from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from A to table | New state -> Invalid | Exploring action Move A from table to B | New state -> Invalid | Taking action Move B from C to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move B from C to table] | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from C to table | Move C from A to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move B from C to table | Move C from A to table | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 252,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C",
                "B",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nC is on the table. B is on C. D is on B. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nC is on the table. D is on C. B is on D. B is clear.\n",
        "system1_plan": "Move D from B to table | Move B from C to table | Move D from table to C | Move B from table to D",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [C, B, D] | Plan so far [] | Exploring action Move A from table to D | New state -> Stack 1: [C, B, D, A] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move B from C to table | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move D from B to table] | Exploring action Move B from C to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [C, B, D] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from B to table | Move B from C to table] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move B from C to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move D from B to table | Move B from C to D] | Exploring action Move B from D to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to C | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move D from table to C | New state -> Invalid | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move D from B to table | Move B from C to table | Move D from table to C] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C, D, B] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C, D, B] | Plan so far [Move D from B to table | Move B from C to table | Move D from table to C | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 22
    },
    {
        "idx": 339,
        "start": [
            [
                "table",
                "A",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C",
                "A",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. D is on B. D is clear.\nC is on the table. C is clear.\n\nThe goal is:\nB is on the table. C is on B. A is on C. D is on A. D is clear.\n",
        "system1_plan": "Move D from B to table | Move B from A to table | Move C from table to B | Move A from table to C | Move D from table to A",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B, D], Stack 2: [C] | Plan so far [] | Exploring action Move D from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move D from B to C | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move B from A to D | New state -> Invalid | Exploring action Move C from table to D | New state -> Stack 1: [A, B, D, C] | Exploring action Move A from table to D | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move D from B to table] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move B from A to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from B to table | Move B from A to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move D from B to table | Move B from A to table | Move C from table to B] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move A from table to C | New state -> Stack 1: [B, C, A], Stack 2: [D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B, C, A], Stack 2: [D] | Plan so far [Move D from B to table | Move B from A to table | Move C from table to B | Move A from table to C] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move A from C to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [B, C, A, D] | Exploring action Move C from B to table | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Taking action Move D from table to A | Moved to state -> Stack 1: [B, C, A, D] | Plan so far [Move D from B to table | Move B from A to table | Move C from table to B | Move A from table to C | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 21
    },
    {
        "idx": 326,
        "start": [
            [
                "table",
                "B",
                "D",
                "A",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B"
            ],
            [
                "table",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. D is on B. A is on D. C is on A. C is clear.\n\nThe goal is:\nA is on the table. B is on A. B is clear.\nD is on the table. C is on D. C is clear.\n",
        "system1_plan": "Move C from A to table | Move A from D to table | Move D from B to table | Move B from table to A | Move C from table to D",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, D, A, C] | Plan so far [] | Exploring action Move C from A to table | New state -> Stack 1: [B, D, A], Stack 2: [C] | Exploring action Move A from D to table | New state -> Invalid | Taking action Move C from A to table | Moved to state -> Stack 1: [B, D, A], Stack 2: [C] | Plan so far [Move C from A to table] | Exploring action Move C from table to A | New state -> Stack 1: [B, D, A, C] | Exploring action Move D from B to A | New state -> Invalid | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from D to C | New state -> Stack 1: [B, D], Stack 2: [C, A] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move C from A to table | Move A from D to table] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move D from B to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from A to table | Move A from D to table | Move D from B to table] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move B from table to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from A to table | Move A from D to table | Move D from B to table | Move B from table to A] | Exploring action Move D from table to C | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move C from table to D | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Taking action Move C from table to D | Moved to state -> Stack 1: [A, B], Stack 2: [D, C] | Plan so far [Move C from A to table | Move A from D to table | Move D from B to table | Move B from table to A | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 20
    },
    {
        "idx": 159,
        "start": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. C is clear.\nB is on the table. B is clear.\nD is on the table. D is clear.\n\nThe goal is:\nB is on the table. A is on B. C is on A. C is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move C from A to table | Move A from table to B | Move C from table to A",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [A, C, B], Stack 2: [D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from A to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from A to table | Move A from table to B] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [B, A, C], Stack 2: [D] | Taking action Move C from table to A | Moved to state -> Stack 1: [B, A, C], Stack 2: [D] | Plan so far [Move C from A to table | Move A from table to B | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 456,
        "start": [
            [
                "table",
                "A",
                "E"
            ],
            [
                "table",
                "B",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "D",
                "A",
                "C"
            ],
            [
                "table",
                "E",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. E is on A. E is clear.\nB is on the table. C is on B. D is on C. D is clear.\n\nThe goal is:\nD is on the table. A is on D. C is on A. C is clear.\nE is on the table. B is on E. B is clear.\n",
        "system1_plan": "Move D from C to table | Move C from B to table | Move E from A to table | Move B from table to E | Move A from table to D | Move C from table to A",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, E], Stack 2: [B, C, D] | Plan so far [] | Exploring action Move D from C to E | New state -> Stack 1: [A, E, D], Stack 2: [B, C] | Exploring action Move B from table to E | New state -> Invalid | Exploring action Move E from A to table | New state -> Stack 1: [A], Stack 2: [B, C, D], Stack 3: [E] | Exploring action Move D from C to table | New state -> Stack 1: [A, E], Stack 2: [B, C], Stack 3: [D] | Exploring action Move A from table to E | New state -> Invalid | Taking action Move D from C to table | Moved to state -> Stack 1: [A, E], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move D from C to table] | Exploring action Move C from B to table | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move E from A to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move E from A to C | New state -> Stack 1: [A], Stack 2: [B, C, E], Stack 3: [D] | Exploring action Move B from table to E | New state -> Invalid | Taking action Move E from A to table | Moved to state -> Stack 1: [A], Stack 2: [B, C, D], Stack 3: [E] | Plan so far [Move E from A to table] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move D from C to E | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [E, D] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B, C], Stack 3: [E] | Exploring action Move C from B to D | New state -> Invalid | Taking action Move C from B to table | Moved to state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from C to table | Move C from B to table] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move E from A to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D, E] | Exploring action Move E from A to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Exploring action Move E from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move D from C to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Plan so far [Move E from A to table | Move D from C to table] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [B, C], Stack 2: [D, A], Stack 3: [E] | Exploring action Move C from B to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move E from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move D from C to table | Move C from B to table | Move E from A to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Exploring action Move B from table to E | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Taking action Move B from table to E | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Plan so far [Move D from C to table | Move C from B to table | Move E from A to table | Move B from table to E] | Exploring action Move E from table to B | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [D], Stack 3: [E, B] | Exploring action Move E from table to C | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [C, A], Stack 2: [D], Stack 3: [E, B] | Exploring action Move A from table to D | New state -> Stack 1: [C], Stack 2: [D, A], Stack 3: [E, B] | Taking action Move A from table to D | Moved to state -> Stack 1: [C], Stack 2: [D, A], Stack 3: [E, B] | Plan so far [Move D from C to table | Move C from B to table | Move E from A to table | Move B from table to E | Move A from table to D] | Exploring action Move E from table to A | New state -> Invalid | Exploring action Move A from D to C | New state -> Stack 1: [C, A], Stack 2: [D], Stack 3: [E, B] | Exploring action Move C from table to A | New state -> Stack 1: [D, A, C], Stack 2: [E, B] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Taking action Move C from table to A | Moved to state -> Stack 1: [D, A, C], Stack 2: [E, B] | Plan so far [Move D from C to table | Move C from B to table | Move E from A to table | Move B from table to E | Move A from table to D | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 37
    },
    {
        "idx": 244,
        "start": [
            [
                "table",
                "C",
                "B",
                "A",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. A is on B. D is on A. D is clear.\n\nThe goal is:\nA is on the table. B is on A. C is on B. C is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move D from A to table | Move A from B to table | Move B from C to A | Move C from table to B",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B, A, D] | Plan so far [] | Exploring action Move A from B to D | New state -> Invalid | Exploring action Move B from C to table | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [C, B, A], Stack 2: [D] | Taking action Move D from A to table | Moved to state -> Stack 1: [C, B, A], Stack 2: [D] | Plan so far [Move D from A to table] | Exploring action Move A from B to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move B from C to A | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [C, B, A, D] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move D from A to table | Move A from B to table] | Exploring action Move A from table to B | New state -> Stack 1: [C, B, A], Stack 2: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move B from C to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move D from A to table | Move A from B to table | Move B from C to A] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A, B, C], Stack 2: [D] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Taking action Move C from table to B | Moved to state -> Stack 1: [A, B, C], Stack 2: [D] | Plan so far [Move D from A to table | Move A from B to table | Move B from C to A | Move C from table to B] | Reached goal state!",
        "system2_states_v1": 15
    },
    {
        "idx": 335,
        "start": [
            [
                "table",
                "C",
                "B",
                "A",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. A is on B. D is on A. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nC is on the table. D is on C. B is on D. B is clear.\n",
        "system1_plan": "Move D from A to table | Move A from B to table | Move B from C to table | Move D from table to C | Move B from table to D",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B, A, D] | Plan so far [] | Exploring action Move A from B to D | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [C, B, A], Stack 2: [D] | Taking action Move D from A to table | Moved to state -> Stack 1: [C, B, A], Stack 2: [D] | Plan so far [Move D from A to table] | Exploring action Move A from B to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [C, B, A, D] | Exploring action Move B from C to D | New state -> Invalid | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move D from A to table | Move A from B to table] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from C to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [C, B, D] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from A to table | Move A from B to table | Move B from C to table] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move B from C to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move D from A to table | Move A from B to table | Move B from C to D] | Exploring action Move B from D to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move A from table to C | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move D from A to table | Move A from B to table | Move B from C to table | Move D from table to C] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C, D, B] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C, D, B] | Plan so far [Move D from A to table | Move A from B to table | Move B from C to table | Move D from table to C | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 22
    },
    {
        "idx": 157,
        "start": [
            [
                "table",
                "B",
                "D"
            ],
            [
                "table",
                "C",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. D is on B. D is clear.\nC is on the table. A is on C. A is clear.\n\nThe goal is:\nB is on the table. B is clear.\nC is on the table. C is clear.\nD is on the table. A is on D. A is clear.\n",
        "system1_plan": "Move A from C to table | Move D from B to table | Move A from table to D",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, D], Stack 2: [C, A] | Plan so far [] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from C to D | New state -> Stack 1: [B, D, A], Stack 2: [C] | Exploring action Move D from B to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move A from C to table] | Exploring action Move D from B to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to D | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from C to table | Move D from B to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move A from table to D | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move A from C to table | Move D from B to table | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 356,
        "start": [
            [
                "table",
                "A",
                "C",
                "D",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C",
                "A",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. D is on C. B is on D. B is clear.\n\nThe goal is:\nB is on the table. C is on B. A is on C. D is on A. D is clear.\n",
        "system1_plan": "Move B from D to table | Move D from C to table | Move C from A to B | Move A from table to C | Move D from table to A",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, D, B] | Plan so far [] | Exploring action Move B from D to table | New state -> Stack 1: [A, C, D], Stack 2: [B] | Exploring action Move C from A to B | New state -> Invalid | Exploring action Move A from table to B | New state -> Invalid | Taking action Move B from D to table | Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [Move B from D to table] | Exploring action Move B from table to D | New state -> Stack 1: [A, C, D, B] | Exploring action Move D from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from C to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move C from A to B | New state -> Invalid | Taking action Move D from C to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move B from D to table | Move D from C to table] | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move A from table to C | New state -> Invalid | Taking action Move C from A to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move B from D to table | Move D from C to table | Move C from A to B] | Exploring action Move A from table to C | New state -> Stack 1: [B, C, A], Stack 2: [D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B, C, A], Stack 2: [D] | Plan so far [Move B from D to table | Move D from C to table | Move C from A to B | Move A from table to C] | Exploring action Move A from C to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [B, C, A, D] | Exploring action Move C from B to D | New state -> Invalid | Taking action Move D from table to A | Moved to state -> Stack 1: [B, C, A, D] | Plan so far [Move B from D to table | Move D from C to table | Move C from A to B | Move A from table to C | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 21
    },
    {
        "idx": 225,
        "start": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "B",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. A is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nC is on the table. B is on C. D is on B. A is on D. A is clear.\n",
        "system1_plan": "Move A from B to table | Move B from table to C | Move D from table to B | Move A from table to D",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move A from B to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from B to table] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move A from B to D | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move A from B to D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move A from B to table | Move B from table to C] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [C, B, D] | Exploring action Move A from table to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move B from table to C | Moved to state -> Stack 1: [C, B], Stack 2: [D, A] | Plan so far [Move A from B to D | Move B from table to C] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from C to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from D to B | New state -> Stack 1: [C, B, A], Stack 2: [D] | Taking action Move D from table to B | Moved to state -> Stack 1: [A], Stack 2: [C, B, D] | Plan so far [Move A from B to table | Move B from table to C | Move D from table to B] | Exploring action Move A from table to D | New state -> Stack 1: [C, B, D, A] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move B from C to table | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move A from table to D | Moved to state -> Stack 1: [C, B, D, A] | Plan so far [Move A from B to table | Move B from table to C | Move D from table to B | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 26
    },
    {
        "idx": 245,
        "start": [
            [
                "table",
                "A",
                "D",
                "C"
            ],
            [
                "table",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. C is on D. C is clear.\nB is on the table. B is clear.\n\nThe goal is:\nA is on the table. C is on A. C is clear.\nD is on the table. B is on D. B is clear.\n",
        "system1_plan": "Move C from D to table | Move D from A to table | Move B from table to D | Move C from table to A",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D, C], Stack 2: [B] | Plan so far [] | Exploring action Move B from table to C | New state -> Stack 1: [A, D, C, B] | Exploring action Move C from D to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from A to B | New state -> Invalid | Exploring action Move D from A to table | New state -> Invalid | Exploring action Move C from D to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Taking action Move C from D to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move C from D to table] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from D to table | Move D from A to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move C from D to table | Move D from A to table | Move B from table to D] | Exploring action Move A from table to C | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from table to A | Moved to state -> Stack 1: [A, C], Stack 2: [D, B] | Plan so far [Move C from D to table | Move D from A to table | Move B from table to D | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 344,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "A",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nC is on the table. A is on C. D is on A. D is clear.\n\nThe goal is:\nB is on the table. C is on B. D is on C. A is on D. A is clear.\n",
        "system1_plan": "Move D from A to table | Move A from C to table | Move C from table to B | Move D from table to C | Move A from table to D",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [C, A, D] | Plan so far [] | Exploring action Move D from A to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [C, A, D, B] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move D from A to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move D from A to table] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from C to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from A to table | Move A from C to table] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move A from C to D | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move D from A to table | Move A from C to D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move D from A to table | Move A from C to table | Move C from table to B] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B, C, D] | Taking action Move C from table to B | Moved to state -> Stack 1: [B, C], Stack 2: [D, A] | Plan so far [Move D from A to table | Move A from C to D | Move C from table to B] | Exploring action Move A from D to C | New state -> Stack 1: [B, C, A], Stack 2: [D] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B, C, D] | Plan so far [Move D from A to table | Move A from C to table | Move C from table to B | Move D from table to C] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move A from table to D | New state -> Stack 1: [B, C, D, A] | Exploring action Move C from B to D | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Taking action Move A from table to D | Moved to state -> Stack 1: [B, C, D, A] | Plan so far [Move D from A to table | Move A from C to table | Move C from table to B | Move D from table to C | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 30
    },
    {
        "idx": 464,
        "start": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "D",
                "E",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "A"
            ],
            [
                "table",
                "E",
                "B",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "E",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. C is clear.\nD is on the table. E is on D. B is on E. B is clear.\n\nThe goal is:\nC is on the table. A is on C. A is clear.\nE is on the table. B is on E. D is on B. D is clear.\n",
        "system1_plan": "Move C from A to table | Move A from table to C | Move B from E to table | Move E from D to table | Move B from table to E | Move D from table to B",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C], Stack 2: [D, E, B] | Plan so far [] | Exploring action Move E from D to table | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, E, B] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from E to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D, E] | Exploring action Move B from E to C | New state -> Stack 1: [A, C, B], Stack 2: [D, E] | Taking action Move B from E to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D, E] | Plan so far [Move B from E to table] | Exploring action Move E from D to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Exploring action Move D from table to E | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D, E] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move E from D to B | New state -> Stack 1: [A, C], Stack 2: [B, E], Stack 3: [D] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, E, B] | Plan so far [Move C from A to table] | Exploring action Move E from D to B | New state -> Invalid | Exploring action Move B from E to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D, E] | Exploring action Move A from table to C | New state -> Stack 1: [C, A], Stack 2: [D, E, B] | Exploring action Move B from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D, E] | Taking action Move A from table to C | Moved to state -> Stack 1: [C, A], Stack 2: [D, E, B] | Plan so far [Move C from A to table | Move A from table to C] | Exploring action Move B from E to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D, E] | Exploring action Move B from E to A | New state -> Stack 1: [C, A, B], Stack 2: [D, E] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, E, B] | Taking action Move B from E to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D, E] | Plan so far [Move C from A to table | Move A from table to C | Move B from E to table] | Exploring action Move B from table to E | New state -> Stack 1: [C, A], Stack 2: [D, E, B] | Exploring action Move E from D to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move E from D to B | New state -> Stack 1: [B, E], Stack 2: [C, A], Stack 3: [D] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move E from D to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Plan so far [Move C from A to table | Move A from table to C | Move B from E to table | Move E from D to table] | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [C, A], Stack 3: [E] | Exploring action Move B from table to D | New state -> Stack 1: [C, A], Stack 2: [D, B], Stack 3: [E] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move B from table to E | New state -> Stack 1: [C, A], Stack 2: [D], Stack 3: [E, B] | Taking action Move B from table to E | Moved to state -> Stack 1: [C, A], Stack 2: [D], Stack 3: [E, B] | Plan so far [Move C from A to table | Move A from table to C | Move B from E to table | Move E from D to table | Move B from table to E] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from E to D | New state -> Stack 1: [C, A], Stack 2: [D, B], Stack 3: [E] | Exploring action Move B from E to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Exploring action Move D from table to B | New state -> Stack 1: [C, A], Stack 2: [E, B, D] | Taking action Move D from table to B | Moved to state -> Stack 1: [C, A], Stack 2: [E, B, D] | Plan so far [Move C from A to table | Move A from table to C | Move B from E to table | Move E from D to table | Move B from table to E | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 31
    },
    {
        "idx": 268,
        "start": [
            [
                "table",
                "A",
                "C",
                "D",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. D is on C. B is on D. B is clear.\n\nThe goal is:\nB is on the table. A is on B. A is clear.\nD is on the table. C is on D. C is clear.\n",
        "system1_plan": "Move B from D to table | Move D from C to table | Move C from A to D | Move A from table to B",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, D, B] | Plan so far [] | Exploring action Move C from A to B | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A, C, D], Stack 2: [B] | Taking action Move B from D to table | Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [Move B from D to table] | Exploring action Move D from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A, C, D, B] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from C to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Taking action Move D from C to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move B from D to table | Move D from C to table] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move A from table to C | New state -> Invalid | Taking action Move C from A to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move B from D to table | Move D from C to table | Move C from A to D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [D, C, A] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [D, C] | Plan so far [Move B from D to table | Move D from C to table | Move C from A to D | Move A from table to B] | Reached goal state!",
        "system2_states_v1": 15
    },
    {
        "idx": 62,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "D",
                "A",
                "C",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nC is on the table. C is clear.\nD is on the table. A is on D. A is clear.\n\nThe goal is:\nD is on the table. A is on D. C is on A. B is on C. B is clear.\n",
        "system1_plan": "Move C from table to A | Move B from table to C",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move C from table to B | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move C from table to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Exploring action Move D from table to C | New state -> Invalid | Taking action Move C from table to A | Moved to state -> Stack 1: [B], Stack 2: [D, A, C] | Plan so far [Move C from table to A] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from D to B | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [D, A, C, B] | Exploring action Move C from A to B | New state -> Stack 1: [B, C], Stack 2: [D, A] | Taking action Move B from table to C | Moved to state -> Stack 1: [D, A, C, B] | Plan so far [Move C from table to A | Move B from table to C] | Reached goal state!",
        "system2_states_v1": 10
    },
    {
        "idx": 51,
        "start": [
            [
                "table",
                "A",
                "D",
                "B"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "B",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. B is on D. B is clear.\nC is on the table. C is clear.\n\nThe goal is:\nA is on the table. D is on A. D is clear.\nB is on the table. C is on B. C is clear.\n",
        "system1_plan": "Move B from D to table | Move C from table to B",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D, B], Stack 2: [C] | Plan so far [] | Exploring action Move D from A to table | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A, D, B, C] | Exploring action Move B from D to C | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move B from D to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move B from D to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move B from D to table] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move B from table to C | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [A, D, B], Stack 2: [C] | Taking action Move C from table to B | Moved to state -> Stack 1: [A, D], Stack 2: [B, C] | Plan so far [Move B from D to table | Move C from table to B] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 362,
        "start": [
            [
                "table",
                "D",
                "A",
                "B",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nD is on the table. A is on D. B is on A. C is on B. C is clear.\n\nThe goal is:\nA is on the table. C is on A. C is clear.\nD is on the table. B is on D. B is clear.\n",
        "system1_plan": "Move C from B to table | Move B from A to table | Move A from D to table | Move B from table to D | Move C from table to A",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [D, A, B, C] | Plan so far [] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [C], Stack 2: [D, A, B] | Taking action Move C from B to table | Moved to state -> Stack 1: [C], Stack 2: [D, A, B] | Plan so far [Move C from B to table] | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from table to B | New state -> Stack 1: [D, A, B, C] | Exploring action Move A from D to B | New state -> Invalid | Exploring action Move B from A to C | New state -> Stack 1: [C, B], Stack 2: [D, A] | Taking action Move B from A to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move C from B to table | Move B from A to table] | Exploring action Move C from table to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from B to table | Move B from A to table | Move A from D to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move C from B to table | Move B from A to table | Move A from D to table | Move B from table to D] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move A from table to C | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move D from table to B | New state -> Invalid | Taking action Move C from table to A | Moved to state -> Stack 1: [A, C], Stack 2: [D, B] | Plan so far [Move C from B to table | Move B from A to table | Move A from D to table | Move B from table to D | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 468,
        "start": [
            [
                "table",
                "B",
                "E"
            ],
            [
                "table",
                "C",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "B",
                "E",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "E": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "E",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "E",
                "under": "A",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. E is on B. E is clear.\nC is on the table. A is on C. A is clear.\nD is on the table. D is clear.\n\nThe goal is:\nC is on the table. B is on C. E is on B. D is on E. A is on D. A is clear.\n",
        "system1_plan": "Move E from B to table | Move A from C to table | Move B from table to C | Move E from table to B | Move D from table to E | Move A from table to D",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, E], Stack 2: [C, A], Stack 3: [D] | Plan so far [] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Exploring action Move E from B to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Exploring action Move A from C to D | New state -> Stack 1: [B, E], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from table to E | New state -> Invalid | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from C to table] | Exploring action Move E from B to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move D from table to E | New state -> Stack 1: [A], Stack 2: [B, E, D], Stack 3: [C] | Exploring action Move E from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move E from B to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Plan so far [Move E from B to table] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move A from C to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Taking action Move A from C to D | Moved to state -> Stack 1: [B, E], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move A from C to D] | Exploring action Move E from B to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move E from B to C | New state -> Stack 1: [B], Stack 2: [C, E], Stack 3: [D, A] | Exploring action Move B from table to C | New state -> Invalid | Taking action Move D from table to E | Moved to state -> Stack 1: [B, E, D], Stack 2: [C, A] | Plan so far [Move D from table to E] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, E, D], Stack 3: [C] | Exploring action Move E from B to table | New state -> Invalid | Exploring action Move A from C to D | New state -> Stack 1: [B, E, D, A], Stack 2: [C] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from E to table | New state -> Stack 1: [B, E], Stack 2: [C, A], Stack 3: [D] | Taking action Move A from C to D | Moved to state -> Stack 1: [B, E, D, A], Stack 2: [C] | Plan so far [Move D from table to E | Move A from C to D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, E, D], Stack 3: [C] | Exploring action Move C from table to A | New state -> Stack 1: [B, E, D, A, C] | Exploring action Move D from E to A | New state -> Invalid | Exploring action Move A from D to C | New state -> Stack 1: [B, E, D], Stack 2: [C, A] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move E from B to table | Move A from C to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Taking action Move A from C to D | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Plan so far [Move E from B to table | Move A from C to D] | Exploring action Move B from table to C | New state -> Stack 1: [C, B], Stack 2: [D, A], Stack 3: [E] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move B from table to E | New state -> Stack 1: [C], Stack 2: [D, A], Stack 3: [E, B] | Exploring action Move D from table to E | New state -> Invalid | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Plan so far [Move E from B to table | Move A from C to table | Move B from table to C] | Exploring action Move E from table to B | New state -> Stack 1: [A], Stack 2: [C, B, E], Stack 3: [D] | Exploring action Move A from table to E | New state -> Stack 1: [C, B], Stack 2: [D], Stack 3: [E, A] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [C, B], Stack 2: [D, A], Stack 3: [E] | Taking action Move D from table to E | Moved to state -> Stack 1: [A], Stack 2: [B, E, D], Stack 3: [C] | Plan so far [Move A from C to table | Move D from table to E] | Exploring action Move A from table to C | New state -> Stack 1: [B, E, D], Stack 2: [C, A] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, E, D] | Exploring action Move E from B to A | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [B, E, D, A], Stack 2: [C] | Taking action Move A from table to D | Moved to state -> Stack 1: [B, E, D, A], Stack 2: [C] | Plan so far [Move A from C to table | Move D from table to E | Move A from table to D] | Taking action Move E from B to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Plan so far [Move A from C to D | Move E from B to table] | Taking action Move E from table to B | Moved to state -> Stack 1: [A], Stack 2: [C, B, E], Stack 3: [D] | Plan so far [Move E from B to table | Move A from C to table | Move B from table to C | Move E from table to B] | Exploring action Move D from table to E | New state -> Stack 1: [A], Stack 2: [C, B, E, D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [C, B, E] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move B from C to table | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [C, B, E], Stack 2: [D, A] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B, E, D], Stack 3: [C] | Plan so far [Move D from table to E | Move A from C to table] | Taking action Move E from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move A from C to table | Move E from B to table] | Taking action Move D from table to E | Moved to state -> Stack 1: [A], Stack 2: [C, B, E, D] | Plan so far [Move E from B to table | Move A from C to table | Move B from table to C | Move E from table to B | Move D from table to E] | Exploring action Move D from E to A | New state -> Stack 1: [A, D], Stack 2: [C, B, E] | Exploring action Move E from B to D | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [C, B, E, D, A] | Exploring action Move D from E to table | New state -> Stack 1: [A], Stack 2: [C, B, E], Stack 3: [D] | Taking action Move A from table to D | Moved to state -> Stack 1: [C, B, E, D, A] | Plan so far [Move E from B to table | Move A from C to table | Move B from table to C | Move E from table to B | Move D from table to E | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 53
    },
    {
        "idx": 438,
        "start": [
            [
                "table",
                "B",
                "C",
                "D",
                "A"
            ],
            [
                "table",
                "E"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "E",
                "B",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "E",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. C is on B. D is on C. A is on D. A is clear.\nE is on the table. E is clear.\n\nThe goal is:\nA is on the table. A is clear.\nE is on the table. B is on E. D is on B. C is on D. C is clear.\n",
        "system1_plan": "Move A from D to table | Move D from C to table | Move C from B to table | Move B from table to E | Move D from table to B | Move C from table to D",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, C, D, A], Stack 2: [E] | Plan so far [] | Exploring action Move D from C to A | New state -> Invalid | Exploring action Move A from D to E | New state -> Stack 1: [B, C, D], Stack 2: [E, A] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move E from table to A | New state -> Stack 1: [B, C, D, A, E] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, C, D], Stack 3: [E] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B, C, D], Stack 3: [E] | Plan so far [Move A from D to table] | Exploring action Move C from B to E | New state -> Invalid | Exploring action Move D from C to E | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [E, D] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Exploring action Move C from B to table | New state -> Invalid | Exploring action Move E from table to D | New state -> Stack 1: [A], Stack 2: [B, C, D, E] | Taking action Move D from C to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Plan so far [Move A from D to table | Move D from C to table] | Exploring action Move C from B to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move C from B to E | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Taking action Move C from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move A from D to table | Move D from C to table | Move C from B to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move B from table to E | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Taking action Move C from B to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Plan so far [Move A from D to table | Move D from C to table | Move C from B to D] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from table to E | New state -> Stack 1: [A], Stack 2: [D, C], Stack 3: [E, B] | Exploring action Move E from table to B | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [D, C] | Taking action Move B from table to E | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Plan so far [Move A from D to table | Move D from C to table | Move C from B to table | Move B from table to E] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [D, C], Stack 3: [E, B] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [C, D], Stack 3: [E, B] | Exploring action Move E from table to D | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [E, B, D] | Taking action Move B from table to E | Moved to state -> Stack 1: [A], Stack 2: [D, C], Stack 3: [E, B] | Plan so far [Move A from D to table | Move D from C to table | Move C from B to D | Move B from table to E] | Exploring action Move B from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move C from D to B | New state -> Stack 1: [A], Stack 2: [D], Stack 3: [E, B, C] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Taking action Move D from table to B | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [E, B, D] | Plan so far [Move A from D to table | Move D from C to table | Move C from B to table | Move B from table to E | Move D from table to B] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [E, B, D, C] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [E, B, D] | Exploring action Move E from table to C | New state -> Invalid | Exploring action Move B from E to table | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [E, B, D, C] | Plan so far [Move A from D to table | Move D from C to table | Move C from B to table | Move B from table to E | Move D from table to B | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 34
    },
    {
        "idx": 446,
        "start": [
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "A",
                "E",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "E",
                "B",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "E",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "E",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. C is clear.\nD is on the table. A is on D. E is on A. B is on E. B is clear.\n\nThe goal is:\nA is on the table. A is clear.\nE is on the table. B is on E. D is on B. C is on D. C is clear.\n",
        "system1_plan": "Move B from E to table | Move E from A to table | Move A from D to table | Move B from table to E | Move D from table to B | Move C from table to D",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [C], Stack 2: [D, A, E, B] | Plan so far [] | Exploring action Move E from A to C | New state -> Invalid | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [D, A, E, B, C] | Exploring action Move B from E to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A, E] | Exploring action Move B from E to C | New state -> Stack 1: [C, B], Stack 2: [D, A, E] | Taking action Move B from E to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A, E] | Plan so far [Move B from E to table] | Exploring action Move E from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Exploring action Move A from D to C | New state -> Invalid | Exploring action Move E from A to C | New state -> Stack 1: [B], Stack 2: [C, E], Stack 3: [D, A] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move E from A to B | New state -> Stack 1: [B, E], Stack 2: [C], Stack 3: [D, A] | Taking action Move E from A to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Plan so far [Move B from E to table | Move E from A to table] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Exploring action Move B from table to E | New state -> Stack 1: [C], Stack 2: [D, A], Stack 3: [E, B] | Exploring action Move D from table to E | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move B from E to table | Move E from A to table | Move A from D to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move B from table to E | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Taking action Move B from table to E | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Plan so far [Move B from E to table | Move E from A to table | Move A from D to table | Move B from table to E] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [E, B, D] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [D, C], Stack 3: [E, B] | Exploring action Move E from table to D | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [C, D], Stack 3: [E, B] | Taking action Move D from table to B | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [E, B, D] | Plan so far [Move B from E to table | Move E from A to table | Move A from D to table | Move B from table to E | Move D from table to B] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [E, B, D] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [E, B, D, C] | Exploring action Move B from E to C | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [E, B, D, C] | Plan so far [Move B from E to table | Move E from A to table | Move A from D to table | Move B from table to E | Move D from table to B | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 25
    },
    {
        "idx": 173,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "C",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nD is on the table. C is on D. A is on C. A is clear.\n\nThe goal is:\nA is on the table. A is clear.\nC is on the table. B is on C. B is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move A from C to table | Move C from D to table | Move B from table to C",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [D, C, A] | Plan so far [] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from C to B | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move C from D to A | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [D, C, A, B] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move A from C to table] | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from D to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move C from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from C to table | Move C from D to table] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move A from C to table | Move C from D to table | Move B from table to C] | Reached goal state!",
        "system2_states_v1": 13
    },
    {
        "idx": 364,
        "start": [
            [
                "table",
                "D",
                "B",
                "A",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nD is on the table. B is on D. A is on B. C is on A. C is clear.\n\nThe goal is:\nB is on the table. C is on B. A is on C. A is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move C from A to table | Move A from B to table | Move B from D to table | Move C from table to B | Move A from table to C",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [D, B, A, C] | Plan so far [] | Exploring action Move C from A to table | New state -> Stack 1: [C], Stack 2: [D, B, A] | Exploring action Move A from B to C | New state -> Invalid | Taking action Move C from A to table | Moved to state -> Stack 1: [C], Stack 2: [D, B, A] | Plan so far [Move C from A to table] | Exploring action Move B from D to table | New state -> Invalid | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move C from table to A | New state -> Stack 1: [D, B, A, C] | Exploring action Move A from B to C | New state -> Stack 1: [C, A], Stack 2: [D, B] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move C from A to table | Move A from B to table] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move B from D to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from A to table | Move A from B to table | Move B from D to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move C from A to table | Move A from B to table | Move B from D to table | Move C from table to B] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to C | New state -> Stack 1: [B, C, A], Stack 2: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move B from table to C | New state -> Invalid | Taking action Move A from table to C | Moved to state -> Stack 1: [B, C, A], Stack 2: [D] | Plan so far [Move C from A to table | Move A from B to table | Move B from D to table | Move C from table to B | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 20
    },
    {
        "idx": 234,
        "start": [
            [
                "table",
                "C",
                "A",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. A is on C. B is on A. B is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. B is on A. D is on B. D is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move B from A to table | Move A from C to table | Move B from table to A | Move D from table to B",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, A, B], Stack 2: [D] | Plan so far [] | Exploring action Move B from A to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [C, A, B, D] | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move C from table to B | New state -> Invalid | Taking action Move D from table to B | Moved to state -> Stack 1: [C, A, B, D] | Plan so far [Move D from table to B] | Exploring action Move D from B to table | New state -> Stack 1: [C, A, B], Stack 2: [D] | Exploring action Move A from C to D | New state -> Invalid | Exploring action Move B from A to table | New state -> Invalid | Taking action Move B from A to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move B from A to table] | Exploring action Move A from C to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from A to table | Move A from C to table] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move B from table to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move B from A to table | Move A from C to table | Move B from table to A] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move D from table to B | Moved to state -> Stack 1: [A, B, D], Stack 2: [C] | Plan so far [Move B from A to table | Move A from C to table | Move B from table to A | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 19
    },
    {
        "idx": 168,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "A",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nC is on the table. A is on C. D is on A. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. B is clear.\nD is on the table. C is on D. C is clear.\n",
        "system1_plan": "Move D from A to table | Move A from C to table | Move C from table to D",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [C, A, D] | Plan so far [] | Exploring action Move B from table to D | New state -> Stack 1: [C, A, D, B] | Exploring action Move D from A to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move A from C to D | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move D from A to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move D from A to table] | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from A to table | Move A from C to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move D from A to table | Move A from C to table | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 11
    },
    {
        "idx": 161,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "A",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nD is on the table. A is on D. C is on A. C is clear.\n\nThe goal is:\nB is on the table. A is on B. D is on A. D is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move C from A to table | Move A from D to B | Move D from table to A",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [D, A, C] | Plan so far [] | Exploring action Move C from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move B from table to C | New state -> Stack 1: [D, A, C, B] | Exploring action Move C from A to B | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move A from D to table | New state -> Invalid | Taking action Move C from A to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move C from A to table] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move A from D to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from A to table | Move A from D to B] | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Exploring action Move B from table to A | New state -> Invalid | Taking action Move D from table to A | Moved to state -> Stack 1: [B, A, D], Stack 2: [C] | Plan so far [Move C from A to table | Move A from D to B | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 13
    },
    {
        "idx": 140,
        "start": [
            [
                "table",
                "A",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "B",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. B is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. D is on A. D is clear.\nB is on the table. C is on B. C is clear.\n",
        "system1_plan": "Move B from A to table | Move C from table to B | Move D from table to A",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from A to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move A from table to B | New state -> Invalid | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from A to table] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move B from A to table | Move C from table to B] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Taking action Move D from table to A | Moved to state -> Stack 1: [A, D], Stack 2: [B, C] | Plan so far [Move B from A to table | Move C from table to B | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 13
    },
    {
        "idx": 242,
        "start": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "D",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "B",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. A is clear.\nD is on the table. C is on D. C is clear.\n\nThe goal is:\nA is on the table. A is clear.\nD is on the table. B is on D. C is on B. C is clear.\n",
        "system1_plan": "Move A from B to table | Move C from D to table | Move B from table to D | Move C from table to B",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A], Stack 2: [D, C] | Plan so far [] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move C from D to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move A from B to C | New state -> Stack 1: [B], Stack 2: [D, C, A] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move A from B to table] | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from D to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move D from table to C | New state -> Invalid | Taking action Move C from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from B to table | Move C from D to table] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move C from D to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move A from B to table | Move C from D to B] | Exploring action Move A from table to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from B to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move A from B to table | Move C from D to table | Move B from table to D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [D, B, C] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [D, B, C] | Plan so far [Move A from B to table | Move C from D to table | Move B from table to D | Move C from table to B] | Reached goal state!",
        "system2_states_v1": 21
    },
    {
        "idx": 354,
        "start": [
            [
                "table",
                "B",
                "A",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "B",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. D is on A. D is clear.\nC is on the table. C is clear.\n\nThe goal is:\nC is on the table. B is on C. D is on B. A is on D. A is clear.\n",
        "system1_plan": "Move D from A to table | Move A from B to table | Move B from table to C | Move D from table to B | Move A from table to D",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A, D], Stack 2: [C] | Plan so far [] | Exploring action Move A from B to D | New state -> Invalid | Exploring action Move C from table to D | New state -> Stack 1: [B, A, D, C] | Exploring action Move A from B to table | New state -> Invalid | Exploring action Move D from A to C | New state -> Stack 1: [B, A], Stack 2: [C, D] | Exploring action Move D from A to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move D from A to table | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move D from A to table] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from B to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from A to table | Move A from B to table] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move A from B to D | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move D from A to table | Move A from B to D] | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to C | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move D from table to B | New state -> Invalid | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move D from A to table | Move A from B to table | Move B from table to C] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [C, B, D] | Exploring action Move A from table to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Taking action Move B from table to C | Moved to state -> Stack 1: [C, B], Stack 2: [D, A] | Plan so far [Move D from A to table | Move A from B to D | Move B from table to C] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from C to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from D to B | New state -> Stack 1: [C, B, A], Stack 2: [D] | Exploring action Move C from table to B | New state -> Invalid | Taking action Move D from table to B | Moved to state -> Stack 1: [A], Stack 2: [C, B, D] | Plan so far [Move D from A to table | Move A from B to table | Move B from table to C | Move D from table to B] | Exploring action Move B from C to table | New state -> Invalid | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move A from table to D | New state -> Stack 1: [C, B, D, A] | Exploring action Move B from C to D | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move A from table to D | Moved to state -> Stack 1: [C, B, D, A] | Plan so far [Move D from A to table | Move A from B to table | Move B from table to C | Move D from table to B | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 31
    },
    {
        "idx": 53,
        "start": [
            [
                "table",
                "C",
                "B",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. A is on B. A is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nC is on the table. C is clear.\nD is on the table. B is on D. B is clear.\n",
        "system1_plan": "Move A from B to table | Move B from C to D",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B, A], Stack 2: [D] | Plan so far [] | Exploring action Move B from C to D | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [C, B, A, D] | Exploring action Move A from B to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move A from B to table] | Exploring action Move B from C to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to B | New state -> Invalid | Taking action Move B from C to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move A from B to table | Move B from C to D] | Reached goal state!",
        "system2_states_v1": 8
    },
    {
        "idx": 470,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "A",
                "D",
                "E"
            ]
        ],
        "goal": [
            [
                "table",
                "D"
            ],
            [
                "table",
                "E",
                "C",
                "A",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "E",
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "E",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nC is on the table. A is on C. D is on A. E is on D. E is clear.\n\nThe goal is:\nD is on the table. D is clear.\nE is on the table. C is on E. A is on C. B is on A. B is clear.\n",
        "system1_plan": "Move E from D to table | Move D from A to table | Move A from C to table | Move C from table to E | Move A from table to C | Move B from table to A",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [C, A, D, E] | Plan so far [] | Exploring action Move E from D to B | New state -> Stack 1: [B, E], Stack 2: [C, A, D] | Exploring action Move D from A to table | New state -> Invalid | Exploring action Move E from D to table | New state -> Stack 1: [B], Stack 2: [C, A, D], Stack 3: [E] | Exploring action Move B from table to E | New state -> Stack 1: [C, A, D, E, B] | Exploring action Move C from table to B | New state -> Invalid | Taking action Move E from D to table | Moved to state -> Stack 1: [B], Stack 2: [C, A, D], Stack 3: [E] | Plan so far [Move E from D to table] | Exploring action Move A from C to table | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Exploring action Move D from A to E | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [E, D] | Exploring action Move D from A to B | New state -> Stack 1: [B, D], Stack 2: [C, A], Stack 3: [E] | Taking action Move D from A to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Plan so far [Move E from D to table | Move D from A to table] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move A from C to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [C, A, B], Stack 2: [D], Stack 3: [E] | Taking action Move B from table to A | Moved to state -> Stack 1: [C, A, B], Stack 2: [D], Stack 3: [E] | Plan so far [Move E from D to table | Move D from A to table | Move B from table to A] | Exploring action Move A from C to B | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Exploring action Move E from table to D | New state -> Stack 1: [C, A, B], Stack 2: [D, E] | Exploring action Move A from C to E | New state -> Invalid | Exploring action Move E from table to B | New state -> Stack 1: [C, A, B, E], Stack 2: [D] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move E from D to table | Move D from A to table | Move A from C to table] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move C from table to E | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Taking action Move C from table to E | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Plan so far [Move E from D to table | Move D from A to table | Move A from C to table | Move C from table to E] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [D], Stack 3: [E, C, A] | Exploring action Move C from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move E from table to B | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D], Stack 3: [E, C] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [D], Stack 3: [E, C, A] | Plan so far [Move E from D to table | Move D from A to table | Move A from C to table | Move C from table to E | Move A from table to C] | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [E, C, A, D] | Exploring action Move C from E to A | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Exploring action Move B from table to A | New state -> Stack 1: [D], Stack 2: [E, C, A, B] | Taking action Move B from table to A | Moved to state -> Stack 1: [D], Stack 2: [E, C, A, B] | Plan so far [Move E from D to table | Move D from A to table | Move A from C to table | Move C from table to E | Move A from table to C | Move B from table to A] | Reached goal state!",
        "system2_states_v1": 30
    },
    {
        "idx": 445,
        "start": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "C",
                "B",
                "E"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "C",
                "E",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "E",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "E",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. D is clear.\nC is on the table. B is on C. E is on B. E is clear.\n\nThe goal is:\nA is on the table. A is clear.\nD is on the table. C is on D. E is on C. B is on E. B is clear.\n",
        "system1_plan": "Move D from A to table | Move E from B to table | Move B from C to table | Move C from table to D | Move E from table to C | Move B from table to E",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D], Stack 2: [C, B, E] | Plan so far [] | Exploring action Move E from B to table | New state -> Stack 1: [A, D], Stack 2: [C, B], Stack 3: [E] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [C, B, E], Stack 3: [D] | Exploring action Move D from A to E | New state -> Stack 1: [A], Stack 2: [C, B, E, D] | Exploring action Move B from C to table | New state -> Invalid | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [C, B, E], Stack 3: [D] | Plan so far [Move D from A to table] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from C to A | New state -> Invalid | Exploring action Move E from B to A | New state -> Stack 1: [A, E], Stack 2: [C, B], Stack 3: [D] | Exploring action Move E from B to D | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D, E] | Exploring action Move E from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Taking action Move E from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Plan so far [Move D from A to table | Move E from B to table] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from C to E | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move B from C to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move D from A to table | Move E from B to table | Move B from C to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move B from table to E | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Taking action Move B from C to E | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Plan so far [Move D from A to table | Move E from B to table | Move B from C to E] | Exploring action Move B from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move E from table to C | New state -> Invalid | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [D, C], Stack 3: [E, B] | Exploring action Move B from E to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Exploring action Move E from table to D | New state -> Invalid | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Plan so far [Move D from A to table | Move E from B to table | Move B from C to table | Move C from table to D] | Exploring action Move B from table to E | New state -> Stack 1: [A], Stack 2: [D, C], Stack 3: [E, B] | Exploring action Move E from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C, E] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move D from table to E | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [D, C], Stack 3: [E, B] | Plan so far [Move D from A to table | Move E from B to table | Move B from C to E | Move C from table to D] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Exploring action Move B from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move B from E to C | New state -> Stack 1: [A], Stack 2: [D, C, B], Stack 3: [E] | Exploring action Move D from table to C | New state -> Invalid | Taking action Move E from table to C | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C, E] | Plan so far [Move D from A to table | Move E from B to table | Move B from C to table | Move C from table to D | Move E from table to C] | Exploring action Move E from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move B from table to E | New state -> Stack 1: [A], Stack 2: [D, C, E, B] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C, E] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move B from table to E | Moved to state -> Stack 1: [A], Stack 2: [D, C, E, B] | Plan so far [Move D from A to table | Move E from B to table | Move B from C to table | Move C from table to D | Move E from table to C | Move B from table to E] | Reached goal state!",
        "system2_states_v1": 35
    },
    {
        "idx": 273,
        "start": [
            [
                "table",
                "C",
                "B",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. D is on B. A is on D. A is clear.\n\nThe goal is:\nA is on the table. C is on A. C is clear.\nB is on the table. B is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move A from D to table | Move D from B to table | Move B from C to table | Move C from table to A",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B, D, A] | Plan so far [] | Exploring action Move D from B to A | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [C, B, D] | Exploring action Move D from B to table | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [C, B, D] | Plan so far [Move A from D to table] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [C, B, D, A] | Exploring action Move B from C to A | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move A from D to table | Move D from B to table] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [C, B, A], Stack 2: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from D to table | Move D from B to table | Move B from C to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move C from table to A | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move A from D to table | Move D from B to table | Move B from C to table | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 16
    },
    {
        "idx": 447,
        "start": [
            [
                "table",
                "A",
                "E",
                "B",
                "D",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C",
                "A"
            ],
            [
                "table",
                "D",
                "E"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "E",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "E": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. E is on A. B is on E. D is on B. C is on D. C is clear.\n\nThe goal is:\nB is on the table. C is on B. A is on C. A is clear.\nD is on the table. E is on D. E is clear.\n",
        "system1_plan": "Move C from D to table | Move D from B to table | Move B from E to table | Move E from A to D | Move C from table to B | Move A from table to C",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, E, B, D, C] | Plan so far [] | Exploring action Move D from B to C | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A, E, B, D], Stack 2: [C] | Exploring action Move A from table to C | New state -> Invalid | Taking action Move C from D to table | Moved to state -> Stack 1: [A, E, B, D], Stack 2: [C] | Plan so far [Move C from D to table] | Exploring action Move E from A to table | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A, E, B], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to D | New state -> Stack 1: [A, E, B, D, C] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from B to C | New state -> Stack 1: [A, E, B], Stack 2: [C, D] | Taking action Move D from B to table | Moved to state -> Stack 1: [A, E, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from D to table | Move D from B to table] | Exploring action Move B from E to table | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from E to D | New state -> Stack 1: [A, E], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from E to C | New state -> Stack 1: [A, E], Stack 2: [C, B], Stack 3: [D] | Taking action Move B from E to table | Moved to state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from D to table | Move D from B to table | Move B from E to table] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move E from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move C from table to B | New state -> Stack 1: [A, E], Stack 2: [B, C], Stack 3: [D] | Exploring action Move E from A to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D, E] | Exploring action Move A from table to E | New state -> Invalid | Taking action Move E from A to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D, E] | Plan so far [Move C from D to table | Move D from B to table | Move B from E to table | Move E from A to D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D, E] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D, E] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D, E] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D, E] | Plan so far [Move C from D to table | Move D from B to table | Move B from E to table | Move E from A to D | Move C from table to B] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D, E] | Exploring action Move A from table to C | New state -> Stack 1: [B, C, A], Stack 2: [D, E] | Exploring action Move E from D to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Exploring action Move B from table to E | New state -> Invalid | Taking action Move A from table to C | Moved to state -> Stack 1: [B, C, A], Stack 2: [D, E] | Plan so far [Move C from D to table | Move D from B to table | Move B from E to table | Move E from A to D | Move C from table to B | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 25
    },
    {
        "idx": 170,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "A",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. D is on C. D is clear.\n\nThe goal is:\nB is on the table. B is clear.\nD is on the table. A is on D. C is on A. C is clear.\n",
        "system1_plan": "Move D from C to table | Move A from table to D | Move C from table to A",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from C to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move A from table to D | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move D from C to table | Move A from table to D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move C from table to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from table to A | Moved to state -> Stack 1: [B], Stack 2: [D, A, C] | Plan so far [Move D from C to table | Move A from table to D | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 11
    },
    {
        "idx": 137,
        "start": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "C",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. D is clear.\nC is on the table. B is on C. B is clear.\n\nThe goal is:\nB is on the table. B is clear.\nC is on the table. C is clear.\nD is on the table. A is on D. A is clear.\n",
        "system1_plan": "Move B from C to table | Move D from A to table | Move A from table to D",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D], Stack 2: [C, B] | Plan so far [] | Exploring action Move B from C to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move B from C to D | New state -> Stack 1: [A, D, B], Stack 2: [C] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move B from C to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move B from C to table] | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from C to table | Move D from A to table] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move A from table to D | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move B from C to table | Move D from A to table | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 454,
        "start": [
            [
                "table",
                "A",
                "C",
                "B",
                "D"
            ],
            [
                "table",
                "E"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "D"
            ],
            [
                "table",
                "E",
                "A",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "E",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. B is on C. D is on B. D is clear.\nE is on the table. E is clear.\n\nThe goal is:\nB is on the table. D is on B. D is clear.\nE is on the table. A is on E. C is on A. C is clear.\n",
        "system1_plan": "Move D from B to table | Move B from C to table | Move D from table to B | Move C from A to table | Move A from table to E | Move C from table to A",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, B, D], Stack 2: [E] | Plan so far [] | Exploring action Move D from B to E | New state -> Stack 1: [A, C, B], Stack 2: [E, D] | Exploring action Move D from B to table | New state -> Stack 1: [A, C, B], Stack 2: [D], Stack 3: [E] | Exploring action Move E from table to D | New state -> Stack 1: [A, C, B, D, E] | Exploring action Move B from C to table | New state -> Invalid | Exploring action Move B from C to D | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A, C, B], Stack 2: [D], Stack 3: [E] | Plan so far [Move D from B to table] | Exploring action Move B from C to D | New state -> Stack 1: [A, C], Stack 2: [D, B], Stack 3: [E] | Exploring action Move B from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from C to E | New state -> Stack 1: [A, C], Stack 2: [D], Stack 3: [E, B] | Taking action Move B from C to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Plan so far [Move D from B to table | Move B from C to table] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move D from table to B | New state -> Stack 1: [A, C], Stack 2: [B, D], Stack 3: [E] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move B from table to E | New state -> Stack 1: [A, C], Stack 2: [D], Stack 3: [E, B] | Taking action Move D from table to B | Moved to state -> Stack 1: [A, C], Stack 2: [B, D], Stack 3: [E] | Plan so far [Move D from B to table | Move B from C to table | Move D from table to B] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move E from table to C | New state -> Stack 1: [A, C, E], Stack 2: [B, D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move C from A to E | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [E, C] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Plan so far [Move D from B to table | Move B from C to table | Move D from table to B | Move C from A to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D], Stack 3: [E] | Exploring action Move A from table to C | New state -> Stack 1: [B, D], Stack 2: [C, A], Stack 3: [E] | Exploring action Move A from table to E | New state -> Stack 1: [B, D], Stack 2: [C], Stack 3: [E, A] | Exploring action Move B from table to E | New state -> Invalid | Taking action Move A from table to E | Moved to state -> Stack 1: [B, D], Stack 2: [C], Stack 3: [E, A] | Plan so far [Move D from B to table | Move B from C to table | Move D from table to B | Move C from A to table | Move A from table to E] | Exploring action Move A from E to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [B, D], Stack 2: [E, A, C] | Exploring action Move D from B to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D], Stack 4: [E, A] | Taking action Move C from table to A | Moved to state -> Stack 1: [B, D], Stack 2: [E, A, C] | Plan so far [Move D from B to table | Move B from C to table | Move D from table to B | Move C from A to table | Move A from table to E | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 27
    },
    {
        "idx": 44,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "C",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. D is on C. D is clear.\n\nThe goal is:\nA is on the table. D is on A. D is clear.\nC is on the table. B is on C. B is clear.\n",
        "system1_plan": "Move D from C to A | Move B from table to C",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move D from C to A | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move D from C to A] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move B from table to D | New state -> Stack 1: [A, D, B], Stack 2: [C] | Exploring action Move B from table to C | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move A from table to D | New state -> Invalid | Taking action Move B from table to C | Moved to state -> Stack 1: [A, D], Stack 2: [C, B] | Plan so far [Move D from C to A | Move B from table to C] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 436,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "A",
                "E",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "C"
            ],
            [
                "table",
                "E",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "E",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nD is on the table. A is on D. E is on A. C is on E. C is clear.\n\nThe goal is:\nA is on the table. B is on A. C is on B. C is clear.\nE is on the table. D is on E. D is clear.\n",
        "system1_plan": "Move C from E to table | Move E from A to table | Move A from D to table | Move D from table to E | Move B from table to A | Move C from table to B",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [D, A, E, C] | Plan so far [] | Exploring action Move C from E to B | New state -> Stack 1: [B, C], Stack 2: [D, A, E] | Exploring action Move C from E to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A, E] | Exploring action Move B from table to C | New state -> Stack 1: [D, A, E, C, B] | Exploring action Move E from A to C | New state -> Invalid | Exploring action Move A from D to table | New state -> Invalid | Taking action Move C from E to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A, E] | Plan so far [Move C from E to table] | Exploring action Move E from A to C | New state -> Stack 1: [B], Stack 2: [C, E], Stack 3: [D, A] | Exploring action Move A from D to E | New state -> Invalid | Exploring action Move E from A to B | New state -> Stack 1: [B, E], Stack 2: [C], Stack 3: [D, A] | Exploring action Move E from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Exploring action Move D from table to E | New state -> Invalid | Taking action Move C from E to B | Moved to state -> Stack 1: [B, C], Stack 2: [D, A, E] | Plan so far [Move C from E to B] | Exploring action Move B from table to E | New state -> Invalid | Exploring action Move C from B to E | New state -> Stack 1: [B], Stack 2: [D, A, E, C] | Exploring action Move C from B to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A, E] | Exploring action Move A from D to E | New state -> Invalid | Exploring action Move E from A to table | New state -> Stack 1: [B, C], Stack 2: [D, A], Stack 3: [E] | Taking action Move E from A to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Plan so far [Move C from E to table | Move E from A to table] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move E from A to table | Moved to state -> Stack 1: [B, C], Stack 2: [D, A], Stack 3: [E] | Plan so far [Move C from E to B | Move E from A to table] | Exploring action Move D from table to E | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Exploring action Move A from D to E | New state -> Stack 1: [B, C], Stack 2: [D], Stack 3: [E, A] | Exploring action Move C from B to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move C from E to table | Move E from A to table | Move A from D to table] | Exploring action Move D from table to E | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Taking action Move D from table to E | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Plan so far [Move C from E to table | Move E from A to table | Move A from D to table | Move D from table to E] | Exploring action Move E from table to A | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [E, D] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [E, D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [E, D] | Taking action Move B from table to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [E, D] | Plan so far [Move C from E to table | Move E from A to table | Move A from D to table | Move D from table to E | Move B from table to A] | Exploring action Move C from table to B | New state -> Stack 1: [A, B, C], Stack 2: [E, D] | Exploring action Move D from E to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move E from table to B | New state -> Invalid | Exploring action Move E from table to C | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Taking action Move C from table to B | Moved to state -> Stack 1: [A, B, C], Stack 2: [E, D] | Plan so far [Move C from E to table | Move E from A to table | Move A from D to table | Move D from table to E | Move B from table to A | Move C from table to B] | Reached goal state!",
        "system2_states_v1": 35
    },
    {
        "idx": 231,
        "start": [
            [
                "table",
                "A",
                "B"
            ],
            [
                "table",
                "D",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "D",
                "B"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. B is clear.\nD is on the table. C is on D. C is clear.\n\nThe goal is:\nA is on the table. D is on A. B is on D. B is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move C from D to table | Move B from A to table | Move D from table to A | Move B from table to D",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B], Stack 2: [D, C] | Plan so far [] | Exploring action Move B from A to C | New state -> Stack 1: [A], Stack 2: [D, C, B] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move C from D to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from D to table] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from D to table | Move B from A to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move B from A to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move C from D to table | Move B from A to D] | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to B | New state -> Stack 1: [C], Stack 2: [D, B, A] | Exploring action Move D from table to B | New state -> Invalid | Taking action Move D from table to A | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move C from D to table | Move B from A to table | Move D from table to A] | Exploring action Move C from table to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move B from table to D | New state -> Stack 1: [A, D, B], Stack 2: [C] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from table to D | Moved to state -> Stack 1: [A, D, B], Stack 2: [C] | Plan so far [Move C from D to table | Move B from A to table | Move D from table to A | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 21
    },
    {
        "idx": 154,
        "start": [
            [
                "table",
                "A",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. B is clear.\nC is on the table. D is on C. D is clear.\n\nThe goal is:\nA is on the table. C is on A. C is clear.\nB is on the table. D is on B. D is clear.\n",
        "system1_plan": "Move B from A to table | Move D from C to B | Move C from table to A",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B], Stack 2: [C, D] | Plan so far [] | Exploring action Move D from C to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move B from A to table] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to B | New state -> Invalid | Taking action Move D from C to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move B from A to table | Move D from C to B] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move A from table to D | New state -> Stack 1: [B, D, A], Stack 2: [C] | Taking action Move C from table to A | Moved to state -> Stack 1: [A, C], Stack 2: [B, D] | Plan so far [Move B from A to table | Move D from C to B | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 14
    },
    {
        "idx": 139,
        "start": [
            [
                "table",
                "C",
                "B"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. B is clear.\nD is on the table. A is on D. A is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. D is on C. D is clear.\n",
        "system1_plan": "Move A from D to table | Move B from C to table | Move D from table to C",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B], Stack 2: [D, A] | Plan so far [] | Exploring action Move A from D to B | New state -> Stack 1: [C, B, A], Stack 2: [D] | Exploring action Move B from C to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move A from D to table] | Exploring action Move B from C to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [C, B, D] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from D to table | Move B from C to table] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move A from D to table | Move B from C to table | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 11
    },
    {
        "idx": 330,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C",
                "B",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nC is on the table. B is on C. D is on B. D is clear.\n\nThe goal is:\nB is on the table. C is on B. D is on C. A is on D. A is clear.\n",
        "system1_plan": "Move D from B to table | Move B from C to table | Move C from table to B | Move D from table to C | Move A from table to D",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [C, B, D] | Plan so far [] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from C to D | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [C, B, D, A] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move D from B to table] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from B to table | Move B from C to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move D from B to table | Move B from C to table | Move C from table to B] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B, C, D] | Exploring action Move A from table to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B, C, D] | Plan so far [Move D from B to table | Move B from C to table | Move C from table to B | Move D from table to C] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from B to table | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [B, C, D, A] | Taking action Move A from table to D | Moved to state -> Stack 1: [B, C, D, A] | Plan so far [Move D from B to table | Move B from C to table | Move C from table to B | Move D from table to C | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 21
    },
    {
        "idx": 347,
        "start": [
            [
                "table",
                "C",
                "B",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "C",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. D is on B. A is on D. A is clear.\n\nThe goal is:\nA is on the table. A is clear.\nD is on the table. C is on D. B is on C. B is clear.\n",
        "system1_plan": "Move A from D to table | Move D from B to table | Move B from C to table | Move C from table to D | Move B from table to C",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B, D, A] | Plan so far [] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [C, B, D] | Exploring action Move B from C to A | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [C, B, D] | Plan so far [Move A from D to table] | Exploring action Move A from table to D | New state -> Stack 1: [C, B, D, A] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move B from C to D | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move C from table to D | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move A from D to table | Move D from B to table] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from C to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from D to table | Move D from B to table | Move B from C to table] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move A from D to table | Move D from B to table | Move B from C to table | Move C from table to D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [D, C, B] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move D from table to C | New state -> Invalid | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [D, C, B] | Plan so far [Move A from D to table | Move D from B to table | Move B from C to table | Move C from table to D | Move B from table to C] | Reached goal state!",
        "system2_states_v1": 19
    },
    {
        "idx": 235,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "C",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "C",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nD is on the table. C is on D. B is on C. B is clear.\n\nThe goal is:\nA is on the table. D is on A. D is clear.\nC is on the table. B is on C. B is clear.\n",
        "system1_plan": "Move B from C to table | Move C from D to table | Move B from table to C | Move D from table to A",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [D, C, B] | Plan so far [] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [D, C, B, A] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move B from C to table] | Exploring action Move C from D to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to C | New state -> Invalid | Taking action Move C from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from C to table | Move C from D to table] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move B from C to table | Move C from D to table | Move B from table to C] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move C from table to B | New state -> Invalid | Taking action Move D from table to A | Moved to state -> Stack 1: [A, D], Stack 2: [C, B] | Plan so far [Move B from C to table | Move C from D to table | Move B from table to C | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 16
    },
    {
        "idx": 440,
        "start": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "E",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "D",
                "A",
                "B",
                "C",
                "E"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "E",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "E": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. C is clear.\nB is on the table. B is clear.\nE is on the table. D is on E. D is clear.\n\nThe goal is:\nD is on the table. A is on D. B is on A. C is on B. E is on C. E is clear.\n",
        "system1_plan": "Move C from A to table | Move D from E to table | Move A from table to D | Move B from table to A | Move C from table to B | Move E from table to C",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [E, D] | Plan so far [] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from E to B | New state -> Stack 1: [A, C], Stack 2: [B, D], Stack 3: [E] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Exploring action Move E from table to C | New state -> Invalid | Exploring action Move D from E to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Plan so far [Move C from A to table] | Exploring action Move D from E to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D], Stack 4: [E] | Exploring action Move D from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move D from E to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move E from table to D | New state -> Invalid | Taking action Move D from E to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Plan so far [Move D from E to table] | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move C from A to E | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move D from E to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move C from A to table | Move D from E to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Exploring action Move E from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move D from E to table | Move C from A to table] | Taking action Move A from table to D | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Plan so far [Move C from A to table | Move D from E to table | Move A from table to D] | Exploring action Move B from table to E | New state -> Stack 1: [C], Stack 2: [D, A], Stack 3: [E, B] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move E from table to C | New state -> Stack 1: [B], Stack 2: [C, E], Stack 3: [D, A] | Exploring action Move B from table to A | New state -> Stack 1: [C], Stack 2: [D, A, B], Stack 3: [E] | Taking action Move B from table to A | Moved to state -> Stack 1: [C], Stack 2: [D, A, B], Stack 3: [E] | Plan so far [Move C from A to table | Move D from E to table | Move A from table to D | Move B from table to A] | Exploring action Move E from table to B | New state -> Stack 1: [C], Stack 2: [D, A, B, E] | Exploring action Move E from table to C | New state -> Stack 1: [C, E], Stack 2: [D, A, B] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [D, A, B, C], Stack 2: [E] | Taking action Move C from table to B | Moved to state -> Stack 1: [D, A, B, C], Stack 2: [E] | Plan so far [Move C from A to table | Move D from E to table | Move A from table to D | Move B from table to A | Move C from table to B] | Exploring action Move A from D to table | New state -> Invalid | Exploring action Move C from B to E | New state -> Stack 1: [D, A, B], Stack 2: [E, C] | Exploring action Move E from table to C | New state -> Stack 1: [D, A, B, C, E] | Exploring action Move C from B to table | New state -> Stack 1: [C], Stack 2: [D, A, B], Stack 3: [E] | Exploring action Move B from A to table | New state -> Invalid | Taking action Move E from table to C | Moved to state -> Stack 1: [D, A, B, C, E] | Plan so far [Move C from A to table | Move D from E to table | Move A from table to D | Move B from table to A | Move C from table to B | Move E from table to C] | Reached goal state!",
        "system2_states_v1": 30
    },
    {
        "idx": 251,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "C",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "B",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nD is on the table. C is on D. A is on C. A is clear.\n\nThe goal is:\nC is on the table. B is on C. A is on B. A is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move A from C to table | Move C from D to table | Move B from table to C | Move A from table to B",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [D, C, A] | Plan so far [] | Exploring action Move B from table to A | New state -> Stack 1: [D, C, A, B] | Exploring action Move A from C to B | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move D from table to B | New state -> Invalid | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move A from C to table] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from D to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Taking action Move C from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from C to table | Move C from D to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move A from C to table | Move C from D to table | Move B from table to C] | Exploring action Move A from table to B | New state -> Stack 1: [C, B, A], Stack 2: [D] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move C from table to B | New state -> Invalid | Taking action Move A from table to B | Moved to state -> Stack 1: [C, B, A], Stack 2: [D] | Plan so far [Move A from C to table | Move C from D to table | Move B from table to C | Move A from table to B] | Reached goal state!",
        "system2_states_v1": 17
    },
    {
        "idx": 49,
        "start": [
            [
                "table",
                "C",
                "A"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "B",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. A is on C. A is clear.\nD is on the table. B is on D. B is clear.\n\nThe goal is:\nA is on the table. A is clear.\nD is on the table. B is on D. C is on B. C is clear.\n",
        "system1_plan": "Move A from C to table | Move C from table to B",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, A], Stack 2: [D, B] | Plan so far [] | Exploring action Move B from D to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move A from C to B | New state -> Stack 1: [C], Stack 2: [D, B, A] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move A from C to table] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [D, B, C] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [D, B, C] | Plan so far [Move A from C to table | Move C from table to B] | Reached goal state!",
        "system2_states_v1": 10
    },
    {
        "idx": 424,
        "start": [
            [
                "table",
                "B",
                "A",
                "E",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "B",
                "C",
                "E"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "E",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "E",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "E": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. E is on A. C is on E. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nD is on the table. B is on D. C is on B. E is on C. E is clear.\n",
        "system1_plan": "Move C from E to table | Move E from A to table | Move A from B to table | Move B from table to D | Move C from table to B | Move E from table to C",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A, E, C], Stack 2: [D] | Plan so far [] | Exploring action Move E from A to table | New state -> Invalid | Exploring action Move C from E to D | New state -> Stack 1: [B, A, E], Stack 2: [D, C] | Exploring action Move D from table to C | New state -> Stack 1: [B, A, E, C, D] | Exploring action Move C from E to table | New state -> Stack 1: [B, A, E], Stack 2: [C], Stack 3: [D] | Taking action Move C from E to table | Moved to state -> Stack 1: [B, A, E], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from E to table] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move E from A to C | New state -> Stack 1: [B, A], Stack 2: [C, E], Stack 3: [D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move E from A to D | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D, E] | Exploring action Move E from A to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Taking action Move E from A to table | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Plan so far [Move C from E to table | Move E from A to table] | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move E from table to C | New state -> Stack 1: [B, A], Stack 2: [C, E], Stack 3: [D] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move C from E to table | Move E from A to table | Move A from B to table] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Exploring action Move E from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Plan so far [Move C from E to table | Move E from A to table | Move A from B to table | Move B from table to D] | Exploring action Move E from table to C | New state -> Stack 1: [A], Stack 2: [C, E], Stack 3: [D, B] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [D, B, C], Stack 3: [E] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move E from table to B | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B, E] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [D, B, C], Stack 3: [E] | Plan so far [Move C from E to table | Move E from A to table | Move A from B to table | Move B from table to D | Move C from table to B] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move E from table to C | New state -> Stack 1: [A], Stack 2: [D, B, C, E] | Exploring action Move E from table to A | New state -> Stack 1: [A, E], Stack 2: [D, B, C] | Exploring action Move B from D to C | New state -> Invalid | Taking action Move E from table to C | Moved to state -> Stack 1: [A], Stack 2: [D, B, C, E] | Plan so far [Move C from E to table | Move E from A to table | Move A from B to table | Move B from table to D | Move C from table to B | Move E from table to C] | Reached goal state!",
        "system2_states_v1": 25
    },
    {
        "idx": 230,
        "start": [
            [
                "table",
                "A",
                "D",
                "C",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. C is on D. B is on C. B is clear.\n\nThe goal is:\nA is on the table. C is on A. C is clear.\nB is on the table. D is on B. D is clear.\n",
        "system1_plan": "Move B from C to table | Move C from D to table | Move D from A to B | Move C from table to A",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D, C, B] | Plan so far [] | Exploring action Move C from D to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A, D, C], Stack 2: [B] | Exploring action Move D from A to B | New state -> Invalid | Taking action Move B from C to table | Moved to state -> Stack 1: [A, D, C], Stack 2: [B] | Plan so far [Move B from C to table] | Exploring action Move B from table to C | New state -> Stack 1: [A, D, C, B] | Exploring action Move C from D to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to C | New state -> Invalid | Taking action Move C from D to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move B from C to table | Move C from D to table] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to C | New state -> Invalid | Taking action Move D from A to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move B from C to table | Move C from D to table | Move D from A to B] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [B, D, A], Stack 2: [C] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move A from table to C | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move B from table to D | New state -> Invalid | Taking action Move C from table to A | Moved to state -> Stack 1: [A, C], Stack 2: [B, D] | Plan so far [Move B from C to table | Move C from D to table | Move D from A to B | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 272,
        "start": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "C",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "D",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. D is clear.\nC is on the table. B is on C. B is clear.\n\nThe goal is:\nB is on the table. D is on B. C is on D. A is on C. A is clear.\n",
        "system1_plan": "Move B from C to table | Move D from A to B | Move C from table to D | Move A from table to C",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D], Stack 2: [C, B] | Plan so far [] | Exploring action Move B from C to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from C to D | New state -> Stack 1: [A, D, B], Stack 2: [C] | Exploring action Move C from table to B | New state -> Invalid | Taking action Move B from C to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move B from C to table] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move D from A to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move B from C to table | Move D from A to B] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B, D, C] | Exploring action Move A from table to C | New state -> Stack 1: [B, D], Stack 2: [C, A] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B, D, C] | Plan so far [Move B from C to table | Move D from A to B | Move C from table to D] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to C | New state -> Stack 1: [B, D, C, A] | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B, D, C, A] | Plan so far [Move B from C to table | Move D from A to B | Move C from table to D | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 433,
        "start": [
            [
                "table",
                "A",
                "E",
                "C"
            ],
            [
                "table",
                "B",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "A",
                "B"
            ],
            [
                "table",
                "E",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. E is on A. C is on E. C is clear.\nB is on the table. D is on B. D is clear.\n\nThe goal is:\nC is on the table. A is on C. B is on A. B is clear.\nE is on the table. D is on E. D is clear.\n",
        "system1_plan": "Move C from E to table | Move D from B to table | Move E from A to table | Move D from table to E | Move A from table to C | Move B from table to A",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, E, C], Stack 2: [B, D] | Plan so far [] | Exploring action Move C from E to table | New state -> Stack 1: [A, E], Stack 2: [B, D], Stack 3: [C] | Exploring action Move C from E to D | New state -> Stack 1: [A, E], Stack 2: [B, D, C] | Exploring action Move D from B to table | New state -> Stack 1: [A, E, C], Stack 2: [B], Stack 3: [D] | Exploring action Move E from A to table | New state -> Invalid | Exploring action Move B from table to D | New state -> Invalid | Taking action Move C from E to table | Moved to state -> Stack 1: [A, E], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move C from E to table] | Exploring action Move E from A to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move D from B to table | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from B to E | New state -> Stack 1: [A, E, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to E | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A, E, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from B to table] | Exploring action Move C from E to D | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [D, C] | Exploring action Move E from A to C | New state -> Invalid | Exploring action Move C from E to B | New state -> Stack 1: [A, E], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from E to table | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from B to table | Moved to state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from E to table | Move D from B to table] | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move E from A to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Exploring action Move E from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move E from A to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D, E] | Taking action Move C from E to table | Moved to state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from B to table | Move C from E to table] | Taking action Move E from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move C from E to table | Move D from B to table | Move E from A to table] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move D from table to E | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Taking action Move D from table to E | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Plan so far [Move C from E to table | Move D from B to table | Move E from A to table | Move D from table to E] | Exploring action Move E from table to B | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [E, D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [E, D] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [E, D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [E, D] | Plan so far [Move C from E to table | Move D from B to table | Move E from A to table | Move D from table to E | Move A from table to C] | Exploring action Move B from table to A | New state -> Stack 1: [C, A, B], Stack 2: [E, D] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move D from E to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Taking action Move B from table to A | Moved to state -> Stack 1: [C, A, B], Stack 2: [E, D] | Plan so far [Move C from E to table | Move D from B to table | Move E from A to table | Move D from table to E | Move A from table to C | Move B from table to A] | Reached goal state!",
        "system2_states_v1": 28
    },
    {
        "idx": 449,
        "start": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "B",
                "E",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "D"
            ],
            [
                "table",
                "E",
                "A",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "E",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. D is clear.\nB is on the table. E is on B. C is on E. C is clear.\n\nThe goal is:\nB is on the table. D is on B. D is clear.\nE is on the table. A is on E. C is on A. C is clear.\n",
        "system1_plan": "Move C from E to table | Move D from A to table | Move E from B to table | Move D from table to B | Move A from table to E | Move C from table to A",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D], Stack 2: [B, E, C] | Plan so far [] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B, E, C], Stack 3: [D] | Exploring action Move C from E to table | New state -> Stack 1: [A, D], Stack 2: [B, E], Stack 3: [C] | Exploring action Move C from E to D | New state -> Stack 1: [A, D, C], Stack 2: [B, E] | Taking action Move C from E to table | Moved to state -> Stack 1: [A, D], Stack 2: [B, E], Stack 3: [C] | Plan so far [Move C from E to table] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to E | New state -> Invalid | Exploring action Move E from B to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C], Stack 4: [E] | Exploring action Move E from B to C | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C, E] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B, E, C], Stack 3: [D] | Plan so far [Move D from A to table] | Exploring action Move C from E to A | New state -> Stack 1: [A, C], Stack 2: [B, E], Stack 3: [D] | Exploring action Move E from B to A | New state -> Invalid | Exploring action Move E from B to C | New state -> Invalid | Exploring action Move C from E to D | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [D, C] | Exploring action Move C from E to table | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from E to table | Move D from A to table] | Exploring action Move E from B to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Exploring action Move E from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move E from B to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D, E] | Taking action Move C from E to table | Moved to state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from A to table | Move C from E to table] | Taking action Move C from E to A | Moved to state -> Stack 1: [A, C], Stack 2: [B, E], Stack 3: [D] | Plan so far [Move D from A to table | Move C from E to A] | Exploring action Move E from B to D | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D, E] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move E from B to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Exploring action Move B from table to E | New state -> Invalid | Taking action Move E from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move C from E to table | Move D from A to table | Move E from B to table] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move A from table to E | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D], Stack 4: [E, A] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Taking action Move D from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Plan so far [Move C from E to table | Move D from A to table | Move E from B to table | Move D from table to B] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D], Stack 3: [E] | Exploring action Move A from table to E | New state -> Stack 1: [B, D], Stack 2: [C], Stack 3: [E, A] | Exploring action Move B from table to E | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [B, D], Stack 2: [C, A], Stack 3: [E] | Taking action Move A from table to E | Moved to state -> Stack 1: [B, D], Stack 2: [C], Stack 3: [E, A] | Plan so far [Move C from E to table | Move D from A to table | Move E from B to table | Move D from table to B | Move A from table to E] | Exploring action Move D from B to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D], Stack 4: [E, A] | Exploring action Move E from table to D | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [B, D], Stack 2: [E, A, C] | Exploring action Move A from E to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Taking action Move C from table to A | Moved to state -> Stack 1: [B, D], Stack 2: [E, A, C] | Plan so far [Move C from E to table | Move D from A to table | Move E from B to table | Move D from table to B | Move A from table to E | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 33
    },
    {
        "idx": 25,
        "start": [
            [
                "table",
                "A",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. B is clear.\nC is on the table. D is on C. D is clear.\n\nThe goal is:\nA is on the table. B is on A. C is on B. C is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move D from C to table | Move C from table to B",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B], Stack 2: [C, D] | Plan so far [] | Exploring action Move D from C to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from C to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move C from table to D | New state -> Invalid | Taking action Move D from C to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move D from C to table] | Exploring action Move C from table to B | New state -> Stack 1: [A, B, C], Stack 2: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from table to B | Moved to state -> Stack 1: [A, B, C], Stack 2: [D] | Plan so far [Move D from C to table | Move C from table to B] | Reached goal state!",
        "system2_states_v1": 10
    },
    {
        "idx": 255,
        "start": [
            [
                "table",
                "A",
                "C",
                "D"
            ],
            [
                "table",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "B"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. D is on C. D is clear.\nB is on the table. B is clear.\n\nThe goal is:\nC is on the table. B is on C. B is clear.\nD is on the table. A is on D. A is clear.\n",
        "system1_plan": "Move D from C to table | Move C from A to table | Move A from table to D | Move B from table to C",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [] | Exploring action Move D from C to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move B from table to D | New state -> Stack 1: [A, C, D, B] | Exploring action Move C from A to table | New state -> Invalid | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Taking action Move D from C to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from C to table] | Exploring action Move B from table to C | New state -> Stack 1: [A, C, B], Stack 2: [D] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move A from table to B | New state -> Invalid | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from C to table | Move C from A to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move A from table to D | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move D from C to table | Move C from A to table | Move A from table to D] | Exploring action Move C from table to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Exploring action Move C from table to B | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [C, B], Stack 2: [D, A] | Taking action Move B from table to C | Moved to state -> Stack 1: [C, B], Stack 2: [D, A] | Plan so far [Move D from C to table | Move C from A to table | Move A from table to D | Move B from table to C] | Reached goal state!",
        "system2_states_v1": 17
    },
    {
        "idx": 151,
        "start": [
            [
                "table",
                "C",
                "B",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. A is on B. A is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. B is on A. D is on B. D is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move A from B to table | Move B from C to A | Move D from table to B",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B, A], Stack 2: [D] | Plan so far [] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [C, B, A, D] | Exploring action Move A from B to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move C from table to D | New state -> Invalid | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move A from B to table] | Exploring action Move B from C to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move B from C to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move A from B to table | Move B from C to A] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to C | New state -> Invalid | Taking action Move D from table to B | Moved to state -> Stack 1: [A, B, D], Stack 2: [C] | Plan so far [Move A from B to table | Move B from C to A | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 13
    },
    {
        "idx": 458,
        "start": [
            [
                "table",
                "D",
                "C",
                "A"
            ],
            [
                "table",
                "E",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "B",
                "A",
                "D"
            ],
            [
                "table",
                "E"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nD is on the table. C is on D. A is on C. A is clear.\nE is on the table. B is on E. B is clear.\n\nThe goal is:\nC is on the table. B is on C. A is on B. D is on A. D is clear.\nE is on the table. E is clear.\n",
        "system1_plan": "Move B from E to table | Move A from C to table | Move C from D to table | Move B from table to C | Move A from table to B | Move D from table to A",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [D, C, A], Stack 2: [E, B] | Plan so far [] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [D, C], Stack 3: [E, B] | Exploring action Move B from E to table | New state -> Stack 1: [B], Stack 2: [D, C, A], Stack 3: [E] | Exploring action Move B from E to A | New state -> Stack 1: [D, C, A, B], Stack 2: [E] | Exploring action Move C from D to B | New state -> Invalid | Taking action Move B from E to table | Moved to state -> Stack 1: [B], Stack 2: [D, C, A], Stack 3: [E] | Plan so far [Move B from E to table] | Exploring action Move A from C to B | New state -> Stack 1: [B, A], Stack 2: [D, C], Stack 3: [E] | Exploring action Move D from table to E | New state -> Invalid | Exploring action Move C from D to table | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move A from C to E | New state -> Stack 1: [B], Stack 2: [D, C], Stack 3: [E, A] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Plan so far [Move B from E to table | Move A from C to table] | Exploring action Move D from table to E | New state -> Invalid | Exploring action Move C from D to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move C from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move B from E to table | Move A from C to table | Move C from D to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C], Stack 4: [E] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Plan so far [Move B from E to table | Move A from C to table | Move C from D to table | Move B from table to C] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [C, B], Stack 3: [E] | Exploring action Move A from table to B | New state -> Stack 1: [C, B, A], Stack 2: [D], Stack 3: [E] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [C, B], Stack 2: [D, A], Stack 3: [E] | Exploring action Move C from table to E | New state -> Invalid | Taking action Move A from table to B | Moved to state -> Stack 1: [C, B, A], Stack 2: [D], Stack 3: [E] | Plan so far [Move B from E to table | Move A from C to table | Move C from D to table | Move B from table to C | Move A from table to B] | Exploring action Move D from table to A | New state -> Stack 1: [C, B, A, D], Stack 2: [E] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Exploring action Move E from table to A | New state -> Stack 1: [C, B, A, E], Stack 2: [D] | Exploring action Move C from table to D | New state -> Invalid | Taking action Move D from table to A | Moved to state -> Stack 1: [C, B, A, D], Stack 2: [E] | Plan so far [Move B from E to table | Move A from C to table | Move C from D to table | Move B from table to C | Move A from table to B | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 26
    },
    {
        "idx": 253,
        "start": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "D",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "B",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. A is clear.\nD is on the table. C is on D. C is clear.\n\nThe goal is:\nC is on the table. B is on C. A is on B. A is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move C from D to table | Move A from B to table | Move B from table to C | Move A from table to B",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A], Stack 2: [D, C] | Plan so far [] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from D to A | New state -> Stack 1: [B, A, C], Stack 2: [D] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move C from D to table | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from D to table] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move A from B to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from D to table | Move A from B to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move C from D to table | Move A from B to table | Move B from table to C] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move A from table to B | New state -> Stack 1: [C, B, A], Stack 2: [D] | Exploring action Move C from table to D | New state -> Invalid | Taking action Move A from table to B | Moved to state -> Stack 1: [C, B, A], Stack 2: [D] | Plan so far [Move C from D to table | Move A from B to table | Move B from table to C | Move A from table to B] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 43,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "D",
                "B",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. D is on C. D is clear.\n\nThe goal is:\nC is on the table. D is on C. B is on D. A is on B. A is clear.\n",
        "system1_plan": "Move B from table to D | Move A from table to B",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C, D, B] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C, D] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C, D, B] | Plan so far [Move B from table to D] | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move A from table to B | New state -> Stack 1: [C, D, B, A] | Exploring action Move D from C to B | New state -> Invalid | Exploring action Move C from table to A | New state -> Invalid | Taking action Move A from table to B | Moved to state -> Stack 1: [C, D, B, A] | Plan so far [Move B from table to D | Move A from table to B] | Reached goal state!",
        "system2_states_v1": 10
    },
    {
        "idx": 150,
        "start": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. A is clear.\nC is on the table. D is on C. D is clear.\n\nThe goal is:\nA is on the table. C is on A. C is clear.\nB is on the table. D is on B. D is clear.\n",
        "system1_plan": "Move A from B to table | Move D from C to B | Move C from table to A",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A], Stack 2: [C, D] | Plan so far [] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C, D, A] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from C to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move B from table to D | New state -> Invalid | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move A from B to table] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move D from C to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move A from B to table | Move D from C to B] | Exploring action Move A from table to D | New state -> Stack 1: [B, D, A], Stack 2: [C] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move A from table to C | New state -> Stack 1: [B, D], Stack 2: [C, A] | Taking action Move C from table to A | Moved to state -> Stack 1: [A, C], Stack 2: [B, D] | Plan so far [Move A from B to table | Move D from C to B | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 14
    },
    {
        "idx": 254,
        "start": [
            [
                "table",
                "C",
                "D",
                "B",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. D is on C. B is on D. A is on B. A is clear.\n\nThe goal is:\nB is on the table. B is clear.\nC is on the table. A is on C. A is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move A from B to table | Move B from D to table | Move D from C to table | Move A from table to C",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, D, B, A] | Plan so far [] | Exploring action Move D from C to A | New state -> Invalid | Exploring action Move D from C to table | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C, D, B] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, D, B] | Plan so far [Move A from B to table] | Exploring action Move D from C to A | New state -> Invalid | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move A from table to B | New state -> Stack 1: [C, D, B, A] | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move A from B to table | Move B from D to table] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from B to table | Move B from D to table | Move D from C to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move A from B to table | Move B from D to table | Move D from C to table | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 16
    },
    {
        "idx": 243,
        "start": [
            [
                "table",
                "C",
                "A",
                "D",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. A is on C. D is on A. B is on D. B is clear.\n\nThe goal is:\nB is on the table. A is on B. A is clear.\nD is on the table. C is on D. C is clear.\n",
        "system1_plan": "Move B from D to table | Move D from A to table | Move A from C to B | Move C from table to D",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, A, D, B] | Plan so far [] | Exploring action Move D from A to table | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [B], Stack 2: [C, A, D] | Taking action Move B from D to table | Moved to state -> Stack 1: [B], Stack 2: [C, A, D] | Plan so far [Move B from D to table] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [C, A, D, B] | Exploring action Move D from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move D from A to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Taking action Move D from A to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move B from D to table | Move D from A to table] | Exploring action Move A from C to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move A from C to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move B from D to table | Move D from A to table | Move A from C to B] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move C from table to D | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Exploring action Move D from table to C | New state -> Stack 1: [B, A], Stack 2: [C, D] | Taking action Move C from table to D | Moved to state -> Stack 1: [B, A], Stack 2: [D, C] | Plan so far [Move B from D to table | Move D from A to table | Move A from C to B | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 14
    },
    {
        "idx": 452,
        "start": [
            [
                "table",
                "A",
                "B",
                "D"
            ],
            [
                "table",
                "C",
                "E"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "E",
                "A",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "E",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. D is on B. D is clear.\nC is on the table. E is on C. E is clear.\n\nThe goal is:\nB is on the table. B is clear.\nE is on the table. A is on E. C is on A. D is on C. D is clear.\n",
        "system1_plan": "Move D from B to table | Move B from A to table | Move E from C to table | Move A from table to E | Move C from table to A | Move D from table to C",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B, D], Stack 2: [C, E] | Plan so far [] | Exploring action Move B from A to E | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A, B], Stack 2: [C, E], Stack 3: [D] | Exploring action Move D from B to E | New state -> Stack 1: [A, B], Stack 2: [C, E, D] | Exploring action Move E from C to table | New state -> Stack 1: [A, B, D], Stack 2: [C], Stack 3: [E] | Taking action Move D from B to table | Moved to state -> Stack 1: [A, B], Stack 2: [C, E], Stack 3: [D] | Plan so far [Move D from B to table] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move E from C to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move E from C to B | New state -> Stack 1: [A, B, E], Stack 2: [C], Stack 3: [D] | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Plan so far [Move D from B to table | Move B from A to table] | Exploring action Move C from table to E | New state -> Invalid | Exploring action Move E from C to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D, E] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move E from C to A | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move E from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move E from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move D from B to table | Move B from A to table | Move E from C to table] | Exploring action Move A from table to E | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D], Stack 4: [E, A] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D], Stack 4: [E] | Taking action Move A from table to E | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D], Stack 4: [E, A] | Plan so far [Move D from B to table | Move B from A to table | Move E from C to table | Move A from table to E] | Exploring action Move E from table to B | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [B], Stack 2: [C, D], Stack 3: [E, A] | Exploring action Move C from table to A | New state -> Stack 1: [B], Stack 2: [D], Stack 3: [E, A, C] | Exploring action Move A from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move C from table to A | Moved to state -> Stack 1: [B], Stack 2: [D], Stack 3: [E, A, C] | Plan so far [Move D from B to table | Move B from A to table | Move E from C to table | Move A from table to E | Move C from table to A] | Exploring action Move A from E to table | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [B], Stack 2: [E, A, C, D] | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [E, A, C] | Exploring action Move C from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D], Stack 4: [E, A] | Exploring action Move E from table to C | New state -> Invalid | Taking action Move D from table to C | Moved to state -> Stack 1: [B], Stack 2: [E, A, C, D] | Plan so far [Move D from B to table | Move B from A to table | Move E from C to table | Move A from table to E | Move C from table to A | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 26
    },
    {
        "idx": 333,
        "start": [
            [
                "table",
                "B",
                "A",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "C",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. C is on A. D is on C. D is clear.\n\nThe goal is:\nA is on the table. D is on A. D is clear.\nC is on the table. B is on C. B is clear.\n",
        "system1_plan": "Move D from C to table | Move C from A to table | Move A from B to table | Move B from table to C | Move D from table to A",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A, C, D] | Plan so far [] | Exploring action Move C from A to table | New state -> Invalid | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [B, A, C], Stack 2: [D] | Taking action Move D from C to table | Moved to state -> Stack 1: [B, A, C], Stack 2: [D] | Plan so far [Move D from C to table] | Exploring action Move C from A to D | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [B, A, C, D] | Taking action Move C from A to table | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move D from C to table | Move C from A to table] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from C to table | Move C from A to table | Move A from B to table] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move D from C to table | Move C from A to table | Move A from B to table | Move B from table to C] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Taking action Move D from table to A | Moved to state -> Stack 1: [A, D], Stack 2: [C, B] | Plan so far [Move D from C to table | Move C from A to table | Move A from B to table | Move B from table to C | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 355,
        "start": [
            [
                "table",
                "D",
                "B",
                "A",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nD is on the table. B is on D. A is on B. C is on A. C is clear.\n\nThe goal is:\nA is on the table. B is on A. C is on B. D is on C. D is clear.\n",
        "system1_plan": "Move C from A to table | Move A from B to table | Move B from D to A | Move C from table to B | Move D from table to C",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [D, B, A, C] | Plan so far [] | Exploring action Move C from A to table | New state -> Stack 1: [C], Stack 2: [D, B, A] | Exploring action Move B from D to C | New state -> Invalid | Exploring action Move D from table to C | New state -> Invalid | Taking action Move C from A to table | Moved to state -> Stack 1: [C], Stack 2: [D, B, A] | Plan so far [Move C from A to table] | Exploring action Move B from D to C | New state -> Invalid | Exploring action Move A from B to C | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move C from table to A | New state -> Stack 1: [D, B, A, C] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move C from A to table | Move A from B to table] | Exploring action Move B from D to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move B from D to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from A to table | Move A from B to table | Move B from D to A] | Exploring action Move D from table to C | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move C from table to B | New state -> Stack 1: [A, B, C], Stack 2: [D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Taking action Move C from table to B | Moved to state -> Stack 1: [A, B, C], Stack 2: [D] | Plan so far [Move C from A to table | Move A from B to table | Move B from D to A | Move C from table to B] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A, B, C, D] | Exploring action Move C from B to D | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move C from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move D from table to C | Moved to state -> Stack 1: [A, B, C, D] | Plan so far [Move C from A to table | Move A from B to table | Move B from D to A | Move C from table to B | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 19
    },
    {
        "idx": 26,
        "start": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. A is clear.\nC is on the table. D is on C. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. D is on B. D is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move A from B to table | Move D from C to B",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A], Stack 2: [C, D] | Plan so far [] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from C to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from C to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move A from B to table] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move D from C to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move A from B to table | Move D from C to B] | Reached goal state!",
        "system2_states_v1": 8
    },
    {
        "idx": 146,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "D",
                "A",
                "B",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nD is on the table. A is on D. B is on A. C is on B. C is clear.\n",
        "system1_plan": "Move A from table to D | Move B from table to A | Move C from table to B",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move A from table to D | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move A from table to D] | Exploring action Move B from table to A | New state -> Stack 1: [C], Stack 2: [D, A, B] | Exploring action Move C from table to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Exploring action Move C from table to B | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move D from table to B | New state -> Invalid | Taking action Move B from table to A | Moved to state -> Stack 1: [C], Stack 2: [D, A, B] | Plan so far [Move A from table to D | Move B from table to A] | Exploring action Move C from table to B | New state -> Stack 1: [D, A, B, C] | Exploring action Move A from D to B | New state -> Invalid | Exploring action Move B from A to C | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from D to table | New state -> Invalid | Taking action Move C from table to B | Moved to state -> Stack 1: [D, A, B, C] | Plan so far [Move A from table to D | Move B from table to A | Move C from table to B] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 155,
        "start": [
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "B",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. C is clear.\nD is on the table. B is on D. A is on B. A is clear.\n\nThe goal is:\nA is on the table. B is on A. C is on B. C is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move A from B to table | Move B from D to A | Move C from table to B",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [C], Stack 2: [D, B, A] | Plan so far [] | Exploring action Move B from D to A | New state -> Invalid | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from B to C | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move C from table to A | New state -> Stack 1: [D, B, A, C] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move A from B to table] | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from D to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from D to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move A from B to table | Move B from D to A] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to B | New state -> Stack 1: [A, B, C], Stack 2: [D] | Taking action Move C from table to B | Moved to state -> Stack 1: [A, B, C], Stack 2: [D] | Plan so far [Move A from B to table | Move B from D to A | Move C from table to B] | Reached goal state!",
        "system2_states_v1": 15
    },
    {
        "idx": 42,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "C",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nD is on the table. C is on D. B is on C. B is clear.\n",
        "system1_plan": "Move C from table to D | Move B from table to C",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move C from table to D] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [D, C, B] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [D, C, B] | Plan so far [Move C from table to D | Move B from table to C] | Reached goal state!",
        "system2_states_v1": 7
    },
    {
        "idx": 145,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nC is on the table. D is on C. A is on D. A is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. C is on B. C is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move A from D to table | Move D from C to table | Move C from table to B",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [C, D, A] | Plan so far [] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C, D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move B from table to A | New state -> Stack 1: [C, D, A, B] | Exploring action Move D from C to A | New state -> Invalid | Exploring action Move C from table to A | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move A from D to table] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move D from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from D to table | Move D from C to table] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move A from D to table | Move D from C to table | Move C from table to B] | Reached goal state!",
        "system2_states_v1": 13
    },
    {
        "idx": 158,
        "start": [
            [
                "table",
                "B",
                "A",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "D"
            ],
            [
                "table",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. C is on A. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nB is on the table. D is on B. D is clear.\nC is on the table. A is on C. A is clear.\n",
        "system1_plan": "Move C from A to table | Move A from B to C | Move D from table to B",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A, C], Stack 2: [D] | Plan so far [] | Exploring action Move C from A to D | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move A from B to C | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [B, A, C, D] | Exploring action Move C from A to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move C from A to table | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from A to table] | Exploring action Move A from B to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move A from B to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move C from A to table | Move A from B to C] | Exploring action Move B from table to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move D from table to B | Moved to state -> Stack 1: [B, D], Stack 2: [C, A] | Plan so far [Move C from A to table | Move A from B to C | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 13
    },
    {
        "idx": 249,
        "start": [
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "B",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. C is clear.\nD is on the table. B is on D. A is on B. A is clear.\n\nThe goal is:\nB is on the table. A is on B. C is on A. C is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move A from B to table | Move B from D to table | Move A from table to B | Move C from table to A",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [C], Stack 2: [D, B, A] | Plan so far [] | Exploring action Move B from D to C | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [D, B, A, C] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move A from B to C | New state -> Stack 1: [C, A], Stack 2: [D, B] | Taking action Move C from table to A | Moved to state -> Stack 1: [D, B, A, C] | Plan so far [Move C from table to A] | Exploring action Move C from A to table | New state -> Stack 1: [C], Stack 2: [D, B, A] | Exploring action Move D from table to C | New state -> Invalid | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move A from B to table] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from D to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from B to table | Move B from D to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move A from B to table | Move B from D to table | Move A from table to B] | Exploring action Move C from table to A | New state -> Stack 1: [B, A, C], Stack 2: [D] | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to D | New state -> Invalid | Taking action Move C from table to A | Moved to state -> Stack 1: [B, A, C], Stack 2: [D] | Plan so far [Move A from B to table | Move B from D to table | Move A from table to B | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 17
    },
    {
        "idx": 45,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "C",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nD is on the table. C is on D. B is on C. B is clear.\n\nThe goal is:\nA is on the table. B is on A. B is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move B from C to A | Move C from D to table",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [D, C, B] | Plan so far [] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move A from table to B | New state -> Stack 1: [D, C, B, A] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move B from C to A | Moved to state -> Stack 1: [A, B], Stack 2: [D, C] | Plan so far [Move B from C to A] | Exploring action Move C from D to B | New state -> Stack 1: [A, B, C], Stack 2: [D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move C from D to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move C from D to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move B from C to A | Move C from D to table] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 269,
        "start": [
            [
                "table",
                "A",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. B is clear.\nC is on the table. D is on C. D is clear.\n\nThe goal is:\nB is on the table. B is clear.\nD is on the table. C is on D. A is on C. A is clear.\n",
        "system1_plan": "Move B from A to table | Move D from C to table | Move C from table to D | Move A from table to C",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B], Stack 2: [C, D] | Plan so far [] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C, D, B] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move B from A to table] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move D from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from A to table | Move D from C to table] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move B from A to table | Move D from C to table | Move C from table to D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [D, C, A] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [D, C, A] | Plan so far [Move B from A to table | Move D from C to table | Move C from table to D | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 127,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C",
                "D"
            ],
            [
                "table",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. D is on C. D is clear.\n\nThe goal is:\nA is on the table. C is on A. D is on C. D is clear.\nB is on the table. B is clear.\n",
        "system1_plan": "Move D from C to table | Move C from table to A | Move D from table to C",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move D from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from C to table] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move C from table to A | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from C to table | Move C from table to A] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A, C, D], Stack 2: [B] | Exploring action Move D from table to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move A from table to D | New state -> Invalid | Taking action Move D from table to C | Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [Move D from C to table | Move C from table to A | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 365,
        "start": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "C",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. D is clear.\nC is on the table. B is on C. B is clear.\n\nThe goal is:\nB is on the table. A is on B. C is on A. D is on C. D is clear.\n",
        "system1_plan": "Move B from C to table | Move D from A to table | Move A from table to B | Move C from table to A | Move D from table to C",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D], Stack 2: [C, B] | Plan so far [] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from C to D | New state -> Stack 1: [A, D, B], Stack 2: [C] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move B from C to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move B from C to table] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to D | New state -> Invalid | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move D from A to table] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from C to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from C to table | Move D from A to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from A to table | Move B from C to table] | Taking action Move D from A to C | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move B from C to table | Move D from A to C] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C, D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move C from table to B | New state -> Invalid | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move B from C to table | Move D from A to table | Move A from table to B] | Exploring action Move C from table to A | New state -> Stack 1: [B, A, C], Stack 2: [D] | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Exploring action Move D from table to C | New state -> Stack 1: [B, A], Stack 2: [C, D] | Exploring action Move B from table to D | New state -> Invalid | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [C, D] | Plan so far [Move B from C to table | Move D from A to C | Move A from table to B] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from C to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from C to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Taking action Move C from table to A | Moved to state -> Stack 1: [B, A, C], Stack 2: [D] | Plan so far [Move B from C to table | Move D from A to table | Move A from table to B | Move C from table to A] | Exploring action Move C from A to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [B, A, C, D] | Exploring action Move C from A to D | New state -> Stack 1: [B, A], Stack 2: [D, C] | Taking action Move D from table to C | Moved to state -> Stack 1: [B, A, C, D] | Plan so far [Move B from C to table | Move D from A to table | Move A from table to B | Move C from table to A | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 35
    },
    {
        "idx": 338,
        "start": [
            [
                "table",
                "A",
                "D",
                "B"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C",
                "A",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. B is on D. B is clear.\nC is on the table. C is clear.\n\nThe goal is:\nB is on the table. C is on B. A is on C. D is on A. D is clear.\n",
        "system1_plan": "Move B from D to table | Move C from table to B | Move D from A to table | Move A from table to C | Move D from table to A",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D, B], Stack 2: [C] | Plan so far [] | Exploring action Move B from D to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move B from D to C | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move C from table to B | New state -> Stack 1: [A, D, B, C] | Exploring action Move D from A to B | New state -> Invalid | Taking action Move B from D to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move B from D to table] | Exploring action Move B from table to C | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move A from table to C | New state -> Invalid | Taking action Move C from table to B | Moved to state -> Stack 1: [A, D], Stack 2: [B, C] | Plan so far [Move B from D to table | Move C from table to B] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [B, C, D] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from D to table | Move D from A to table] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move B from D to C | Moved to state -> Stack 1: [A, D], Stack 2: [C, B] | Plan so far [Move B from D to C] | Exploring action Move B from C to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from C to D | New state -> Stack 1: [A, D, B], Stack 2: [C] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move B from D to table | Move C from table to B | Move D from A to table] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move A from table to C | New state -> Stack 1: [B, C, A], Stack 2: [D] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to A | New state -> Invalid | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move B from D to table | Move D from A to table | Move C from table to B] | Taking action Move A from table to C | Moved to state -> Stack 1: [B, C, A], Stack 2: [D] | Plan so far [Move B from D to table | Move C from table to B | Move D from A to table | Move A from table to C] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move A from C to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [B, C, A, D] | Taking action Move D from table to A | Moved to state -> Stack 1: [B, C, A, D] | Plan so far [Move B from D to table | Move C from table to B | Move D from A to table | Move A from table to C | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 30
    },
    {
        "idx": 373,
        "start": [
            [
                "table",
                "D",
                "A",
                "B",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C",
                "D"
            ],
            [
                "table",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nD is on the table. A is on D. B is on A. C is on B. C is clear.\n\nThe goal is:\nA is on the table. C is on A. D is on C. D is clear.\nB is on the table. B is clear.\n",
        "system1_plan": "Move C from B to table | Move B from A to table | Move A from D to table | Move C from table to A | Move D from table to C",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [D, A, B, C] | Plan so far [] | Exploring action Move C from B to table | New state -> Stack 1: [C], Stack 2: [D, A, B] | Exploring action Move A from D to table | New state -> Invalid | Taking action Move C from B to table | Moved to state -> Stack 1: [C], Stack 2: [D, A, B] | Plan so far [Move C from B to table] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move B from A to C | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move C from table to B | New state -> Stack 1: [D, A, B, C] | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move B from A to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move C from B to table | Move B from A to table] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from B to table | Move B from A to table | Move A from D to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move C from table to A | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move C from B to table | Move B from A to table | Move A from D to table | Move C from table to A] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A, C, D], Stack 2: [B] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Taking action Move D from table to C | Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [Move C from B to table | Move B from A to table | Move A from D to table | Move C from table to A | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 359,
        "start": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "B",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "D",
                "B",
                "A",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. D is clear.\nB is on the table. C is on B. C is clear.\n\nThe goal is:\nD is on the table. B is on D. A is on B. C is on A. C is clear.\n",
        "system1_plan": "Move C from B to table | Move D from A to table | Move B from table to D | Move A from table to B | Move C from table to A",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D], Stack 2: [B, C] | Plan so far [] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move C from B to D | New state -> Stack 1: [A, D, C], Stack 2: [B] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Taking action Move C from B to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move C from B to table] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move D from A to table] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move C from B to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from B to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from B to table | Move D from A to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move C from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from A to table | Move C from B to table] | Taking action Move C from B to A | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from A to table | Move C from B to A] | Exploring action Move B from table to D | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move C from B to table | Move D from A to table | Move B from table to D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to B | New state -> Stack 1: [C], Stack 2: [D, B, A] | Taking action Move B from table to D | Moved to state -> Stack 1: [A, C], Stack 2: [D, B] | Plan so far [Move D from A to table | Move C from B to A | Move B from table to D] | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [D, B, C] | Exploring action Move B from D to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move D from table to C | New state -> Invalid | Taking action Move A from table to B | Moved to state -> Stack 1: [C], Stack 2: [D, B, A] | Plan so far [Move C from B to table | Move D from A to table | Move B from table to D | Move A from table to B] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [D, B, A, C] | Exploring action Move A from B to C | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move C from table to A | Moved to state -> Stack 1: [D, B, A, C] | Plan so far [Move C from B to table | Move D from A to table | Move B from table to D | Move A from table to B | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 36
    },
    {
        "idx": 160,
        "start": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. A is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. C is on B. D is on C. D is clear.\n",
        "system1_plan": "Move A from B to table | Move C from table to B | Move D from table to C",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to C | New state -> Stack 1: [B, A], Stack 2: [C, D] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from B to table] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move A from B to table | Move C from table to B] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B, C, D] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B, C, D] | Plan so far [Move A from B to table | Move C from table to B | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 241,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C",
                "B",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "D"
            ],
            [
                "table",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nC is on the table. B is on C. D is on B. D is clear.\n\nThe goal is:\nB is on the table. D is on B. D is clear.\nC is on the table. A is on C. A is clear.\n",
        "system1_plan": "Move D from B to table | Move B from C to table | Move A from table to C | Move D from table to B",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [C, B, D] | Plan so far [] | Exploring action Move A from table to D | New state -> Stack 1: [C, B, D, A] | Exploring action Move B from C to A | New state -> Invalid | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move B from C to table | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move D from B to table] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [C, B, D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from B to table | Move B from C to table] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move D from B to table | Move B from C to table | Move A from table to C] | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move B from table to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Taking action Move D from table to B | Moved to state -> Stack 1: [B, D], Stack 2: [C, A] | Plan so far [Move D from B to table | Move B from C to table | Move A from table to C | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 16
    },
    {
        "idx": 239,
        "start": [
            [
                "table",
                "A",
                "B"
            ],
            [
                "table",
                "D",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "A",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. B is clear.\nD is on the table. C is on D. C is clear.\n\nThe goal is:\nB is on the table. B is clear.\nC is on the table. A is on C. D is on A. D is clear.\n",
        "system1_plan": "Move B from A to table | Move C from D to table | Move A from table to C | Move D from table to A",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B], Stack 2: [D, C] | Plan so far [] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move C from D to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move B from A to C | New state -> Stack 1: [A], Stack 2: [D, C, B] | Exploring action Move A from table to C | New state -> Invalid | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move B from A to table] | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from D to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move D from table to A | New state -> Invalid | Taking action Move C from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from A to table | Move C from D to table] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move B from A to table | Move C from D to table | Move A from table to C] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move D from table to A | Moved to state -> Stack 1: [B], Stack 2: [C, A, D] | Plan so far [Move B from A to table | Move C from D to table | Move A from table to C | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 169,
        "start": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "D",
                "C",
                "A",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. C is clear.\nB is on the table. B is clear.\nD is on the table. D is clear.\n\nThe goal is:\nD is on the table. C is on D. A is on C. B is on A. B is clear.\n",
        "system1_plan": "Move C from A to D | Move A from table to C | Move B from table to A",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [] | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from A to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move C from A to D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [D, C, A] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [D, C, A] | Plan so far [Move C from A to D | Move A from table to C] | Exploring action Move A from C to B | New state -> Stack 1: [B, A], Stack 2: [D, C] | Exploring action Move C from D to B | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move B from table to A | New state -> Stack 1: [D, C, A, B] | Taking action Move B from table to A | Moved to state -> Stack 1: [D, C, A, B] | Plan so far [Move C from A to D | Move A from table to C | Move B from table to A] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 428,
        "start": [
            [
                "table",
                "B",
                "A",
                "C"
            ],
            [
                "table",
                "E",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "D",
                "C"
            ],
            [
                "table",
                "E",
                "B",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "E",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. C is on A. C is clear.\nE is on the table. D is on E. D is clear.\n\nThe goal is:\nD is on the table. C is on D. C is clear.\nE is on the table. B is on E. A is on B. A is clear.\n",
        "system1_plan": "Move C from A to table | Move D from E to table | Move C from table to D | Move A from B to table | Move B from table to E | Move A from table to B",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A, C], Stack 2: [E, D] | Plan so far [] | Exploring action Move D from E to table | New state -> Stack 1: [B, A, C], Stack 2: [D], Stack 3: [E] | Exploring action Move C from A to D | New state -> Stack 1: [B, A], Stack 2: [E, D, C] | Exploring action Move C from A to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [E, D] | Exploring action Move E from table to D | New state -> Invalid | Exploring action Move E from table to C | New state -> Invalid | Taking action Move C from A to table | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [E, D] | Plan so far [Move C from A to table] | Exploring action Move C from table to D | New state -> Stack 1: [B, A], Stack 2: [E, D, C] | Exploring action Move E from table to D | New state -> Invalid | Exploring action Move D from E to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Taking action Move C from A to D | Moved to state -> Stack 1: [B, A], Stack 2: [E, D, C] | Plan so far [Move C from A to D] | Exploring action Move A from B to C | New state -> Stack 1: [B], Stack 2: [E, D, C, A] | Exploring action Move E from table to C | New state -> Invalid | Exploring action Move E from table to A | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [E, D, C] | Exploring action Move C from D to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [E, D] | Taking action Move D from E to table | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Plan so far [Move C from A to table | Move D from E to table] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move B from table to E | New state -> Invalid | Exploring action Move C from table to D | New state -> Stack 1: [B, A], Stack 2: [D, C], Stack 3: [E] | Exploring action Move C from table to E | New state -> Stack 1: [B, A], Stack 2: [D], Stack 3: [E, C] | Taking action Move C from table to D | Moved to state -> Stack 1: [B, A], Stack 2: [D, C], Stack 3: [E] | Plan so far [Move C from A to table | Move D from E to table | Move C from table to D] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move A from B to E | New state -> Stack 1: [B], Stack 2: [D, C], Stack 3: [E, A] | Exploring action Move E from table to A | New state -> Stack 1: [B, A, E], Stack 2: [D, C] | Exploring action Move B from table to E | New state -> Invalid | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Plan so far [Move C from A to table | Move D from E to table | Move C from table to D | Move A from B to table] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move A from table to E | New state -> Stack 1: [B], Stack 2: [D, C], Stack 3: [E, A] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [D, C], Stack 3: [E] | Exploring action Move B from table to E | New state -> Stack 1: [A], Stack 2: [D, C], Stack 3: [E, B] | Taking action Move B from table to E | Moved to state -> Stack 1: [A], Stack 2: [D, C], Stack 3: [E, B] | Plan so far [Move C from A to table | Move D from E to table | Move C from table to D | Move A from B to table | Move B from table to E] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [D, C], Stack 2: [E, B, A] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Exploring action Move B from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Taking action Move A from table to B | Moved to state -> Stack 1: [D, C], Stack 2: [E, B, A] | Plan so far [Move C from A to table | Move D from E to table | Move C from table to D | Move A from B to table | Move B from table to E | Move A from table to B] | Reached goal state!",
        "system2_states_v1": 31
    },
    {
        "idx": 132,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "A",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nC is on the table. C is clear.\nD is on the table. B is on D. B is clear.\n\nThe goal is:\nC is on the table. C is clear.\nD is on the table. A is on D. B is on A. B is clear.\n",
        "system1_plan": "Move B from D to table | Move A from table to D | Move B from table to A",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [] | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [C], Stack 2: [D, B, A] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from D to table] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move B from D to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move B from D to A] | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move A from table to D | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move B from D to table | Move A from table to D] | Exploring action Move C from table to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [C], Stack 2: [D, A, B] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from table to A | Moved to state -> Stack 1: [C], Stack 2: [D, A, B] | Plan so far [Move B from D to table | Move A from table to D | Move B from table to A] | Reached goal state!",
        "system2_states_v1": 16
    },
    {
        "idx": 334,
        "start": [
            [
                "table",
                "A",
                "B",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "D"
            ],
            [
                "table",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. C is on B. D is on C. D is clear.\n\nThe goal is:\nB is on the table. D is on B. D is clear.\nC is on the table. A is on C. A is clear.\n",
        "system1_plan": "Move D from C to table | Move C from B to table | Move B from A to table | Move A from table to C | Move D from table to B",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B, C, D] | Plan so far [] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A, B, C], Stack 2: [D] | Exploring action Move B from A to D | New state -> Invalid | Taking action Move D from C to table | Moved to state -> Stack 1: [A, B, C], Stack 2: [D] | Plan so far [Move D from C to table] | Exploring action Move C from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A, B, C, D] | Exploring action Move C from B to D | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move B from A to C | New state -> Invalid | Taking action Move C from B to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move D from C to table | Move C from B to table] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from C to table | Move C from B to table | Move B from A to table] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move D from C to table | Move C from B to table | Move B from A to table | Move A from table to C] | Exploring action Move B from table to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Taking action Move D from table to B | Moved to state -> Stack 1: [B, D], Stack 2: [C, A] | Plan so far [Move D from C to table | Move C from B to table | Move B from A to table | Move A from table to C | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 324,
        "start": [
            [
                "table",
                "A",
                "B",
                "D",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "D",
                "C"
            ],
            [
                "table",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. D is on B. C is on D. C is clear.\n\nThe goal is:\nA is on the table. D is on A. C is on D. C is clear.\nB is on the table. B is clear.\n",
        "system1_plan": "Move C from D to table | Move D from B to table | Move B from A to table | Move D from table to A | Move C from table to D",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B, D, C] | Plan so far [] | Exploring action Move D from B to C | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move B from A to table | New state -> Invalid | Taking action Move C from D to table | Moved to state -> Stack 1: [A, B, D], Stack 2: [C] | Plan so far [Move C from D to table] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from table to D | New state -> Stack 1: [A, B, D, C] | Exploring action Move D from B to C | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move D from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move D from B to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from D to table | Move D from B to table] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from A to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move A from table to B | New state -> Invalid | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from D to table | Move D from B to table | Move B from A to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move D from table to A | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move C from D to table | Move D from B to table | Move B from A to table | Move D from table to A] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move C from table to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move C from table to D | New state -> Stack 1: [A, D, C], Stack 2: [B] | Taking action Move C from table to D | Moved to state -> Stack 1: [A, D, C], Stack 2: [B] | Plan so far [Move C from D to table | Move D from B to table | Move B from A to table | Move D from table to A | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 20
    },
    {
        "idx": 148,
        "start": [
            [
                "table",
                "B",
                "D",
                "A"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. D is on B. A is on D. A is clear.\nC is on the table. C is clear.\n\nThe goal is:\nA is on the table. A is clear.\nC is on the table. C is clear.\nD is on the table. B is on D. B is clear.\n",
        "system1_plan": "Move A from D to table | Move D from B to table | Move B from table to D",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, D, A], Stack 2: [C] | Plan so far [] | Exploring action Move A from D to C | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move C from table to A | New state -> Stack 1: [B, D, A, C] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move A from D to table] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from B to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from D to table | Move D from B to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move A from D to table | Move D from B to table | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 163,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "C",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nD is on the table. C is on D. A is on C. A is clear.\n\nThe goal is:\nA is on the table. C is on A. B is on C. B is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move A from C to table | Move C from D to A | Move B from table to C",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [D, C, A] | Plan so far [] | Exploring action Move B from table to A | New state -> Stack 1: [D, C, A, B] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from C to B | New state -> Stack 1: [B, A], Stack 2: [D, C] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move A from C to table] | Exploring action Move C from D to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to B | New state -> Invalid | Taking action Move C from D to A | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move A from C to table | Move C from D to A] | Exploring action Move D from table to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move B from table to C | New state -> Stack 1: [A, C, B], Stack 2: [D] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to C | New state -> Invalid | Taking action Move B from table to C | Moved to state -> Stack 1: [A, C, B], Stack 2: [D] | Plan so far [Move A from C to table | Move C from D to A | Move B from table to C] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 369,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C",
                "B",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "A",
                "B",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nC is on the table. B is on C. D is on B. D is clear.\n\nThe goal is:\nC is on the table. A is on C. B is on A. D is on B. D is clear.\n",
        "system1_plan": "Move D from B to table | Move B from C to table | Move A from table to C | Move B from table to A | Move D from table to B",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [C, B, D] | Plan so far [] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [C, B, D, A] | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move B from C to D | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move D from B to table] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [C, B, D] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from B to table | Move B from C to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move D from B to table | Move B from C to table | Move A from table to C] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move B from table to A | New state -> Stack 1: [C, A, B], Stack 2: [D] | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Taking action Move B from table to A | Moved to state -> Stack 1: [C, A, B], Stack 2: [D] | Plan so far [Move D from B to table | Move B from C to table | Move A from table to C | Move B from table to A] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move B from A to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [C, A, B, D] | Taking action Move D from table to B | Moved to state -> Stack 1: [C, A, B, D] | Plan so far [Move D from B to table | Move B from C to table | Move A from table to C | Move B from table to A | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 20
    },
    {
        "idx": 343,
        "start": [
            [
                "table",
                "C",
                "B",
                "A",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. A is on B. D is on A. D is clear.\n\nThe goal is:\nB is on the table. B is clear.\nD is on the table. C is on D. A is on C. A is clear.\n",
        "system1_plan": "Move D from A to table | Move A from B to table | Move B from C to table | Move C from table to D | Move A from table to C",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B, A, D] | Plan so far [] | Exploring action Move D from A to table | New state -> Stack 1: [C, B, A], Stack 2: [D] | Exploring action Move C from table to D | New state -> Invalid | Taking action Move D from A to table | Moved to state -> Stack 1: [C, B, A], Stack 2: [D] | Plan so far [Move D from A to table] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [C, B, A, D] | Exploring action Move A from B to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move D from A to table | Move A from B to table] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move B from C to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from A to table | Move A from B to table | Move B from C to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move D from A to table | Move A from B to table | Move B from C to table | Move C from table to D] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [D, C, A] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [D, C, A] | Plan so far [Move D from A to table | Move A from B to table | Move B from C to table | Move C from table to D | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 27,
        "start": [
            [
                "table",
                "D",
                "A",
                "C",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nD is on the table. A is on D. C is on A. B is on C. B is clear.\n\nThe goal is:\nB is on the table. C is on B. C is clear.\nD is on the table. A is on D. A is clear.\n",
        "system1_plan": "Move B from C to table | Move C from A to B",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [D, A, C, B] | Plan so far [] | Exploring action Move B from C to table | New state -> Stack 1: [B], Stack 2: [D, A, C] | Exploring action Move A from D to B | New state -> Invalid | Taking action Move B from C to table | Moved to state -> Stack 1: [B], Stack 2: [D, A, C] | Plan so far [Move B from C to table] | Exploring action Move A from D to table | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from A to B | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move B from table to C | New state -> Stack 1: [D, A, C, B] | Exploring action Move D from table to C | New state -> Invalid | Taking action Move C from A to B | Moved to state -> Stack 1: [B, C], Stack 2: [D, A] | Plan so far [Move B from C to table | Move C from A to B] | Reached goal state!",
        "system2_states_v1": 7
    },
    {
        "idx": 134,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "C",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nC is on the table. A is on C. A is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nD is on the table. C is on D. B is on C. B is clear.\n",
        "system1_plan": "Move A from C to table | Move C from table to D | Move B from table to C",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from C to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from C to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move A from C to table | Move C from table to D] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [D, C, B] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [D, C, B] | Plan so far [Move A from C to table | Move C from table to D | Move B from table to C] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 46,
        "start": [
            [
                "table",
                "B",
                "C"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. C is on B. C is clear.\nD is on the table. A is on D. A is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. B is clear.\nD is on the table. C is on D. C is clear.\n",
        "system1_plan": "Move A from D to table | Move C from B to D",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, C], Stack 2: [D, A] | Plan so far [] | Exploring action Move C from B to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from B to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move B from table to C | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move A from D to table] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from B to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move C from B to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move C from B to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move A from D to table | Move C from B to D] | Reached goal state!",
        "system2_states_v1": 10
    },
    {
        "idx": 133,
        "start": [
            [
                "table",
                "A",
                "B",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. C is on B. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. D is on B. D is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move C from B to table | Move B from A to table | Move D from table to B",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B, C], Stack 2: [D] | Plan so far [] | Exploring action Move C from B to D | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move B from A to C | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A, B, C, D] | Taking action Move C from B to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from B to table] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from B to table | Move B from A to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move D from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move C from B to table | Move B from A to table | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 29,
        "start": [
            [
                "table",
                "C",
                "A"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "A",
                "B",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. A is on C. A is clear.\nD is on the table. B is on D. B is clear.\n\nThe goal is:\nC is on the table. A is on C. B is on A. D is on B. D is clear.\n",
        "system1_plan": "Move B from D to A | Move D from table to B",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, A], Stack 2: [D, B] | Plan so far [] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from D to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move B from D to A | New state -> Stack 1: [C, A, B], Stack 2: [D] | Taking action Move B from D to A | Moved to state -> Stack 1: [C, A, B], Stack 2: [D] | Plan so far [Move B from D to A] | Exploring action Move D from table to B | New state -> Stack 1: [C, A, B, D] | Exploring action Move A from C to B | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from A to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Taking action Move D from table to B | Moved to state -> Stack 1: [C, A, B, D] | Plan so far [Move B from D to A | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 450,
        "start": [
            [
                "table",
                "B",
                "C",
                "E",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A",
                "C"
            ],
            [
                "table",
                "E",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "E",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. C is on B. E is on C. A is on E. A is clear.\nD is on the table. D is clear.\n\nThe goal is:\nB is on the table. A is on B. C is on A. C is clear.\nE is on the table. D is on E. D is clear.\n",
        "system1_plan": "Move A from E to table | Move E from C to table | Move D from table to E | Move C from B to table | Move A from table to B | Move C from table to A",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, C, E, A], Stack 2: [D] | Plan so far [] | Exploring action Move D from table to A | New state -> Stack 1: [B, C, E, A, D] | Exploring action Move A from E to D | New state -> Stack 1: [B, C, E], Stack 2: [D, A] | Exploring action Move A from E to table | New state -> Stack 1: [A], Stack 2: [B, C, E], Stack 3: [D] | Exploring action Move C from B to D | New state -> Invalid | Taking action Move A from E to table | Moved to state -> Stack 1: [A], Stack 2: [B, C, E], Stack 3: [D] | Plan so far [Move A from E to table] | Exploring action Move E from C to D | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D, E] | Exploring action Move C from B to table | New state -> Invalid | Exploring action Move E from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Exploring action Move E from C to A | New state -> Stack 1: [A, E], Stack 2: [B, C], Stack 3: [D] | Taking action Move E from C to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Plan so far [Move A from E to table | Move E from C to table] | Exploring action Move B from table to E | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move D from table to E | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [E, D] | Exploring action Move C from B to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D], Stack 4: [E] | Taking action Move D from table to E | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [E, D] | Plan so far [Move A from E to table | Move E from C to table | Move D from table to E] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [B, C, A], Stack 2: [E, D] | Exploring action Move C from B to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [E, D] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Exploring action Move E from table to C | New state -> Invalid | Taking action Move C from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Plan so far [Move A from E to table | Move E from C to table | Move D from table to E | Move C from B to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [E, D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [E, D] | Exploring action Move E from table to B | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [E, D] | Taking action Move C from B to A | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [E, D] | Plan so far [Move A from E to table | Move E from C to table | Move D from table to E | Move C from B to A] | Exploring action Move B from table to C | New state -> Stack 1: [A, C, B], Stack 2: [E, D] | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [E, D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [E, D] | Plan so far [Move A from E to table | Move E from C to table | Move D from table to E | Move C from B to table | Move A from table to B] | Exploring action Move D from E to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move C from table to A | New state -> Stack 1: [B, A, C], Stack 2: [E, D] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Exploring action Move E from table to D | New state -> Invalid | Taking action Move C from table to A | Moved to state -> Stack 1: [B, A, C], Stack 2: [E, D] | Plan so far [Move A from E to table | Move E from C to table | Move D from table to E | Move C from B to table | Move A from table to B | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 29
    },
    {
        "idx": 340,
        "start": [
            [
                "table",
                "A",
                "B",
                "D",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. D is on B. C is on D. C is clear.\n\nThe goal is:\nB is on the table. A is on B. D is on A. D is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move C from D to table | Move D from B to table | Move B from A to table | Move A from table to B | Move D from table to A",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B, D, C] | Plan so far [] | Exploring action Move B from A to C | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A, B, D], Stack 2: [C] | Taking action Move C from D to table | Moved to state -> Stack 1: [A, B, D], Stack 2: [C] | Plan so far [Move C from D to table] | Exploring action Move B from A to table | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to D | New state -> Stack 1: [A, B, D, C] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from B to C | New state -> Stack 1: [A, B], Stack 2: [C, D] | Taking action Move D from B to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from D to table | Move D from B to table] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from D to table | Move D from B to table | Move B from A to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move C from D to table | Move D from B to table | Move B from A to table | Move A from table to B] | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from table to A | Moved to state -> Stack 1: [B, A, D], Stack 2: [C] | Plan so far [Move C from D to table | Move D from B to table | Move B from A to table | Move A from table to B | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 19
    },
    {
        "idx": 67,
        "start": [
            [
                "table",
                "C",
                "A",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "D"
            ],
            [
                "table",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. A is on C. B is on A. B is clear.\nD is on the table. D is clear.\n\nThe goal is:\nB is on the table. D is on B. D is clear.\nC is on the table. A is on C. A is clear.\n",
        "system1_plan": "Move B from A to table | Move D from table to B",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, A, B], Stack 2: [D] | Plan so far [] | Exploring action Move B from A to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move D from table to B | New state -> Stack 1: [C, A, B, D] | Exploring action Move A from C to D | New state -> Invalid | Exploring action Move A from C to B | New state -> Invalid | Taking action Move B from A to table | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move B from A to table] | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move B from table to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move C from table to B | New state -> Invalid | Taking action Move D from table to B | Moved to state -> Stack 1: [B, D], Stack 2: [C, A] | Plan so far [Move B from A to table | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 9
    },
    {
        "idx": 129,
        "start": [
            [
                "table",
                "A",
                "C",
                "D"
            ],
            [
                "table",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. D is on C. D is clear.\nB is on the table. B is clear.\n\nThe goal is:\nB is on the table. B is clear.\nD is on the table. C is on D. A is on C. A is clear.\n",
        "system1_plan": "Move D from C to table | Move C from A to D | Move A from table to C",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [] | Exploring action Move D from C to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move B from table to D | New state -> Stack 1: [A, C, D, B] | Exploring action Move C from A to B | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to B | New state -> Invalid | Taking action Move D from C to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from C to table] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from table to C | New state -> Stack 1: [A, C, D], Stack 2: [B] | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move C from A to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move D from C to table | Move C from A to D] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [D, C, A] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [D, C, A] | Plan so far [Move D from C to table | Move C from A to D | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 14
    },
    {
        "idx": 427,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "C",
                "B",
                "E"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A"
            ],
            [
                "table",
                "D",
                "E",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "E",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "E": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nD is on the table. C is on D. B is on C. E is on B. E is clear.\n\nThe goal is:\nB is on the table. A is on B. A is clear.\nD is on the table. E is on D. C is on E. C is clear.\n",
        "system1_plan": "Move E from B to table | Move B from C to table | Move A from table to B | Move C from D to table | Move E from table to D | Move C from table to E",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [D, C, B, E] | Plan so far [] | Exploring action Move E from B to table | New state -> Stack 1: [A], Stack 2: [D, C, B], Stack 3: [E] | Exploring action Move A from table to E | New state -> Stack 1: [D, C, B, E, A] | Exploring action Move B from C to table | New state -> Invalid | Exploring action Move E from B to A | New state -> Stack 1: [A, E], Stack 2: [D, C, B] | Taking action Move E from B to table | Moved to state -> Stack 1: [A], Stack 2: [D, C, B], Stack 3: [E] | Plan so far [Move E from B to table] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [D, C, B, A], Stack 2: [E] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [D, C], Stack 3: [E] | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Plan so far [Move E from B to table | Move B from C to table] | Exploring action Move C from D to E | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [D, C], Stack 3: [E] | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [D, C], Stack 3: [E] | Plan so far [Move E from B to table | Move B from C to table | Move A from table to B] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from D to A | New state -> Stack 1: [B, A, C], Stack 2: [D], Stack 3: [E] | Exploring action Move C from D to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move C from D to E | New state -> Stack 1: [B, A], Stack 2: [D], Stack 3: [E, C] | Taking action Move C from D to table | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Plan so far [Move E from B to table | Move B from C to table | Move A from table to B | Move C from D to table] | Exploring action Move E from table to D | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D, E] | Exploring action Move B from table to E | New state -> Invalid | Exploring action Move C from table to E | New state -> Stack 1: [B, A], Stack 2: [D], Stack 3: [E, C] | Exploring action Move C from table to D | New state -> Stack 1: [B, A], Stack 2: [D, C], Stack 3: [E] | Exploring action Move B from table to D | New state -> Invalid | Taking action Move C from D to E | Moved to state -> Stack 1: [B, A], Stack 2: [D], Stack 3: [E, C] | Plan so far [Move E from B to table | Move B from C to table | Move A from table to B | Move C from D to E] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move C from E to D | New state -> Stack 1: [B, A], Stack 2: [D, C], Stack 3: [E] | Exploring action Move C from E to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [E, C] | Taking action Move E from table to D | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D, E] | Plan so far [Move E from B to table | Move B from C to table | Move A from table to B | Move C from D to table | Move E from table to D] | Exploring action Move C from table to E | New state -> Stack 1: [B, A], Stack 2: [D, E, C] | Exploring action Move B from table to E | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D, E] | Exploring action Move E from D to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Taking action Move C from table to E | Moved to state -> Stack 1: [B, A], Stack 2: [D, E, C] | Plan so far [Move E from B to table | Move B from C to table | Move A from table to B | Move C from D to table | Move E from table to D | Move C from table to E] | Reached goal state!",
        "system2_states_v1": 29
    },
    {
        "idx": 372,
        "start": [
            [
                "table",
                "C",
                "D",
                "B",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "C",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. D is on C. B is on D. A is on B. A is clear.\n\nThe goal is:\nB is on the table. B is clear.\nD is on the table. C is on D. A is on C. A is clear.\n",
        "system1_plan": "Move A from B to table | Move B from D to table | Move D from C to table | Move C from table to D | Move A from table to C",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, D, B, A] | Plan so far [] | Exploring action Move B from D to table | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C, D, B] | Exploring action Move C from table to A | New state -> Invalid | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, D, B] | Plan so far [Move A from B to table] | Exploring action Move D from C to A | New state -> Invalid | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move A from table to B | New state -> Stack 1: [C, D, B, A] | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move A from B to table | Move B from D to table] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from B to table | Move B from D to table | Move D from C to table] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move A from B to table | Move B from D to table | Move D from C to table | Move C from table to D] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [D, C, A] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to C | New state -> Invalid | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [D, C, A] | Plan so far [Move A from B to table | Move B from D to table | Move D from C to table | Move C from table to D | Move A from table to C] | Reached goal state!",
        "system2_states_v1": 18
    },
    {
        "idx": 59,
        "start": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "C",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "B"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. D is clear.\nC is on the table. B is on C. B is clear.\n\nThe goal is:\nC is on the table. B is on C. B is clear.\nD is on the table. A is on D. A is clear.\n",
        "system1_plan": "Move D from A to table | Move A from table to D",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D], Stack 2: [C, B] | Plan so far [] | Exploring action Move B from C to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [C, B, D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move D from A to table] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from table to D | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Taking action Move A from table to D | Moved to state -> Stack 1: [C, B], Stack 2: [D, A] | Plan so far [Move D from A to table | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 8
    },
    {
        "idx": 439,
        "start": [
            [
                "table",
                "A",
                "E",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A",
                "E"
            ],
            [
                "table",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "E",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "E": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. E is on A. B is on E. B is clear.\nC is on the table. D is on C. D is clear.\n\nThe goal is:\nB is on the table. A is on B. E is on A. E is clear.\nD is on the table. C is on D. C is clear.\n",
        "system1_plan": "Move B from E to table | Move D from C to table | Move C from table to D | Move E from A to table | Move A from table to B | Move E from table to A",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, E, B], Stack 2: [C, D] | Plan so far [] | Exploring action Move B from E to table | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C, D] | Exploring action Move E from A to B | New state -> Invalid | Exploring action Move B from E to D | New state -> Stack 1: [A, E], Stack 2: [C, D, B] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A, E, B], Stack 2: [C], Stack 3: [D] | Taking action Move B from E to table | Moved to state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move B from E to table] | Exploring action Move E from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D], Stack 4: [E] | Exploring action Move D from C to table | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from C to B | New state -> Stack 1: [A, E], Stack 2: [B, D], Stack 3: [C] | Exploring action Move C from table to E | New state -> Invalid | Taking action Move D from C to table | Moved to state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from E to table | Move D from C to table] | Exploring action Move C from table to D | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [D, C] | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move E from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move D from table to B | New state -> Stack 1: [A, E], Stack 2: [B, D], Stack 3: [C] | Taking action Move C from table to D | Moved to state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move B from E to table | Move D from C to table | Move C from table to D] | Exploring action Move E from A to B | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [D, C] | Exploring action Move E from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move B from table to C | New state -> Stack 1: [A, E], Stack 2: [D, C, B] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move A from table to C | New state -> Invalid | Taking action Move E from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Plan so far [Move B from E to table | Move D from C to table | Move C from table to D | Move E from A to table] | Exploring action Move E from table to A | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [D, C] | Exploring action Move A from table to E | New state -> Stack 1: [B], Stack 2: [D, C], Stack 3: [E, A] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [D, C], Stack 3: [E] | Exploring action Move D from table to E | New state -> Invalid | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [D, C], Stack 3: [E] | Plan so far [Move B from E to table | Move D from C to table | Move C from table to D | Move E from A to table | Move A from table to B] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move A from B to E | New state -> Stack 1: [B], Stack 2: [D, C], Stack 3: [E, A] | Exploring action Move E from table to A | New state -> Stack 1: [B, A, E], Stack 2: [D, C] | Taking action Move E from table to A | Moved to state -> Stack 1: [B, A, E], Stack 2: [D, C] | Plan so far [Move B from E to table | Move D from C to table | Move C from table to D | Move E from A to table | Move A from table to B | Move E from table to A] | Reached goal state!",
        "system2_states_v1": 26
    },
    {
        "idx": 135,
        "start": [
            [
                "table",
                "B",
                "A",
                "C",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. A is on B. C is on A. D is on C. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move D from C to table | Move C from A to table | Move A from B to table",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, A, C, D] | Plan so far [] | Exploring action Move D from C to table | New state -> Stack 1: [B, A, C], Stack 2: [D] | Exploring action Move A from B to table | New state -> Invalid | Exploring action Move C from A to D | New state -> Invalid | Taking action Move D from C to table | Moved to state -> Stack 1: [B, A, C], Stack 2: [D] | Plan so far [Move D from C to table] | Exploring action Move C from A to table | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [B, A, C, D] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move C from A to D | New state -> Stack 1: [B, A], Stack 2: [D, C] | Taking action Move C from A to table | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move D from C to table | Move C from A to table] | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from B to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from C to table | Move C from A to table | Move A from B to table] | Reached goal state!",
        "system2_states_v1": 11
    },
    {
        "idx": 36,
        "start": [
            [
                "table",
                "C",
                "B"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. B is on C. B is clear.\nD is on the table. A is on D. A is clear.\n\nThe goal is:\nA is on the table. B is on A. B is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move A from D to table | Move B from C to A",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, B], Stack 2: [D, A] | Plan so far [] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move B from C to A | New state -> Stack 1: [C], Stack 2: [D, A, B] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from C to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to B | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Plan so far [Move A from D to table] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from C to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move B from C to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move A from D to table | Move B from C to A] | Reached goal state!",
        "system2_states_v1": 10
    },
    {
        "idx": 229,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "C",
                "A",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nC is on the table. C is clear.\nD is on the table. B is on D. B is clear.\n\nThe goal is:\nB is on the table. C is on B. A is on C. D is on A. D is clear.\n",
        "system1_plan": "Move B from D to table | Move C from table to B | Move A from table to C | Move D from table to A",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from D to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from D to table] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move B from D to table | Move C from table to B] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move A from table to C | New state -> Stack 1: [B, C, A], Stack 2: [D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B, C, A], Stack 2: [D] | Plan so far [Move B from D to table | Move C from table to B | Move A from table to C] | Exploring action Move A from C to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [B, C, A, D] | Exploring action Move C from B to D | New state -> Invalid | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Taking action Move D from table to A | Moved to state -> Stack 1: [B, C, A, D] | Plan so far [Move B from D to table | Move C from table to B | Move A from table to C | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 17
    },
    {
        "idx": 238,
        "start": [
            [
                "table",
                "A",
                "C"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "A",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. C is clear.\nB is on the table. B is clear.\nD is on the table. D is clear.\n\nThe goal is:\nC is on the table. A is on C. D is on A. B is on D. B is clear.\n",
        "system1_plan": "Move C from A to table | Move A from table to C | Move D from table to A | Move B from table to D",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A, C], Stack 2: [D, B] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from A to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move C from A to table | Move A from table to C] | Exploring action Move B from table to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Taking action Move D from table to A | Moved to state -> Stack 1: [B], Stack 2: [C, A, D] | Plan so far [Move C from A to table | Move A from table to C | Move D from table to A] | Exploring action Move D from A to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move A from C to table | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [C, A, D, B] | Exploring action Move D from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move B from table to D | Moved to state -> Stack 1: [C, A, D, B] | Plan so far [Move C from A to table | Move A from table to C | Move D from table to A | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 16
    },
    {
        "idx": 360,
        "start": [
            [
                "table",
                "A",
                "D",
                "C",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "B",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. C is on D. B is on C. B is clear.\n\nThe goal is:\nC is on the table. B is on C. D is on B. A is on D. A is clear.\n",
        "system1_plan": "Move B from C to table | Move C from D to table | Move B from table to C | Move D from A to B | Move A from table to D",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D, C, B] | Plan so far [] | Exploring action Move C from D to table | New state -> Invalid | Exploring action Move B from C to table | New state -> Stack 1: [A, D, C], Stack 2: [B] | Taking action Move B from C to table | Moved to state -> Stack 1: [A, D, C], Stack 2: [B] | Plan so far [Move B from C to table] | Exploring action Move D from A to table | New state -> Invalid | Exploring action Move C from D to B | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move C from D to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move B from table to C | New state -> Stack 1: [A, D, C, B] | Taking action Move C from D to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [Move B from C to table | Move C from D to table] | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move B from table to C | New state -> Stack 1: [A, D], Stack 2: [C, B] | Exploring action Move A from table to D | New state -> Invalid | Taking action Move B from table to C | Moved to state -> Stack 1: [A, D], Stack 2: [C, B] | Plan so far [Move B from C to table | Move C from D to table | Move B from table to C] | Exploring action Move A from table to D | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from C to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [C, B, D] | Taking action Move D from A to B | Moved to state -> Stack 1: [A], Stack 2: [C, B, D] | Plan so far [Move B from C to table | Move C from D to table | Move B from table to C | Move D from A to B] | Exploring action Move A from table to D | New state -> Stack 1: [C, B, D, A] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from C to D | New state -> Invalid | Exploring action Move D from B to A | New state -> Stack 1: [A, D], Stack 2: [C, B] | Taking action Move A from table to D | Moved to state -> Stack 1: [C, B, D, A] | Plan so far [Move B from C to table | Move C from D to table | Move B from table to C | Move D from A to B | Move A from table to D] | Reached goal state!",
        "system2_states_v1": 19
    },
    {
        "idx": 342,
        "start": [
            [
                "table",
                "A",
                "C",
                "D"
            ],
            [
                "table",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "C",
                "A",
                "B",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. C is on A. D is on C. D is clear.\nB is on the table. B is clear.\n\nThe goal is:\nC is on the table. A is on C. B is on A. D is on B. D is clear.\n",
        "system1_plan": "Move D from C to table | Move C from A to table | Move A from table to C | Move B from table to A | Move D from table to B",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, C, D], Stack 2: [B] | Plan so far [] | Exploring action Move D from C to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move C from A to B | New state -> Invalid | Exploring action Move D from C to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [A, C, D, B] | Taking action Move D from C to table | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move D from C to table] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from C to B | Moved to state -> Stack 1: [A, C], Stack 2: [B, D] | Plan so far [Move D from C to B] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move C from A to D | New state -> Stack 1: [A], Stack 2: [B, D, C] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from C to table | Move C from A to table] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move C from A to table | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move D from C to B | Move C from A to table] | Exploring action Move A from table to C | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move B from table to C | New state -> Invalid | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move D from C to table | Move C from A to table | Move A from table to C] | Exploring action Move D from table to B | New state -> Stack 1: [B, D], Stack 2: [C, A] | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [C, A, B], Stack 2: [D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B, D], Stack 2: [C, A] | Plan so far [Move D from C to B | Move C from A to table | Move A from table to C] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from B to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move D from B to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move C from table to D | New state -> Invalid | Taking action Move B from table to A | Moved to state -> Stack 1: [C, A, B], Stack 2: [D] | Plan so far [Move D from C to table | Move C from A to table | Move A from table to C | Move B from table to A] | Exploring action Move D from table to B | New state -> Stack 1: [C, A, B, D] | Exploring action Move B from A to D | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move A from C to table | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move D from table to B | Moved to state -> Stack 1: [C, A, B, D] | Plan so far [Move D from C to table | Move C from A to table | Move A from table to C | Move B from table to A | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 35
    },
    {
        "idx": 262,
        "start": [
            [
                "table",
                "C",
                "D",
                "B",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. D is on C. B is on D. A is on B. A is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. D is on B. C is on D. C is clear.\n",
        "system1_plan": "Move A from B to table | Move B from D to table | Move D from C to B | Move C from table to D",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, D, B, A] | Plan so far [] | Exploring action Move D from C to table | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C, D, B] | Exploring action Move D from C to A | New state -> Invalid | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [C, D, B] | Plan so far [Move A from B to table] | Exploring action Move D from C to table | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move A from table to B | New state -> Stack 1: [C, D, B, A] | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C, D] | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move A from B to table | Move B from D to table] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move D from C to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from C to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move D from C to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move A from B to table | Move B from D to table | Move D from C to B] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B, D, C] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B, D, C] | Plan so far [Move A from B to table | Move B from D to table | Move D from C to B | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 15
    },
    {
        "idx": 224,
        "start": [
            [
                "table",
                "A",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. D is on B. D is clear.\nC is on the table. C is clear.\n\nThe goal is:\nB is on the table. A is on B. D is on A. D is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move D from B to table | Move B from A to table | Move A from table to B | Move D from table to A",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B, D], Stack 2: [C] | Plan so far [] | Exploring action Move D from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move B from A to table | New state -> Invalid | Exploring action Move D from B to C | New state -> Stack 1: [A, B], Stack 2: [C, D] | Exploring action Move C from table to D | New state -> Stack 1: [A, B, D, C] | Taking action Move D from B to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move D from B to table] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from B to table | Move B from A to table] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Plan so far [Move D from B to table | Move B from A to table | Move A from table to B] | Exploring action Move A from B to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move D from table to A | New state -> Stack 1: [B, A, D], Stack 2: [C] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move B from table to D | New state -> Invalid | Taking action Move D from table to A | Moved to state -> Stack 1: [B, A, D], Stack 2: [C] | Plan so far [Move D from B to table | Move B from A to table | Move A from table to B | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 16
    },
    {
        "idx": 167,
        "start": [
            [
                "table",
                "A",
                "D"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "A",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "C",
                "under": "D",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. D is clear.\nB is on the table. B is clear.\nC is on the table. C is clear.\n\nThe goal is:\nB is on the table. B is clear.\nC is on the table. A is on C. D is on A. D is clear.\n",
        "system1_plan": "Move D from A to table | Move A from table to C | Move D from table to A",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Plan so far [] | Exploring action Move D from A to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from A to table] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Taking action Move A from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Plan so far [Move D from A to table | Move A from table to C] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to A | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [B], Stack 2: [C, A, D] | Exploring action Move A from C to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from table to B | New state -> Invalid | Taking action Move D from table to A | Moved to state -> Stack 1: [B], Stack 2: [C, A, D] | Plan so far [Move D from A to table | Move A from table to C | Move D from table to A] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 467,
        "start": [
            [
                "table",
                "C",
                "D",
                "E",
                "A",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "E",
                "B"
            ],
            [
                "table",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "E",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "E",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. D is on C. E is on D. A is on E. B is on A. B is clear.\n\nThe goal is:\nA is on the table. E is on A. B is on E. B is clear.\nD is on the table. C is on D. C is clear.\n",
        "system1_plan": "Move B from A to table | Move A from E to table | Move E from D to A | Move B from table to E | Move D from C to table | Move C from table to D",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, D, E, A, B] | Plan so far [] | Exploring action Move E from D to B | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C, D, E, A] | Exploring action Move C from table to B | New state -> Invalid | Taking action Move B from A to table | Moved to state -> Stack 1: [B], Stack 2: [C, D, E, A] | Plan so far [Move B from A to table] | Exploring action Move A from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D, E] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move A from E to B | New state -> Stack 1: [B, A], Stack 2: [C, D, E] | Exploring action Move B from table to A | New state -> Stack 1: [C, D, E, A, B] | Exploring action Move D from C to A | New state -> Invalid | Taking action Move A from E to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D, E] | Plan so far [Move B from A to table | Move A from E to table] | Exploring action Move D from C to E | New state -> Invalid | Exploring action Move E from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D], Stack 4: [E] | Exploring action Move E from D to B | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C, D] | Exploring action Move E from D to A | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C, D] | Taking action Move E from D to A | Moved to state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move B from A to table | Move A from E to table | Move E from D to A] | Exploring action Move D from C to table | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from C to B | New state -> Stack 1: [A, E], Stack 2: [B, D], Stack 3: [C] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move B from table to E | New state -> Stack 1: [A, E, B], Stack 2: [C, D] | Taking action Move B from table to E | Moved to state -> Stack 1: [A, E, B], Stack 2: [C, D] | Plan so far [Move B from A to table | Move A from E to table | Move E from D to A | Move B from table to E] | Exploring action Move D from C to table | New state -> Stack 1: [A, E, B], Stack 2: [C], Stack 3: [D] | Exploring action Move B from E to table | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C, D] | Exploring action Move E from A to B | New state -> Invalid | Exploring action Move D from C to B | New state -> Stack 1: [A, E, B, D], Stack 2: [C] | Taking action Move D from C to table | Moved to state -> Stack 1: [A, E, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move B from A to table | Move A from E to table | Move E from D to A | Move B from table to E | Move D from C to table] | Exploring action Move E from A to B | New state -> Invalid | Exploring action Move D from table to B | New state -> Stack 1: [A, E, B, D], Stack 2: [C] | Exploring action Move C from table to D | New state -> Stack 1: [A, E, B], Stack 2: [D, C] | Exploring action Move D from table to C | New state -> Stack 1: [A, E, B], Stack 2: [C, D] | Taking action Move C from table to D | Moved to state -> Stack 1: [A, E, B], Stack 2: [D, C] | Plan so far [Move B from A to table | Move A from E to table | Move E from D to A | Move B from table to E | Move D from C to table | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 25
    },
    {
        "idx": 430,
        "start": [
            [
                "table",
                "E",
                "D",
                "B",
                "C",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "E"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "E",
                "under": "B",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "E": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nE is on the table. D is on E. B is on D. C is on B. A is on C. A is clear.\n\nThe goal is:\nB is on the table. B is clear.\nC is on the table. E is on C. E is clear.\nD is on the table. A is on D. A is clear.\n",
        "system1_plan": "Move A from C to table | Move C from B to table | Move B from D to table | Move D from E to table | Move A from table to D | Move E from table to C",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [E, D, B, C, A] | Plan so far [] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [E, D, B, C] | Exploring action Move E from table to A | New state -> Invalid | Exploring action Move C from B to table | New state -> Invalid | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [E, D, B, C] | Plan so far [Move A from C to table] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [E, D, B] | Exploring action Move D from E to table | New state -> Invalid | Exploring action Move C from B to A | New state -> Stack 1: [A, C], Stack 2: [E, D, B] | Exploring action Move B from D to C | New state -> Invalid | Exploring action Move A from table to C | New state -> Stack 1: [E, D, B, C, A] | Taking action Move C from B to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [E, D, B] | Plan so far [Move A from C to table | Move C from B to table] | Exploring action Move D from E to table | New state -> Invalid | Exploring action Move B from D to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [E, D] | Exploring action Move B from D to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [E, D] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Plan so far [Move A from C to table | Move C from B to table | Move B from D to table] | Exploring action Move D from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [E, D, A] | Exploring action Move D from E to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D], Stack 4: [E] | Exploring action Move E from table to D | New state -> Invalid | Taking action Move D from E to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move A from C to table | Move C from B to table | Move B from D to table | Move D from E to table] | Exploring action Move E from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Exploring action Move A from table to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D], Stack 4: [E] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Taking action Move A from table to D | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A], Stack 4: [E] | Plan so far [Move A from C to table | Move C from B to table | Move B from D to table | Move D from E to table | Move A from table to D] | Exploring action Move C from table to E | New state -> Stack 1: [B], Stack 2: [D, A], Stack 3: [E, C] | Exploring action Move B from table to E | New state -> Stack 1: [C], Stack 2: [D, A], Stack 3: [E, B] | Exploring action Move D from table to E | New state -> Invalid | Exploring action Move E from table to C | New state -> Stack 1: [B], Stack 2: [C, E], Stack 3: [D, A] | Taking action Move E from table to C | Moved to state -> Stack 1: [B], Stack 2: [C, E], Stack 3: [D, A] | Plan so far [Move A from C to table | Move C from B to table | Move B from D to table | Move D from E to table | Move A from table to D | Move E from table to C] | Reached goal state!",
        "system2_states_v1": 23
    },
    {
        "idx": 466,
        "start": [
            [
                "table",
                "D",
                "B"
            ],
            [
                "table",
                "E",
                "A",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "E",
                "D",
                "B",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "E",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "E",
                "under": "B",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nD is on the table. B is on D. B is clear.\nE is on the table. A is on E. C is on A. C is clear.\n\nThe goal is:\nA is on the table. A is clear.\nE is on the table. D is on E. B is on D. C is on B. C is clear.\n",
        "system1_plan": "Move C from A to table | Move A from E to table | Move B from D to table | Move D from table to E | Move B from table to D | Move C from table to B",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [D, B], Stack 2: [E, A, C] | Plan so far [] | Exploring action Move B from D to table | New state -> Stack 1: [B], Stack 2: [D], Stack 3: [E, A, C] | Exploring action Move A from E to C | New state -> Invalid | Exploring action Move C from A to B | New state -> Stack 1: [D, B, C], Stack 2: [E, A] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [C], Stack 2: [D, B], Stack 3: [E, A] | Taking action Move C from A to B | Moved to state -> Stack 1: [D, B, C], Stack 2: [E, A] | Plan so far [Move C from A to B] | Exploring action Move E from table to C | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [C], Stack 2: [D, B], Stack 3: [E, A] | Exploring action Move A from E to C | New state -> Stack 1: [D, B, C, A], Stack 2: [E] | Exploring action Move A from E to table | New state -> Stack 1: [A], Stack 2: [D, B, C], Stack 3: [E] | Taking action Move A from E to table | Moved to state -> Stack 1: [A], Stack 2: [D, B, C], Stack 3: [E] | Plan so far [Move C from A to B | Move A from E to table] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move A from table to E | New state -> Stack 1: [D, B, C], Stack 2: [E, A] | Exploring action Move B from D to A | New state -> Invalid | Exploring action Move E from table to A | New state -> Stack 1: [A, E], Stack 2: [D, B, C] | Taking action Move C from A to table | Moved to state -> Stack 1: [C], Stack 2: [D, B], Stack 3: [E, A] | Plan so far [Move C from A to table] | Exploring action Move B from D to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D], Stack 4: [E, A] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move A from E to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move C from table to B | New state -> Stack 1: [D, B, C], Stack 2: [E, A] | Taking action Move A from E to table | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Plan so far [Move C from A to table | Move A from E to table] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move B from D to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D], Stack 4: [E] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [D, B, C], Stack 3: [E] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [D, B, C], Stack 3: [E] | Plan so far [Move C from A to table | Move A from E to table | Move C from table to B] | Taking action Move C from table to B | Moved to state -> Stack 1: [D, B, C], Stack 2: [E, A] | Plan so far [Move C from A to table | Move C from table to B] | Taking action Move B from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move C from A to table | Move A from E to table | Move B from D to table] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move D from table to E | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Taking action Move D from table to E | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Plan so far [Move C from A to table | Move A from E to table | Move B from D to table | Move D from table to E] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [E, D, B] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [E, D] | Exploring action Move E from table to B | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [E, D] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [E, D, B] | Plan so far [Move C from A to table | Move A from E to table | Move B from D to table | Move D from table to E | Move B from table to D] | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [E, D, B] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [E, D, B, C] | Exploring action Move D from E to table | New state -> Invalid | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [E, D, B, C] | Plan so far [Move C from A to table | Move A from E to table | Move B from D to table | Move D from table to E | Move B from table to D | Move C from table to B] | Reached goal state!",
        "system2_states_v1": 33
    },
    {
        "idx": 250,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "C",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nD is on the table. C is on D. A is on C. A is clear.\n\nThe goal is:\nA is on the table. B is on A. D is on B. D is clear.\nC is on the table. C is clear.\n",
        "system1_plan": "Move A from C to table | Move C from D to table | Move B from table to A | Move D from table to B",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [D, C, A] | Plan so far [] | Exploring action Move B from table to A | New state -> Stack 1: [D, C, A, B] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move C from D to B | New state -> Invalid | Exploring action Move A from C to B | New state -> Stack 1: [B, A], Stack 2: [D, C] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move A from C to table] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from C to table | Move C from D to table] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move A from table to D | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Taking action Move B from table to A | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move A from C to table | Move C from D to table | Move B from table to A] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [A, B, D], Stack 2: [C] | Taking action Move D from table to B | Moved to state -> Stack 1: [A, B, D], Stack 2: [C] | Plan so far [Move A from C to table | Move C from D to table | Move B from table to A | Move D from table to B] | Reached goal state!",
        "system2_states_v1": 15
    },
    {
        "idx": 443,
        "start": [
            [
                "table",
                "E",
                "D",
                "C",
                "B",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C",
                "E",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "E",
                "under": "C",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "E": {
                "clear": false,
                "on": "C",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nE is on the table. D is on E. C is on D. B is on C. A is on B. A is clear.\n\nThe goal is:\nA is on the table. A is clear.\nC is on the table. E is on C. B is on E. B is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move A from B to table | Move B from C to table | Move C from D to table | Move D from E to table | Move E from table to C | Move B from table to E",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [E, D, C, B, A] | Plan so far [] | Exploring action Move D from E to A | New state -> Invalid | Exploring action Move B from C to A | New state -> Invalid | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [E, D, C, B] | Taking action Move A from B to table | Moved to state -> Stack 1: [A], Stack 2: [E, D, C, B] | Plan so far [Move A from B to table] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [E, D, C] | Exploring action Move D from E to table | New state -> Invalid | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [E, D, C] | Exploring action Move A from table to B | New state -> Stack 1: [E, D, C, B, A] | Exploring action Move C from D to A | New state -> Invalid | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [E, D, C] | Plan so far [Move A from B to table | Move B from C to table] | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [E, D] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Exploring action Move E from table to A | New state -> Invalid | Exploring action Move D from E to B | New state -> Invalid | Exploring action Move C from D to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [E, D] | Taking action Move C from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Plan so far [Move A from B to table | Move B from C to table | Move C from D to table] | Exploring action Move E from table to B | New state -> Invalid | Exploring action Move D from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move D from E to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D], Stack 4: [E] | Exploring action Move D from E to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Taking action Move D from E to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move A from B to table | Move B from C to table | Move C from D to table | Move D from E to table] | Exploring action Move C from table to E | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Exploring action Move B from table to E | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Exploring action Move E from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Taking action Move E from table to C | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Plan so far [Move A from B to table | Move B from C to table | Move C from D to table | Move D from E to table | Move E from table to C] | Exploring action Move E from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move C from table to D | New state -> Invalid | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C, E], Stack 3: [D] | Exploring action Move C from table to E | New state -> Invalid | Exploring action Move B from table to E | New state -> Stack 1: [A], Stack 2: [C, E, B], Stack 3: [D] | Taking action Move B from table to E | Moved to state -> Stack 1: [A], Stack 2: [C, E, B], Stack 3: [D] | Plan so far [Move A from B to table | Move B from C to table | Move C from D to table | Move D from E to table | Move E from table to C | Move B from table to E] | Reached goal state!",
        "system2_states_v1": 25
    },
    {
        "idx": 434,
        "start": [
            [
                "table",
                "B",
                "C",
                "E"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C",
                "D",
                "E",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "E",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "E": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "E",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": "C",
                "under": "E",
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. C is on B. E is on C. E is clear.\nD is on the table. A is on D. A is clear.\n\nThe goal is:\nA is on the table. A is clear.\nC is on the table. D is on C. E is on D. B is on E. B is clear.\n",
        "system1_plan": "Move A from D to table | Move E from C to table | Move C from B to table | Move D from table to C | Move E from table to D | Move B from table to E",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, C, E], Stack 2: [D, A] | Plan so far [] | Exploring action Move E from C to table | New state -> Stack 1: [B, C], Stack 2: [D, A], Stack 3: [E] | Exploring action Move A from D to E | New state -> Stack 1: [B, C, E, A], Stack 2: [D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, C, E], Stack 3: [D] | Exploring action Move C from B to E | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B, C, E], Stack 3: [D] | Plan so far [Move A from D to table] | Exploring action Move E from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Exploring action Move E from C to D | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D, E] | Exploring action Move E from C to A | New state -> Stack 1: [A, E], Stack 2: [B, C], Stack 3: [D] | Exploring action Move B from table to D | New state -> Invalid | Taking action Move E from C to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Plan so far [Move A from D to table | Move E from C to table] | Exploring action Move C from B to E | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D], Stack 4: [E, C] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from B to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move C from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move A from D to table | Move E from C to table | Move C from B to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move B from table to E | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D], Stack 4: [E, B] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D], Stack 4: [E] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D], Stack 4: [E] | Plan so far [Move A from D to table | Move E from C to table | Move C from B to table | Move D from table to C] | Exploring action Move D from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move C from table to B | New state -> Invalid | Exploring action Move E from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D, E] | Exploring action Move B from table to E | New state -> Stack 1: [A], Stack 2: [C, D], Stack 3: [E, B] | Taking action Move E from table to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D, E] | Plan so far [Move A from D to table | Move E from C to table | Move C from B to table | Move D from table to C | Move E from table to D] | Exploring action Move D from C to A | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C, D, E] | Exploring action Move B from table to E | New state -> Stack 1: [A], Stack 2: [C, D, E, B] | Exploring action Move E from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D], Stack 4: [E] | Taking action Move B from table to E | Moved to state -> Stack 1: [A], Stack 2: [C, D, E, B] | Plan so far [Move A from D to table | Move E from C to table | Move C from B to table | Move D from table to C | Move E from table to D | Move B from table to E] | Reached goal state!",
        "system2_states_v1": 23
    },
    {
        "idx": 228,
        "start": [
            [
                "table",
                "B",
                "C",
                "A"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "A",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. C is on B. A is on C. A is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. D is on B. C is on D. C is clear.\n",
        "system1_plan": "Move A from C to table | Move C from B to table | Move D from table to B | Move C from table to D",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, C, A], Stack 2: [D] | Plan so far [] | Exploring action Move A from C to D | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move C from B to table | New state -> Invalid | Exploring action Move D from table to A | New state -> Stack 1: [B, C, A, D] | Exploring action Move A from C to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Taking action Move A from C to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move A from C to table] | Exploring action Move C from B to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B, C, D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from C to table | Move C from B to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Taking action Move C from B to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move A from C to table | Move C from B to D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from D to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move D from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move A from C to table | Move C from B to table | Move D from table to B] | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B, D, C] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B, D, C] | Plan so far [Move A from C to table | Move C from B to table | Move D from table to B | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 20
    },
    {
        "idx": 28,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. C is on B. D is on C. D is clear.\n",
        "system1_plan": "Move C from table to B | Move D from table to C",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move C from table to B] | Exploring action Move D from table to A | New state -> Stack 1: [A, D], Stack 2: [B, C] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B, C, D] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B, C, D] | Plan so far [Move C from table to B | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 7
    },
    {
        "idx": 142,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "C",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nD is on the table. C is on D. B is on C. B is clear.\n\nThe goal is:\nA is on the table. A is clear.\nC is on the table. C is clear.\nD is on the table. B is on D. B is clear.\n",
        "system1_plan": "Move B from C to table | Move C from D to table | Move B from table to D",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [D, C, B] | Plan so far [] | Exploring action Move A from table to B | New state -> Stack 1: [D, C, B, A] | Exploring action Move B from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move B from C to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Exploring action Move C from D to B | New state -> Invalid | Taking action Move B from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move B from C to table] | Exploring action Move C from D to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move C from D to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from C to table | Move C from D to table] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move B from C to table | Move C from D to table | Move B from table to D] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 141,
        "start": [
            [
                "table",
                "C"
            ],
            [
                "table",
                "D",
                "A",
                "B"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B"
            ],
            [
                "table",
                "C",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 3,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. C is clear.\nD is on the table. A is on D. B is on A. B is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. B is clear.\nC is on the table. D is on C. D is clear.\n",
        "system1_plan": "Move B from A to table | Move A from D to table | Move D from table to C",
        "system1_states": 3,
        "system2_plan_v1": "Moved to state -> Stack 1: [C], Stack 2: [D, A, B] | Plan so far [] | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move B from A to C | New state -> Stack 1: [C, B], Stack 2: [D, A] | Exploring action Move C from table to B | New state -> Stack 1: [D, A, B, C] | Exploring action Move A from D to B | New state -> Invalid | Taking action Move B from A to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move B from A to table] | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move B from A to table | Move A from D to table] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D] | Plan so far [Move B from A to table | Move A from D to table | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 12
    },
    {
        "idx": 363,
        "start": [
            [
                "table",
                "B",
                "C"
            ],
            [
                "table",
                "D",
                "A"
            ]
        ],
        "goal": [
            [
                "table",
                "D",
                "B",
                "A",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "A",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "plan_len": 5,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. C is on B. C is clear.\nD is on the table. A is on D. A is clear.\n\nThe goal is:\nD is on the table. B is on D. A is on B. C is on A. C is clear.\n",
        "system1_plan": "Move A from D to table | Move C from B to table | Move B from table to D | Move A from table to B | Move C from table to A",
        "system1_states": 5,
        "system2_plan_v1": "Moved to state -> Stack 1: [B, C], Stack 2: [D, A] | Plan so far [] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Exploring action Move C from B to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move C from B to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Exploring action Move D from table to C | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D] | Plan so far [Move A from D to table] | Exploring action Move C from B to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move C from B to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from B to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move C from B to table] | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move C from table to A | New state -> Stack 1: [B], Stack 2: [D, A, C] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Invalid | Taking action Move C from B to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move A from D to table | Move C from B to table] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move C from B to A | Moved to state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Plan so far [Move A from D to table | Move C from B to A] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move B from table to D | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [A, C], Stack 2: [B, D] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move C from B to A | Moved to state -> Stack 1: [B], Stack 2: [D, A, C] | Plan so far [Move C from B to A] | Exploring action Move B from table to C | New state -> Stack 1: [D, A, C, B] | Exploring action Move C from A to B | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move A from D to C | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Taking action Move B from table to D | Moved to state -> Stack 1: [A, C], Stack 2: [D, B] | Plan so far [Move A from D to table | Move C from B to A | Move B from table to D] | Exploring action Move A from table to B | New state -> Invalid | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from D to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move C from A to B | New state -> Stack 1: [A], Stack 2: [D, B, C] | Exploring action Move D from table to B | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from B to table | Move A from D to table] | Taking action Move B from table to D | Moved to state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Plan so far [Move A from D to table | Move C from B to table | Move B from table to D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move A from table to B | New state -> Stack 1: [C], Stack 2: [D, B, A] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move B from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Taking action Move A from table to B | Moved to state -> Stack 1: [C], Stack 2: [D, B, A] | Plan so far [Move A from D to table | Move C from B to table | Move B from table to D | Move A from table to B] | Exploring action Move A from B to C | New state -> Stack 1: [C, A], Stack 2: [D, B] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from D to A | New state -> Invalid | Exploring action Move C from table to A | New state -> Stack 1: [D, B, A, C] | Taking action Move C from table to A | Moved to state -> Stack 1: [D, B, A, C] | Plan so far [Move A from D to table | Move C from B to table | Move B from table to D | Move A from table to B | Move C from table to A] | Reached goal state!",
        "system2_states_v1": 38
    },
    {
        "idx": 437,
        "start": [
            [
                "table",
                "A",
                "D",
                "C",
                "B",
                "E"
            ]
        ],
        "goal": [
            [
                "table",
                "B",
                "A",
                "E"
            ],
            [
                "table",
                "C"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "C",
                "under": "E",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "A",
                "under": "C",
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": "B",
                "under": "E",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "E": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. D is on A. C is on D. B is on C. E is on B. E is clear.\n\nThe goal is:\nB is on the table. A is on B. E is on A. E is clear.\nC is on the table. C is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move E from B to table | Move B from C to table | Move C from D to table | Move D from A to table | Move A from table to B | Move E from table to A",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, D, C, B, E] | Plan so far [] | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move E from B to table | New state -> Stack 1: [A, D, C, B], Stack 2: [E] | Exploring action Move C from D to E | New state -> Invalid | Taking action Move E from B to table | Moved to state -> Stack 1: [A, D, C, B], Stack 2: [E] | Plan so far [Move E from B to table] | Exploring action Move B from C to table | New state -> Stack 1: [A, D, C], Stack 2: [B], Stack 3: [E] | Exploring action Move A from table to E | New state -> Invalid | Exploring action Move E from table to B | New state -> Stack 1: [A, D, C, B, E] | Exploring action Move B from C to E | New state -> Stack 1: [A, D, C], Stack 2: [E, B] | Taking action Move B from C to table | Moved to state -> Stack 1: [A, D, C], Stack 2: [B], Stack 3: [E] | Plan so far [Move E from B to table | Move B from C to table] | Exploring action Move C from D to table | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C], Stack 4: [E] | Exploring action Move C from D to E | New state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [E, C] | Exploring action Move C from D to B | New state -> Stack 1: [A, D], Stack 2: [B, C], Stack 3: [E] | Exploring action Move D from A to table | New state -> Invalid | Taking action Move C from D to table | Moved to state -> Stack 1: [A, D], Stack 2: [B], Stack 3: [C], Stack 4: [E] | Plan so far [Move E from B to table | Move B from C to table | Move C from D to table] | Exploring action Move D from A to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C], Stack 4: [E] | Exploring action Move D from A to E | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [E, D] | Exploring action Move A from table to C | New state -> Invalid | Exploring action Move D from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Taking action Move D from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move E from B to table | Move B from C to table | Move C from D to table | Move D from A to table] | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Exploring action Move E from table to A | New state -> Stack 1: [A, E], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move A from table to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Taking action Move A from table to B | Moved to state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D], Stack 4: [E] | Plan so far [Move E from B to table | Move B from C to table | Move C from D to table | Move D from A to table | Move A from table to B] | Exploring action Move E from table to A | New state -> Stack 1: [B, A, E], Stack 2: [C], Stack 3: [D] | Exploring action Move C from table to E | New state -> Stack 1: [B, A], Stack 2: [D], Stack 3: [E, C] | Exploring action Move A from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move B from table to D | New state -> Invalid | Taking action Move E from table to A | Moved to state -> Stack 1: [B, A, E], Stack 2: [C], Stack 3: [D] | Plan so far [Move E from B to table | Move B from C to table | Move C from D to table | Move D from A to table | Move A from table to B | Move E from table to A] | Reached goal state!",
        "system2_states_v1": 22
    },
    {
        "idx": 63,
        "start": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "B",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A",
                "C",
                "B"
            ],
            [
                "table",
                "D"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "A",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 2,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. A is clear.\nD is on the table. B is on D. C is on B. C is clear.\n\nThe goal is:\nA is on the table. C is on A. B is on C. B is clear.\nD is on the table. D is clear.\n",
        "system1_plan": "Move C from B to A | Move B from D to C",
        "system1_states": 2,
        "system2_plan_v1": "Moved to state -> Stack 1: [A], Stack 2: [D, B, C] | Plan so far [] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move A from table to C | New state -> Stack 1: [D, B, C, A] | Exploring action Move C from B to A | New state -> Stack 1: [A, C], Stack 2: [D, B] | Exploring action Move B from D to C | New state -> Invalid | Taking action Move C from B to A | Moved to state -> Stack 1: [A, C], Stack 2: [D, B] | Plan so far [Move C from B to A] | Exploring action Move C from A to table | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move B from D to table | New state -> Stack 1: [A, C], Stack 2: [B], Stack 3: [D] | Exploring action Move B from D to C | New state -> Stack 1: [A, C, B], Stack 2: [D] | Exploring action Move A from table to C | New state -> Invalid | Taking action Move B from D to C | Moved to state -> Stack 1: [A, C, B], Stack 2: [D] | Plan so far [Move C from B to A | Move B from D to C] | Reached goal state!",
        "system2_states_v1": 8
    },
    {
        "idx": 232,
        "start": [
            [
                "table",
                "A",
                "B",
                "D"
            ],
            [
                "table",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "D",
                "C"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": -1,
                "under": "B",
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "D",
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "D",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": "B",
                "under": "C",
                "ontable": false
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nA is on the table. B is on A. D is on B. D is clear.\nC is on the table. C is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. D is on B. C is on D. C is clear.\n",
        "system1_plan": "Move D from B to table | Move B from A to table | Move D from table to B | Move C from table to D",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [A, B, D], Stack 2: [C] | Plan so far [] | Exploring action Move B from A to D | New state -> Invalid | Exploring action Move C from table to D | New state -> Stack 1: [A, B, D, C] | Exploring action Move D from B to table | New state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Exploring action Move D from B to C | New state -> Stack 1: [A, B], Stack 2: [C, D] | Taking action Move C from table to D | Moved to state -> Stack 1: [A, B, D, C] | Plan so far [Move C from table to D] | Exploring action Move D from B to table | New state -> Invalid | Exploring action Move C from D to table | New state -> Stack 1: [A, B, D], Stack 2: [C] | Exploring action Move A from table to C | New state -> Invalid | Taking action Move D from B to table | Moved to state -> Stack 1: [A, B], Stack 2: [C], Stack 3: [D] | Plan so far [Move D from B to table] | Exploring action Move B from A to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Exploring action Move B from A to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move B from A to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move A from table to C | New state -> Invalid | Taking action Move B from A to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move D from B to table | Move B from A to table] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move D from table to B | New state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Taking action Move D from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, D], Stack 3: [C] | Plan so far [Move D from B to table | Move B from A to table | Move D from table to B] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B, D, C] | Exploring action Move B from table to A | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move C from table to A | New state -> Stack 1: [A, C], Stack 2: [B, D] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B, D, C] | Plan so far [Move D from B to table | Move B from A to table | Move D from table to B | Move C from table to D] | Reached goal state!",
        "system2_states_v1": 19
    },
    {
        "idx": 227,
        "start": [
            [
                "table",
                "B"
            ],
            [
                "table",
                "D",
                "A",
                "C"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "D",
                "C",
                "B"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "D",
                "under": "C",
                "ontable": false
            },
            "B": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "C": {
                "clear": true,
                "on": "A",
                "under": -1,
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "A",
                "ontable": true
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": "D",
                "under": "B",
                "ontable": false
            },
            "D": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            }
        },
        "plan_len": 4,
        "num_blocks": 4,
        "prompt": "The initial state:\nThe hand is empty.\nB is on the table. B is clear.\nD is on the table. A is on D. C is on A. C is clear.\n\nThe goal is:\nA is on the table. A is clear.\nD is on the table. C is on D. B is on C. B is clear.\n",
        "system1_plan": "Move C from A to table | Move A from D to table | Move C from table to D | Move B from table to C",
        "system1_states": 4,
        "system2_plan_v1": "Moved to state -> Stack 1: [B], Stack 2: [D, A, C] | Plan so far [] | Exploring action Move C from A to B | New state -> Stack 1: [B, C], Stack 2: [D, A] | Exploring action Move B from table to C | New state -> Stack 1: [D, A, C, B] | Exploring action Move C from A to table | New state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Exploring action Move A from D to B | New state -> Invalid | Taking action Move C from A to table | Moved to state -> Stack 1: [B], Stack 2: [C], Stack 3: [D, A] | Plan so far [Move C from A to table] | Exploring action Move A from D to B | New state -> Stack 1: [B, A], Stack 2: [C], Stack 3: [D] | Exploring action Move A from D to C | New state -> Stack 1: [B], Stack 2: [C, A], Stack 3: [D] | Exploring action Move A from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to A | New state -> Invalid | Exploring action Move D from table to C | New state -> Invalid | Taking action Move A from D to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Plan so far [Move C from A to table | Move A from D to table] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B] | Exploring action Move C from table to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [C, B], Stack 3: [D] | Taking action Move C from table to D | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C] | Plan so far [Move C from A to table | Move A from D to table | Move C from table to D] | Exploring action Move D from table to B | New state -> Invalid | Exploring action Move B from table to C | New state -> Stack 1: [A], Stack 2: [D, C, B] | Exploring action Move C from D to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D] | Exploring action Move D from table to C | New state -> Invalid | Exploring action Move B from table to A | New state -> Stack 1: [A, B], Stack 2: [D, C] | Taking action Move B from table to C | Moved to state -> Stack 1: [A], Stack 2: [D, C, B] | Plan so far [Move C from A to table | Move A from D to table | Move C from table to D | Move B from table to C] | Reached goal state!",
        "system2_states_v1": 17
    },
    {
        "idx": 429,
        "start": [
            [
                "table",
                "C",
                "E",
                "A",
                "B",
                "D"
            ]
        ],
        "goal": [
            [
                "table",
                "A"
            ],
            [
                "table",
                "B",
                "C",
                "D"
            ],
            [
                "table",
                "E"
            ]
        ],
        "start_as_blocks": {
            "A": {
                "clear": false,
                "on": "E",
                "under": "B",
                "ontable": false
            },
            "B": {
                "clear": false,
                "on": "A",
                "under": "D",
                "ontable": false
            },
            "C": {
                "clear": false,
                "on": -1,
                "under": "E",
                "ontable": true
            },
            "D": {
                "clear": true,
                "on": "B",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": false,
                "on": "C",
                "under": "A",
                "ontable": false
            }
        },
        "goal_as_blocks": {
            "A": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            },
            "B": {
                "clear": false,
                "on": -1,
                "under": "C",
                "ontable": true
            },
            "C": {
                "clear": false,
                "on": "B",
                "under": "D",
                "ontable": false
            },
            "D": {
                "clear": true,
                "on": "C",
                "under": -1,
                "ontable": false
            },
            "E": {
                "clear": true,
                "on": -1,
                "under": -1,
                "ontable": true
            }
        },
        "plan_len": 6,
        "num_blocks": 5,
        "prompt": "The initial state:\nThe hand is empty.\nC is on the table. E is on C. A is on E. B is on A. D is on B. D is clear.\n\nThe goal is:\nA is on the table. A is clear.\nB is on the table. C is on B. D is on C. D is clear.\nE is on the table. E is clear.\n",
        "system1_plan": "Move D from B to table | Move B from A to table | Move A from E to table | Move E from C to table | Move C from table to B | Move D from table to C",
        "system1_states": 6,
        "system2_plan_v1": "Moved to state -> Stack 1: [C, E, A, B, D] | Plan so far [] | Exploring action Move A from E to D | New state -> Invalid | Exploring action Move B from A to table | New state -> Invalid | Exploring action Move D from B to table | New state -> Stack 1: [C, E, A, B], Stack 2: [D] | Taking action Move D from B to table | Moved to state -> Stack 1: [C, E, A, B], Stack 2: [D] | Plan so far [Move D from B to table] | Exploring action Move E from C to D | New state -> Invalid | Exploring action Move B from A to D | New state -> Stack 1: [C, E, A], Stack 2: [D, B] | Exploring action Move D from table to B | New state -> Stack 1: [C, E, A, B, D] | Exploring action Move E from C to B | New state -> Invalid | Exploring action Move B from A to table | New state -> Stack 1: [B], Stack 2: [C, E, A], Stack 3: [D] | Taking action Move B from A to table | Moved to state -> Stack 1: [B], Stack 2: [C, E, A], Stack 3: [D] | Plan so far [Move D from B to table | Move B from A to table] | Exploring action Move A from E to D | New state -> Stack 1: [B], Stack 2: [C, E], Stack 3: [D, A] | Exploring action Move E from C to table | New state -> Invalid | Exploring action Move A from E to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Exploring action Move A from E to B | New state -> Stack 1: [B, A], Stack 2: [C, E], Stack 3: [D] | Taking action Move A from E to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, E], Stack 4: [D] | Plan so far [Move D from B to table | Move B from A to table | Move A from E to table] | Exploring action Move E from C to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move C from table to E | New state -> Invalid | Exploring action Move E from C to B | New state -> Stack 1: [A], Stack 2: [B, E], Stack 3: [C], Stack 4: [D] | Exploring action Move E from C to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D, E] | Taking action Move E from C to table | Moved to state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Plan so far [Move D from B to table | Move B from A to table | Move A from E to table | Move E from C to table] | Exploring action Move C from table to B | New state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Exploring action Move B from table to D | New state -> Stack 1: [A], Stack 2: [C], Stack 3: [D, B], Stack 4: [E] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C, D], Stack 4: [E] | Taking action Move C from table to B | Moved to state -> Stack 1: [A], Stack 2: [B, C], Stack 3: [D], Stack 4: [E] | Plan so far [Move D from B to table | Move B from A to table | Move A from E to table | Move E from C to table | Move C from table to B] | Exploring action Move C from B to table | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [C], Stack 4: [D], Stack 5: [E] | Exploring action Move D from table to C | New state -> Stack 1: [A], Stack 2: [B, C, D], Stack 3: [E] | Exploring action Move B from table to C | New state -> Invalid | Exploring action Move B from table to D | New state -> Invalid | Exploring action Move C from B to D | New state -> Stack 1: [A], Stack 2: [B], Stack 3: [D, C], Stack 4: [E] | Taking action Move D from table to C | Moved to state -> Stack 1: [A], Stack 2: [B, C, D], Stack 3: [E] | Plan so far [Move D from B to table | Move B from A to table | Move A from E to table | Move E from C to table | Move C from table to B | Move D from table to C] | Reached goal state!",
        "system2_states_v1": 24
    }
]